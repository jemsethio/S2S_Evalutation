(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    331440,       7292]
NotebookOptionsPosition[    319328,       7087]
NotebookOutlinePosition[    321290,       7129]
CellTagsIndexPosition[    321210,       7124]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 TogglerBox[1, {1->
  OverlayBox[{
   TagBox[GridBox[{
      {
       GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAKiEGSLED8//9/gvjRo0fsN27cELp69arY+fPnpZExPn137tzhBqrRBGJ/
ID4CxMfRMTZ9L168YL5w4YIaUD4AiC8C8Qcg/gvE/9AxFreC7PQD4gtA/BGq
7j8ujKz3+fPnLFC9b6H24dSHTf/FixfVofYSpRdZPzSsAqBuJkovsn5oOF8k
5F9s+h88eMBBjt0w/devXxcGso+S4m9k/ZcuXRKHpgeS3A7TD0wrkpToPw9J
ywOmn1L3Uxp+lMYfpemH0vRLjfwDjQey8y9a+fGOWDPwlF+gsPhEKDywlZ8g
d0D9EniexPITGd++fZv3PBnlN6764zxa3QHCAIDESDs=
         "], {{0, 26}, {16, 
         0}}, {0, 255},
         ColorFunction->RGBColor],
        BaseStyle->"ImageGraphics",
        ImageSize->Magnification[1],
        ImageSizeRaw->{16, 26},
        PlotRange->{{0, 16}, {0, 26}}], 
       GraphicsBox[RasterBox[CompressedData["
1:eJzt2V1vVFUUBuBGTfTSSygthYYKNHyVinrrpbcYfwBEJN5gUkyMfw9KKaVw
KCkQKCW1RNIQKg1gEE3QtdN10pMRZCaBzNQ+kzxt5nzstfeZfbPOu/vkD8e/
e6+vr+/sR/Hn+ImfvpyYOPHz1x/Hl2/OnP3+9JlT33515sdTp09NfHHy/TjY
H6592Nf3QfyvqmpHBwbCYNr5GoMNAw2d1AEAADa3/obtLba1aJ7rb4xR9x1D
YVfYHYbDnjASPgn7wv4wGg6Eg+FQOByOhLEwnj4Nx8Jn6fM21dcfyzHq8cay
xuGseTDnMJpz2pdzHMk5D+caduWa6v6p+czafU71s6p1+/cGAADYqt52/9va
++6tXt331j3v0TTeoj5e966v6lv3Vv/uWfWr9LJm9tzMpN+UW3eaVV9s00yY
CzfC7bAQFhvuhjt57maYD9er9c+VcDlcCtMd1AQAADafqXQhTabz6VyL+vhk
Xl/uLX1D6UFmw9VwrVrvL0o/cqta7ztKD3Iv/BLuh1/DSngYHoXfwlp4Ep6F
38Pz8Ed4Ef5Mf71Gff5F3vM8x3iWY65ljUdZcyXncD/ndC/neDvnfCPXcC3X
NJtrnG48r3afU/2s6uc11QO/OwAAwFbzLvrfksWVjK30kSV3KxncUlgOD6qN
vnc1PK42+t7iaaq/r+U1q9VG3/ogx1rKse9krfmsrV+l15R9WDLmkjWXzLl8
yvuVsmdLJl3eu5R9XN7BNLPrhTxX3seUvT3TQc2Xbfr7LWq3JgAAwH95m33K
u9Dt5wMAAMDmp2dlK+vGnu/2+yQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYPN42aZu
1AQAAAAAAICtrNsZIXRTN/b8xTbNhLlwI9wOC2Gx4W64k+duhvlwvVr/XAmX
w6Uw3UFNAAAAAAAA6EVT6UKaTOfTuRb18cm8vtxbcrOSwc2Gq9V6FlcytlvV
eu5WMrilsBwehJXwMKyGx2EtPElPU/19La9ZzXtWcozlHHMxa9zKmnM5h9mc
03Rjfe2uq15bvb6pHvid2NzKPiwZc8maS+ZcPiWDLnu2ZNIlmy77uGTVzex6
Ic+VbLvs7ZkOau7owEAYTDtfY7BhoKGTOgAAAAAAANDr+hu2t9jWonmuvzFG
nbsNhd1hOOwJI2Fv2B9Gw4FwMBwKR8JYOJrGW9THx/LaQ3nvgRxrf449krWG
s/ZQtZH3NdfY7rrqtdW6/fvw/9LMnpuZ9Jty646y6n8AhCP7tg==
         "], {{0, 26}, {
         2000, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BaseStyle->"ImageGraphics",
        ImageSize->Magnification[1],
        ImageSizeRaw->{2000, 26},
        PlotRange->{{0, 2000}, {0, 26}}], 
       GraphicsBox[RasterBox[CompressedData["
1:eJy9lktLQkEUxyVdCBIELaxctYq+QduWbcKMPoCSRRsDC6JPp+Lj4vuq+EBc
iBtFfIYrpU7nPzQiN++9vmrgp/dx5j8z55w5c099z56HPYvF8mLnH4/37TIY
9L7fHvDNXeDl6THgv78KvPof/cELn5UfnjBHjI3J5/OudVBV9bhUKjmbzaad
iCxmcB9lAxKMmzmv1+v7JvpfG/DJjJkic8NrOut0OlYdfdoCjPXBqMx1q9Vy
7FhfgvX0MUa73bYZ6edyuTnrvPsZQ4Wv9PTRL5vNroTOGIiJu9FoOLT6UjuT
yVAqlaJkMin+0+m0YPEZbHTGQDwKyKtl+ugHjdFoRIVCgeLxOCUSCQGua7Ua
9Xo9YQNbozXI/aHVZ//RcDik2WxG5XKZwuGwANdo0JfrNIhDvFqtHi7zD+YW
i8VoMBgIvWKxKEDrdrtiHbAxiAF8pHAf5zJ9+Bca0WiUxuMxydbv98U64CvY
wNZgTyioI9r8QR/EEvrQUhRlrh8Kheb6sDHTZ1xG84ePMP/pdPpr/tvoL/of
Mcb9Jv7X+mcxP2X+QCMSiYh5VyoVMQbXMbP81I2vzM/JZCLyX+a+BPmPvbFN
fmr36pr713B/rVp7THy/tD6Y1cjF5zrahvVtB5jW5y21B/kVzpc1kecjfK53
Pu7kfNfO+x+/T/70++ob7NUEtQ==
         "], {{0, 26}, {24, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BaseStyle->"ImageGraphics",
        ImageSize->Magnification[1],
        ImageSizeRaw->{24, 26},
        PlotRange->{{0, 24}, {0, 26}}]}
     },
     AutoDelete->False,
     GridBoxItemSize->{"Columns" -> {Automatic, 
         Scaled[0.6], Automatic}},
     GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}],
    "Grid"], 
   PaneBox[
    StyleBox[
     RowBox[{
     "Background", " ", "images", " ", "and", " ", "text", " ", "colors", " ",
       "have", " ", "been", " ", "adjusted", " ", "for", " ", "editing", " ", 
      
      RowBox[{"purposes", "."}]}],
     LineBreakWithin->False,
     FontFamily->"Helvetica",
     FontSize->12,
     FontColor->GrayLevel[0.4]],
    Alignment->Center,
    ImageSize->Scaled[0.5],
    ScrollPosition->{0., 0.}]},
   Alignment->{Center, Center}], 2->""}, "1"]], "SlideShowNavigationBar", \
"FirstSlide",
 CellMargins->{{0, 0}, {0, 0}},
 CellFrameLabelMargins->2,
 CellSize->{Inherited, 30},
 TextAlignment->Center,
 CellTags->
  "SlideShowHeader",ExpressionUUID->"25e0900b-5d64-4ab0-8e07-fe9f0504c0e6"],

Cell["Deterministic Evaluation", "Title",
 CellChangeTimes->{
  3.559948400406288*^9, {3.715625686969005*^9, 3.715625699758637*^9}, {
   3.715625737415258*^9, 3.715625768804536*^9}, {3.71562739405276*^9, 
   3.7156274161535273`*^9}, {3.716645145686738*^9, 3.716645178834663*^9}, {
   3.7169164422947483`*^9, 3.716916444651846*^9}, {3.717334028736842*^9, 
   3.717334032468775*^9}},
 TextAlignment->Center,
 TextJustification->0.,ExpressionUUID->"8b59354f-01b7-4454-91fb-db15d64cd7df"],

Cell["\<\
BX Pan
2017.9.28\
\>", "Text",
 CellChangeTimes->{{3.7156257090317698`*^9, 3.7156257243000107`*^9}},
 TextAlignment->Right,
 TextJustification->0.,ExpressionUUID->"1248c6d1-c1ac-4a11-9621-02549bb28186"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"2656db73-78b7-4018-a8ef-9da22dae5d85"],

Cell[CellGroupData[{

Cell["Environment Setting", "Section",
 CellChangeTimes->{{3.717252598904813*^9, 
  3.7172526053432713`*^9}},ExpressionUUID->"1183ddb6-51fe-442c-ab1e-\
39170e3b5831"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "main", "=", "\"\</Users/lambda/Documents/Research/3_S2SEvaluation/\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"models", "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{
      "SetDirectory", "[", 
       "\"\</Users/lambda/Documents/Research/3_S2SEvaluation/Data\>\"", "]"}],
       ";", "\n", "\t", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"FileNames", "[", "]"}], ",", 
        RowBox[{
         RowBox[{"StringFreeQ", "[", 
          RowBox[{"#", ",", "\"\<.\>\""}], "]"}], "&"}]}], "]"}]}]}], "]"}]}],
   ";"}]}], "Code",
 CellChangeTimes->{{3.7172526583188953`*^9, 3.717252670309132*^9}, {
   3.717252718885466*^9, 3.717252782218659*^9}, 
   3.7172530720948057`*^9},ExpressionUUID->"69f9e5e5-95b7-44ab-bd12-\
c3ef3933c724"],

Cell[BoxData[
 RowBox[{
  RowBox[{"datasets", "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"models", ",", "primary", ",", "size", ",", "frequency"}], 
      "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{
      "SetDirectory", "[", 
       "\"\</Users/lambda/Documents/Research/3_S2SEvaluation/Data\>\"", "]"}],
       ";", "\n", "\t", 
      RowBox[{"models", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"FileNames", "[", "]"}], ",", 
         RowBox[{
          RowBox[{"StringFreeQ", "[", 
           RowBox[{"#", ",", "\"\<.\>\""}], "]"}], "&"}]}], "]"}]}], ";", 
      "\n", "\t", 
      RowBox[{"primary", "=", 
       RowBox[{"{", "\n", "\t\t", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Green", ",", "\"\<BoM\>\"", ",", 
           NamespaceBox["LinguisticAssistant",
            
            DynamicModuleBox[{Typeset`query$$ = "\"Australia\"", 
             Typeset`boxes$$ = TemplateBox[{"\"Australia\"", 
               RowBox[{"Entity", "[", 
                 RowBox[{"\"Country\"", ",", "\"Australia\""}], "]"}], 
               "\"Entity[\\\"Country\\\", \\\"Australia\\\"]\"", 
               "\"country\""}, "Entity"], 
             Typeset`allassumptions$$ = {{
              "type" -> "Clash", "word" -> "Australia", "template" -> 
               "Assuming \"${word}\" is ${desc1}. Use as ${desc2} instead", 
               "count" -> "2", 
               "Values" -> {{
                 "name" -> "Country", "desc" -> "a country", "input" -> 
                  "*C.Australia-_*Country-"}, {
                 "name" -> "GeographicRegion", "desc" -> "a continent", 
                  "input" -> "*C.Australia-_*GeographicRegion-"}}}}, 
             Typeset`assumptions$$ = {}, Typeset`open$$ = {1, 2}, 
             Typeset`querystate$$ = {
             "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
              0.424041`6.078952843515372, "Messages" -> {}}}, 
             DynamicBox[ToBoxes[
               AlphaIntegration`LinguisticAssistantBoxes[
               "\"Australia\"", 4, Automatic, 
                Dynamic[Typeset`query$$], 
                Dynamic[Typeset`boxes$$], 
                Dynamic[Typeset`allassumptions$$], 
                Dynamic[Typeset`assumptions$$], 
                Dynamic[Typeset`open$$], 
                Dynamic[Typeset`querystate$$]], StandardForm],
              ImageSizeCache->{208., {10., 23.}},
              
              TrackedSymbols:>{
               Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
                Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
             
             DynamicModuleValues:>{},
             UndoTrackedVariables:>{Typeset`open$$}],
            BaseStyle->{"Deploy"},
            DeleteWithContents->True,
            Editable->False,
            SelectWithContents->True]}], "}"}], ",", "    ", "\n", "\t\t", 
         RowBox[{"{", 
          RowBox[{"Red", ",", "\"\<CMA\>\"", ",", 
           NamespaceBox["LinguisticAssistant",
            
            DynamicModuleBox[{Typeset`query$$ = "\"China\"", Typeset`boxes$$ =
              TemplateBox[{"\"China\"", 
               RowBox[{"Entity", "[", 
                 RowBox[{"\"Country\"", ",", "\"China\""}], "]"}], 
               "\"Entity[\\\"Country\\\", \\\"China\\\"]\"", "\"country\""}, 
              "Entity"], 
             Typeset`allassumptions$$ = {{
              "type" -> "Clash", "word" -> "China", "template" -> 
               "Assuming \"${word}\" is ${desc1}. Use as ${desc2} instead", 
               "count" -> "4", 
               "Values" -> {{
                 "name" -> "Country", "desc" -> "a country", "input" -> 
                  "*C.China-_*Country-"}, {
                 "name" -> "Species", "desc" -> "a species specification", 
                  "input" -> "*C.China-_*Species-"}, {
                 "name" -> "GivenName", "desc" -> "a given name", "input" -> 
                  "*C.China-_*GivenName-"}, {
                 "name" -> "AdministrativeDivision", "desc" -> 
                  "an administrative division", "input" -> 
                  "*C.China-_*AdministrativeDivision-"}}}}, 
             Typeset`assumptions$$ = {}, Typeset`open$$ = {1, 2}, 
             Typeset`querystate$$ = {
             "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
              0.354964`6.001729303187288, "Messages" -> {}}}, 
             DynamicBox[ToBoxes[
               AlphaIntegration`LinguisticAssistantBoxes[
               "\"China\"", 4, Automatic, 
                Dynamic[Typeset`query$$], 
                Dynamic[Typeset`boxes$$], 
                Dynamic[Typeset`allassumptions$$], 
                Dynamic[Typeset`assumptions$$], 
                Dynamic[Typeset`open$$], 
                Dynamic[Typeset`querystate$$]], StandardForm],
              ImageSizeCache->{178., {10., 23.}},
              
              TrackedSymbols:>{
               Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
                Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
             
             DynamicModuleValues:>{},
             UndoTrackedVariables:>{Typeset`open$$}],
            BaseStyle->{"Deploy"},
            DeleteWithContents->True,
            Editable->False,
            SelectWithContents->True]}], "}"}], ",", "  ", "\n", "\t\t", 
         RowBox[{"{", 
          RowBox[{
          "Purple", ",", 
           "\"\<\!\(\*StyleBox[\"ECCC\",FontWeight->\"Bold\"]\)\>\"", ",", 
           NamespaceBox["LinguisticAssistant",
            
            DynamicModuleBox[{Typeset`query$$ = "\"Canada\"", 
             Typeset`boxes$$ = TemplateBox[{"\"Canada\"", 
               RowBox[{"Entity", "[", 
                 RowBox[{"\"Country\"", ",", "\"Canada\""}], "]"}], 
               "\"Entity[\\\"Country\\\", \\\"Canada\\\"]\"", "\"country\""}, 
              "Entity"], Typeset`allassumptions$$ = {}, 
             Typeset`assumptions$$ = {}, Typeset`open$$ = {1, 2}, 
             Typeset`querystate$$ = {
             "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
              0.345488`5.989977960910129, "Messages" -> {}}}, 
             DynamicBox[ToBoxes[
               AlphaIntegration`LinguisticAssistantBoxes[
               "\"Canada\"", 4, Automatic, 
                Dynamic[Typeset`query$$], 
                Dynamic[Typeset`boxes$$], 
                Dynamic[Typeset`allassumptions$$], 
                Dynamic[Typeset`assumptions$$], 
                Dynamic[Typeset`open$$], 
                Dynamic[Typeset`querystate$$]], StandardForm],
              ImageSizeCache->{166., {10., 23.}},
              
              TrackedSymbols:>{
               Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
                Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
             
             DynamicModuleValues:>{},
             UndoTrackedVariables:>{Typeset`open$$}],
            BaseStyle->{"Deploy"},
            DeleteWithContents->True,
            Editable->False,
            SelectWithContents->True]}], "}"}], ",", " ", "\n", "\t\t", 
         RowBox[{"{", 
          RowBox[{
          "Gray", ",", 
           "\"\<\!\(\*StyleBox[\"ECMWF\",FontWeight->\"Bold\"]\)\>\"", ",", 
           NamespaceBox["LinguisticAssistant",
            
            DynamicModuleBox[{Typeset`query$$ = "\"Europe\"", 
             Typeset`boxes$$ = TemplateBox[{"\"Europe\"", 
               RowBox[{"Entity", "[", 
                 RowBox[{"\"GeographicRegion\"", ",", "\"Europe\""}], "]"}], 
               "\"Entity[\\\"GeographicRegion\\\", \\\"Europe\\\"]\"", 
               "\"geographic region\""}, "Entity"], 
             Typeset`allassumptions$$ = {{
              "type" -> "Clash", "word" -> "Europe", "template" -> 
               "Assuming \"${word}\" is ${desc1}. Use as ${desc2} instead", 
               "count" -> "3", 
               "Values" -> {{
                 "name" -> "GeographicRegion", "desc" -> "a continent", 
                  "input" -> "*C.Europe-_*GeographicRegion-"}, {
                 "name" -> "CountryClass", "desc" -> "a class of countries", 
                  "input" -> "*C.Europe-_*CountryClass-"}, {
                 "name" -> "Word", "desc" -> "a word", "input" -> 
                  "*C.Europe-_*Word-"}}}}, Typeset`assumptions$$ = {}, 
             Typeset`open$$ = {1, 2}, Typeset`querystate$$ = {
             "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
              0.36468`6.013456939623542, "Messages" -> {}}}, 
             DynamicBox[ToBoxes[
               AlphaIntegration`LinguisticAssistantBoxes[
               "\"Europe\"", 4, Automatic, 
                Dynamic[Typeset`query$$], 
                Dynamic[Typeset`boxes$$], 
                Dynamic[Typeset`allassumptions$$], 
                Dynamic[Typeset`assumptions$$], 
                Dynamic[Typeset`open$$], 
                Dynamic[Typeset`querystate$$]], StandardForm],
              ImageSizeCache->{247., {10., 23.}},
              
              TrackedSymbols:>{
               Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
                Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
             
             DynamicModuleValues:>{},
             UndoTrackedVariables:>{Typeset`open$$}],
            BaseStyle->{"Deploy"},
            DeleteWithContents->True,
            Editable->False,
            SelectWithContents->True]}], "}"}], ",", "\n", "\t\t", 
         RowBox[{"{", 
          RowBox[{
          "Magenta", ",", 
           "\"\<\!\(\*StyleBox[\"HMCR\",FontWeight->\"Bold\"]\)\>\"", ",", 
           NamespaceBox["LinguisticAssistant",
            
            DynamicModuleBox[{Typeset`query$$ = "\"Russia\"", 
             Typeset`boxes$$ = TemplateBox[{"\"Russia\"", 
               RowBox[{"Entity", "[", 
                 RowBox[{"\"Country\"", ",", "\"Russia\""}], "]"}], 
               "\"Entity[\\\"Country\\\", \\\"Russia\\\"]\"", "\"country\""}, 
              "Entity"], Typeset`allassumptions$$ = {}, 
             Typeset`assumptions$$ = {}, Typeset`open$$ = {1, 2}, 
             Typeset`querystate$$ = {
             "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
              0.309507`5.942215469233356, "Messages" -> {}}}, 
             DynamicBox[ToBoxes[
               AlphaIntegration`LinguisticAssistantBoxes[
               "\"Russia\"", 4, Automatic, 
                Dynamic[Typeset`query$$], 
                Dynamic[Typeset`boxes$$], 
                Dynamic[Typeset`allassumptions$$], 
                Dynamic[Typeset`assumptions$$], 
                Dynamic[Typeset`open$$], 
                Dynamic[Typeset`querystate$$]], StandardForm],
              ImageSizeCache->{160., {10., 23.}},
              
              TrackedSymbols:>{
               Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
                Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
             
             DynamicModuleValues:>{},
             UndoTrackedVariables:>{Typeset`open$$}],
            BaseStyle->{"Deploy"},
            DeleteWithContents->True,
            Editable->False,
            SelectWithContents->True]}], "}"}], ",", "   ", "\n", "\t\t", 
         RowBox[{"{", 
          RowBox[{"Yellow", ",", " ", "\"\<ISAC-CNR\>\"", ",", 
           NamespaceBox["LinguisticAssistant",
            
            DynamicModuleBox[{Typeset`query$$ = "\"Italy\"", Typeset`boxes$$ =
              TemplateBox[{"\"Italy\"", 
               RowBox[{"Entity", "[", 
                 RowBox[{"\"Country\"", ",", "\"Italy\""}], "]"}], 
               "\"Entity[\\\"Country\\\", \\\"Italy\\\"]\"", "\"country\""}, 
              "Entity"], Typeset`allassumptions$$ = {}, 
             Typeset`assumptions$$ = {}, Typeset`open$$ = {1, 2}, 
             Typeset`querystate$$ = {
             "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
              0.321578`5.958831323356535, "Messages" -> {}}}, 
             DynamicBox[ToBoxes[
               AlphaIntegration`LinguisticAssistantBoxes[
               "\"Italy\"", 4, Automatic, 
                Dynamic[Typeset`query$$], 
                Dynamic[Typeset`boxes$$], 
                Dynamic[Typeset`allassumptions$$], 
                Dynamic[Typeset`assumptions$$], 
                Dynamic[Typeset`open$$], 
                Dynamic[Typeset`querystate$$]], StandardForm],
              ImageSizeCache->{134., {10., 23.}},
              
              TrackedSymbols:>{
               Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
                Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
             
             DynamicModuleValues:>{},
             UndoTrackedVariables:>{Typeset`open$$}],
            BaseStyle->{"Deploy"},
            DeleteWithContents->True,
            Editable->False,
            SelectWithContents->True]}], "}"}], ",", " ", "\n", "\t\t", 
         RowBox[{"{", 
          RowBox[{"LightPurple", ",", "\"\<JMA\>\"", ",", " ", 
           NamespaceBox["LinguisticAssistant",
            
            DynamicModuleBox[{Typeset`query$$ = "\"Japan\"", Typeset`boxes$$ =
              TemplateBox[{"\"Japan\"", 
               RowBox[{"Entity", "[", 
                 RowBox[{"\"Country\"", ",", "\"Japan\""}], "]"}], 
               "\"Entity[\\\"Country\\\", \\\"Japan\\\"]\"", "\"country\""}, 
              "Entity"], Typeset`allassumptions$$ = {}, 
             Typeset`assumptions$$ = {}, Typeset`open$$ = {1, 2}, 
             Typeset`querystate$$ = {
             "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
              0.353139`5.999490676364898, "Messages" -> {}}}, 
             DynamicBox[ToBoxes[
               AlphaIntegration`LinguisticAssistantBoxes[
               "\"Japan\"", 4, Automatic, 
                Dynamic[Typeset`query$$], 
                Dynamic[Typeset`boxes$$], 
                Dynamic[Typeset`allassumptions$$], 
                Dynamic[Typeset`assumptions$$], 
                Dynamic[Typeset`open$$], 
                Dynamic[Typeset`querystate$$]], StandardForm],
              ImageSizeCache->{152., {10., 23.}},
              
              TrackedSymbols:>{
               Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
                Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
             
             DynamicModuleValues:>{},
             UndoTrackedVariables:>{Typeset`open$$}],
            BaseStyle->{"Deploy"},
            DeleteWithContents->True,
            Editable->False,
            SelectWithContents->True]}], "}"}], ",", "\n", "\t\t", 
         RowBox[{"{", 
          RowBox[{
          "Brown", ",", " ", 
           "\"\<\!\(\*StyleBox[\"KMA\",FontWeight->\"Bold\"]\)\>\"", ",", 
           NamespaceBox["LinguisticAssistant",
            
            DynamicModuleBox[{Typeset`query$$ = "\"United Kingdom\"", 
             Typeset`boxes$$ = TemplateBox[{"\"United Kingdom\"", 
               RowBox[{"Entity", "[", 
                 RowBox[{"\"Country\"", ",", "\"UnitedKingdom\""}], "]"}], 
               "\"Entity[\\\"Country\\\", \\\"UnitedKingdom\\\"]\"", 
               "\"country\""}, "Entity"], 
             Typeset`allassumptions$$ = {{
              "type" -> "Clash", "word" -> "United Kingdom", "template" -> 
               "Assuming \"${word}\" is ${desc1}. Use as ${desc2} instead", 
               "count" -> "2", 
               "Values" -> {{
                 "name" -> "Country", "desc" -> "a country", "input" -> 
                  "*C.United+Kingdom-_*Country-"}, {
                 "name" -> "MusicWork", "desc" -> "a music work", "input" -> 
                  "*C.United+Kingdom-_*MusicWork-"}}}}, 
             Typeset`assumptions$$ = {}, Typeset`open$$ = {1, 2}, 
             Typeset`querystate$$ = {
             "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
              0.389332`6.041865094240275, "Messages" -> {}}}, 
             DynamicBox[ToBoxes[
               AlphaIntegration`LinguisticAssistantBoxes[
               "\"United Kingdom\"", 4, Automatic, 
                Dynamic[Typeset`query$$], 
                Dynamic[Typeset`boxes$$], 
                Dynamic[Typeset`allassumptions$$], 
                Dynamic[Typeset`assumptions$$], 
                Dynamic[Typeset`open$$], 
                Dynamic[Typeset`querystate$$]], StandardForm],
              ImageSizeCache->{277., {10., 23.}},
              
              TrackedSymbols:>{
               Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
                Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
             
             DynamicModuleValues:>{},
             UndoTrackedVariables:>{Typeset`open$$}],
            BaseStyle->{"Deploy"},
            DeleteWithContents->True,
            Editable->False,
            SelectWithContents->True]}], "}"}], ",", "  ", "\n", "\t\t", 
         RowBox[{"{", 
          RowBox[{"Cyan", ",", "\"\<M\[EAcute]t\[EAcute]o-France\>\"", ",", 
           NamespaceBox["LinguisticAssistant",
            
            DynamicModuleBox[{Typeset`query$$ = "\"France\"", 
             Typeset`boxes$$ = TemplateBox[{"\"France\"", 
               RowBox[{"Entity", "[", 
                 RowBox[{"\"Country\"", ",", "\"France\""}], "]"}], 
               "\"Entity[\\\"Country\\\", \\\"France\\\"]\"", "\"country\""}, 
              "Entity"], 
             Typeset`allassumptions$$ = {{
              "type" -> "Clash", "word" -> "France", "template" -> 
               "Assuming \"${word}\" is ${desc1}. Use as ${desc2} instead", 
               "count" -> "2", 
               "Values" -> {{
                 "name" -> "Country", "desc" -> "a country", "input" -> 
                  "*C.France-_*Country-"}, {
                 "name" -> "GivenName", "desc" -> "a given name", "input" -> 
                  "*C.France-_*GivenName-"}}}}, Typeset`assumptions$$ = {}, 
             Typeset`open$$ = {1, 2}, Typeset`querystate$$ = {
             "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
              0.333746`5.974961062809918, "Messages" -> {}}}, 
             DynamicBox[ToBoxes[
               AlphaIntegration`LinguisticAssistantBoxes[
               "\"France\"", 4, Automatic, 
                Dynamic[Typeset`query$$], 
                Dynamic[Typeset`boxes$$], 
                Dynamic[Typeset`allassumptions$$], 
                Dynamic[Typeset`assumptions$$], 
                Dynamic[Typeset`open$$], 
                Dynamic[Typeset`querystate$$]], StandardForm],
              ImageSizeCache->{188., {10., 23.}},
              
              TrackedSymbols:>{
               Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
                Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
             
             DynamicModuleValues:>{},
             UndoTrackedVariables:>{Typeset`open$$}],
            BaseStyle->{"Deploy"},
            DeleteWithContents->True,
            Editable->False,
            SelectWithContents->True]}], "}"}], ",", "  ", "\n", "\t\t", 
         RowBox[{"{", 
          RowBox[{"Blue", ",", "\"\<NCEP\>\"", ",", 
           NamespaceBox["LinguisticAssistant",
            
            DynamicModuleBox[{Typeset`query$$ = "\"United States\"", 
             Typeset`boxes$$ = TemplateBox[{"\"United States\"", 
               RowBox[{"Entity", "[", 
                 RowBox[{"\"Country\"", ",", "\"UnitedStates\""}], "]"}], 
               "\"Entity[\\\"Country\\\", \\\"UnitedStates\\\"]\"", 
               "\"country\""}, "Entity"], Typeset`allassumptions$$ = {}, 
             Typeset`assumptions$$ = {}, Typeset`open$$ = {1, 2}, 
             Typeset`querystate$$ = {
             "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
              1.090617`6.489217256467764, "Messages" -> {}}}, 
             DynamicBox[ToBoxes[
               AlphaIntegration`LinguisticAssistantBoxes[
               "\"United States\"", 4, Automatic, 
                Dynamic[Typeset`query$$], 
                Dynamic[Typeset`boxes$$], 
                Dynamic[Typeset`allassumptions$$], 
                Dynamic[Typeset`assumptions$$], 
                Dynamic[Typeset`open$$], 
                Dynamic[Typeset`querystate$$]], StandardForm],
              ImageSizeCache->{222., {10., 23.}},
              
              TrackedSymbols:>{
               Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
                Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
             
             DynamicModuleValues:>{},
             UndoTrackedVariables:>{Typeset`open$$}],
            BaseStyle->{"Deploy"},
            DeleteWithContents->True,
            Editable->False,
            SelectWithContents->True]}], "}"}], ",", "\n", "\t\t", 
         RowBox[{"{", 
          RowBox[{
          "Orange", ",", " ", 
           "\"\<\!\(\*StyleBox[\"UKMO\",FontWeight->\"Bold\"]\)\>\"", ",", 
           NamespaceBox["LinguisticAssistant",
            
            DynamicModuleBox[{Typeset`query$$ = "\"United Kingdom\"", 
             Typeset`boxes$$ = TemplateBox[{"\"United Kingdom\"", 
               RowBox[{"Entity", "[", 
                 RowBox[{"\"Country\"", ",", "\"UnitedKingdom\""}], "]"}], 
               "\"Entity[\\\"Country\\\", \\\"UnitedKingdom\\\"]\"", 
               "\"country\""}, "Entity"], 
             Typeset`allassumptions$$ = {{
              "type" -> "Clash", "word" -> "United Kingdom", "template" -> 
               "Assuming \"${word}\" is ${desc1}. Use as ${desc2} instead", 
               "count" -> "2", 
               "Values" -> {{
                 "name" -> "Country", "desc" -> "a country", "input" -> 
                  "*C.United+Kingdom-_*Country-"}, {
                 "name" -> "MusicWork", "desc" -> "a music work", "input" -> 
                  "*C.United+Kingdom-_*MusicWork-"}}}}, 
             Typeset`assumptions$$ = {}, Typeset`open$$ = {1, 2}, 
             Typeset`querystate$$ = {
             "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
              0.373719`6.024090171584828, "Messages" -> {}}}, 
             DynamicBox[ToBoxes[
               AlphaIntegration`LinguisticAssistantBoxes[
               "\"United Kingdom\"", 4, Automatic, 
                Dynamic[Typeset`query$$], 
                Dynamic[Typeset`boxes$$], 
                Dynamic[Typeset`allassumptions$$], 
                Dynamic[Typeset`assumptions$$], 
                Dynamic[Typeset`open$$], 
                Dynamic[Typeset`querystate$$]], StandardForm],
              ImageSizeCache->{277., {10., 23.}},
              
              TrackedSymbols:>{
               Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
                Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
             
             DynamicModuleValues:>{},
             UndoTrackedVariables:>{Typeset`open$$}],
            BaseStyle->{"Deploy"},
            DeleteWithContents->True,
            Editable->False,
            SelectWithContents->True]}], "}"}]}], "}"}]}], ";", "\n", "\t", 
      RowBox[{"size", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Block", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"data", "=", 
               RowBox[{"Import", "[", 
                RowBox[{
                "\"\</Users/lambda/Documents/Research/3_S2SEvaluation/Data/\>\
\"", "<>", "#", "<>", "\"\</\>\"", "<>", "#", "<>", "\"\<.mx\>\""}], "]"}]}], 
              "}"}], ",", "\n", "\t\t", 
             RowBox[{"Dimensions", "[", 
              RowBox[{"data", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"{", 
             RowBox[{"1", ",", "3"}], "}"}], "]"}], "]"}], "&"}], ",", 
         "models"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"frequency", "=", 
       RowBox[{"Block", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"time", ",", "f", ",", "e"}], "}"}], ",", "\n", "\t\t", 
         RowBox[{
          RowBox[{"time", "=", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Import", "[", 
               RowBox[{
               "\"\</Users/lambda/Documents/Research/3_S2SEvaluation/Data/\>\"\
", "<>", "#", "<>", "\"\</\>\"", "<>", "#", "<>", 
                "\"\<_control_time.mx\>\""}], "]"}], "&"}], ",", "models"}], 
            "]"}]}], ";", "\n", "\t\t", 
          RowBox[{"f", "=", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Round", "[", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", "0.1"}], "]"}], "&"}], 
             ",", 
             RowBox[{"Map", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"DateDifference", "[", 
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}], ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Length", "[", "#", "]"}], "+", "0.0"}], ")"}]}], 
                "&"}], ",", "time"}], "]"}]}], "]"}]}], ";", "\n", "\t\t", 
          RowBox[{"e", "=", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
                RowBox[{"#", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}]}], "}"}], 
              "&"}], ",", "time"}], "]"}]}], ";", "\n", "\t\t", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "<", "1.01"}], ",", "\n", 
               "\t\t", 
               RowBox[{"\"\<Every day from \>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "1"}], "]"}], "]"}], "]"}], "<>", 
                "\"\< to \>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "2"}], "]"}], "]"}], "]"}]}], ",", "\n", 
               "\t\t", 
               RowBox[{"\"\<Every \>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", 
                "\"\< days from \>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "1"}], "]"}], "]"}], "]"}], "<>", 
                "\"\< to \>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "2"}], "]"}], "]"}], "]"}]}]}], "]"}], 
             "&"}], ",", 
            RowBox[{"Transpose", "[", 
             RowBox[{"{", 
              RowBox[{"f", ",", "e"}], "}"}], "]"}]}], "]"}]}]}], "]"}]}], 
      ";", "\n", "\t", 
      RowBox[{"Map", "[", 
       RowBox[{"Flatten", ",", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{"primary", ",", "size", ",", "frequency"}], "}"}], "]"}]}], 
       "]"}]}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.716659511213806*^9, 3.7166596533294067`*^9}, {
   3.716659683514586*^9, 3.716659917506621*^9}, {3.7166607040557327`*^9, 
   3.7166607228219357`*^9}, 3.7166617562043457`*^9, {3.716729364293775*^9, 
   3.716729432083064*^9}, 3.716729611725114*^9, 3.7167296965405083`*^9, {
   3.7167310070887737`*^9, 3.716731042612667*^9}, {3.716731992101821*^9, 
   3.7167320170670757`*^9}, {3.7167320482351227`*^9, 3.716732139797435*^9}, {
   3.7167322531952267`*^9, 3.7167322663903913`*^9}, {3.71673230171984*^9, 
   3.716732382107645*^9}, {3.7167325040679617`*^9, 3.7167325164877787`*^9}, {
   3.7167326192950277`*^9, 3.716732628428314*^9}, {3.716745731906907*^9, 
   3.716745832438509*^9}, {3.7167458841335783`*^9, 3.716745885676488*^9}, {
   3.716813166161322*^9, 3.7168131688463*^9}, {3.716813212315896*^9, 
   3.716813215694171*^9}, 3.717162236400072*^9, {3.7171625440711823`*^9, 
   3.717162557562458*^9}, {3.7171626009644613`*^9, 3.717162601229452*^9}, {
   3.717252137615142*^9, 
   3.717252151380279*^9}},ExpressionUUID->"143cd342-99b7-4755-9a22-\
6204f5482ece"],

Cell[BoxData[
 RowBox[{
  RowBox[{"label", "=", 
   RowBox[{"TableForm", "[", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "<>", "\"\<(\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", "\"\<)\>\""}], ",", 
           RowBox[{"#", "[", 
            RowBox[{"[", 
             RowBox[{"4", ";;"}], "]"}], "]"}]}], "}"}], "]"}], "&"}], ",", 
       "datasets"}], "]"}], ",", "\n", "\t", 
     RowBox[{"TableHeadings", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<\>\"", ",", "\"\<Model\>\"", ",", "\"\<Ensemble Size\>\"", ",", 
          "\"\<Extension(day)\>\"", ",", "\"\<Hincast Frequency\>\""}], 
         "}"}]}], "}"}]}], ",", "\n", "\t", 
     RowBox[{"TableAlignments", "\[Rule]", "Left"}]}], "]"}]}], ";"}]], "Code",\

 CellChangeTimes->{{3.717252820942787*^9, 
  3.717252823009787*^9}},ExpressionUUID->"4d488475-e3ae-44ef-a155-\
40897f6a8ede"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SCA", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"grid", "=", 
          RowBox[{"Import", "[", 
           RowBox[{
           "main", "<>", "\"\<Data/\>\"", "<>", "#", "<>", "\"\</\>\"", "<>", 
            "#", "<>", "\"\<_grids.mx\>\""}], "]"}]}], "}"}], ",", "\n", "\t", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "&"}], ",", 
          RowBox[{"Position", "[", 
           RowBox[{
            RowBox[{"grid", "[", 
             RowBox[{"[", 
              RowBox[{";;", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"_", "?", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"#", "\[LessEqual]", "38.0"}], "&"}], ")"}]}]}], 
           "]"}]}], "]"}]}], "]"}], "&"}], ",", "models"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"NCA", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"grid", "=", 
          RowBox[{"Import", "[", 
           RowBox[{
           "main", "<>", "\"\<Data/\>\"", "<>", "#", "<>", "\"\</\>\"", "<>", 
            "#", "<>", "\"\<_grids.mx\>\""}], "]"}]}], "}"}], ",", "\n", "\t", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "&"}], ",", 
          RowBox[{"Position", "[", 
           RowBox[{
            RowBox[{"grid", "[", 
             RowBox[{"[", 
              RowBox[{";;", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"_", "?", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"And", "[", 
                RowBox[{
                 RowBox[{"#", ">", "38.0"}], ",", 
                 RowBox[{"#", "<=", "42"}]}], "]"}], "&"}], ")"}]}]}], 
           "]"}]}], "]"}]}], "]"}], "&"}], ",", "models"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"OR", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"grid", "=", 
          RowBox[{"Import", "[", 
           RowBox[{
           "main", "<>", "\"\<Data/\>\"", "<>", "#", "<>", "\"\</\>\"", "<>", 
            "#", "<>", "\"\<_grids.mx\>\""}], "]"}]}], "}"}], ",", "\n", "\t", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "&"}], ",", 
          RowBox[{"Position", "[", 
           RowBox[{
            RowBox[{"grid", "[", 
             RowBox[{"[", 
              RowBox[{";;", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"_", "?", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"And", "[", 
                RowBox[{
                 RowBox[{"#", ">", "42.0"}], ",", 
                 RowBox[{"#", "\[LessEqual]", "45"}]}], "]"}], "&"}], 
              ")"}]}]}], "]"}]}], "]"}]}], "]"}], "&"}], ",", "models"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"WA", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"grid", "=", 
          RowBox[{"Import", "[", 
           RowBox[{
           "main", "<>", "\"\<Data/\>\"", "<>", "#", "<>", "\"\</\>\"", "<>", 
            "#", "<>", "\"\<_grids.mx\>\""}], "]"}]}], "}"}], ",", "\n", "\t", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "&"}], ",", 
          RowBox[{"Position", "[", 
           RowBox[{
            RowBox[{"grid", "[", 
             RowBox[{"[", 
              RowBox[{";;", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"_", "?", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"#", ">", "45"}], "&"}], ")"}]}]}], "]"}]}], "]"}]}], 
       "]"}], "&"}], ",", "models"}], "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.717253104004994*^9, 
  3.717253107611692*^9}},ExpressionUUID->"b5ad0616-316e-4f8f-a449-\
ad813656938d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"48928679-6037-495a-86aa-a3bb83371bec"],

Cell["Skill Metric", "Section",
 CellChangeTimes->{{3.715625787110599*^9, 3.715625788499967*^9}, {
  3.7156282146572943`*^9, 3.715628217953314*^9}, {3.716657826710766*^9, 
  3.71665782875006*^9}},ExpressionUUID->"be3eb40f-eef3-4131-ad02-\
1b1c64c7e79b"],

Cell[CellGroupData[{

Cell["ROC ", "Subchapter",
 CellChangeTimes->{{3.71691673294831*^9, 
  3.716916733706813*^9}},ExpressionUUID->"5022c7c8-ba43-475e-84e7-\
b2776fb8dc6e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ROCPoint", "[", 
   RowBox[{"simu_", ",", "obser_", ",", "tercile_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "point", ",", "bisimu", ",", "biobser", ",", "FalsePositiveRate", ",", 
      "TruePositiveRate"}], "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"point", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Quantile", "[", 
         RowBox[{"obser", ",", 
          RowBox[{"tercile", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"Quantile", "[", 
         RowBox[{"obser", ",", 
          RowBox[{"tercile", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "}"}]}], ";", "\n", 
     "\t\t", 
     RowBox[{"bisimu", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"Between", "[", 
            RowBox[{"#", ",", "point"}], "]"}], ",", "1", ",", "0"}], "]"}], 
         "&"}], ",", "simu"}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"biobser", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"Between", "[", 
            RowBox[{"#", ",", "point"}], "]"}], ",", "1", ",", "0"}], "]"}], 
         "&"}], ",", "obser"}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"FalsePositiveRate", "=", 
      RowBox[{
       RowBox[{"Total", "[", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"And", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "1"}], ",", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "0"}]}], "]"}], 
             ",", "1.", ",", "0."}], "]"}], "&"}], ",", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{"bisimu", ",", "biobser"}], "}"}], "]"}]}], "]"}], "]"}], 
       "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Length", "[", "biobser", "]"}], "-", 
         RowBox[{"Total", "[", "biobser", "]"}]}], ")"}]}]}], ";", "\n", 
     "\t\t", 
     RowBox[{"TruePositiveRate", "=", 
      RowBox[{
       RowBox[{"Total", "[", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"And", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "1"}], ",", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "1"}]}], "]"}], 
             ",", "1.", ",", "0."}], "]"}], "&"}], ",", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{"bisimu", ",", "biobser"}], "}"}], "]"}]}], "]"}], "]"}], 
       "/", 
       RowBox[{"Total", "[", "biobser", "]"}]}]}], ";", "\n", "\t\t", 
     RowBox[{"{", 
      RowBox[{"FalsePositiveRate", ",", "TruePositiveRate"}], "}"}]}]}], 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.716917329368575*^9, 3.716917410079918*^9}, {
   3.716917670125122*^9, 3.716917688737439*^9}, 3.7169177222534313`*^9, {
   3.71691776834295*^9, 3.716917770198345*^9}, {3.716918175793373*^9, 
   3.716918180359756*^9}, {3.716918220694716*^9, 3.716918328296632*^9}, 
   3.7169184722892847`*^9, {3.716918586498473*^9, 3.7169186216593523`*^9}, {
   3.716918701346843*^9, 3.71691871347023*^9}, {3.716918800340975*^9, 
   3.7169188180843763`*^9}, {3.716918856296802*^9, 3.716918901934931*^9}, {
   3.716919100306055*^9, 3.716919226504942*^9}, {3.716919909140963*^9, 
   3.716919929162407*^9}, {3.716919964251376*^9, 3.7169199677128487`*^9}, {
   3.716920203469982*^9, 3.716920204284493*^9}, {3.716920276780294*^9, 
   3.716920293922621*^9}, {3.7169204245847797`*^9, 3.716920450918282*^9}, {
   3.716920630762258*^9, 3.716920636264254*^9}, {3.7169214211192303`*^9, 
   3.716921422468564*^9}, {3.716923619246188*^9, 3.7169236350778112`*^9}, {
   3.7173370233011312`*^9, 3.717337031043146*^9}, {3.718313405314098*^9, 
   3.718313414423966*^9}, {3.71831345184886*^9, 3.718313501742545*^9}, {
   3.718313610824008*^9, 
   3.718313615176839*^9}},ExpressionUUID->"64a16c9f-48c7-454b-8bd1-\
e238ed639daa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ROCScore", "[", 
   RowBox[{"simu_", ",", "obser_", ",", 
    RowBox[{"interval_:", "0.08"}]}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"origin", ",", "final", ",", "l"}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"origin", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Prepend", "[", 
         RowBox[{
          RowBox[{"ROCPoint", "[", 
           RowBox[{"simu", ",", "obser", ",", 
            RowBox[{"{", 
             RowBox[{"tercile", ",", 
              RowBox[{"tercile", "+", "interval"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"tercile", "+", 
           RowBox[{"interval", "/", "2.0"}]}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"tercile", ",", "0.01", ",", 
          RowBox[{"0.9999", "-", "interval"}], ",", "interval"}], "}"}]}], 
       "]"}]}], ";", "\n", "\t", 
     RowBox[{"final", "=", 
      RowBox[{"Sort", "[", 
       RowBox[{
        RowBox[{"Append", "[", 
         RowBox[{
          RowBox[{"Prepend", "[", 
           RowBox[{
            RowBox[{"origin", "[", 
             RowBox[{"[", 
              RowBox[{";;", ",", 
               RowBox[{"2", ";;", "3"}]}], "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}]}], "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"#2", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ">", 
          RowBox[{"#1", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}]}], ";", "\n", 
     "\t", 
     RowBox[{"l", "=", 
      RowBox[{"Length", "[", "final", "]"}]}], ";", "\n", "\t", 
     RowBox[{"Total", "[", 
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"final", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"2", ";;", "l"}], ",", "1"}], "]"}], "]"}], "-", 
          RowBox[{"final", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"1", ";;", 
              RowBox[{"l", "-", "1"}]}], ",", "1"}], "]"}], "]"}]}], ")"}], 
        "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"final", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"2", ";;", "l"}], ",", "2"}], "]"}], "]"}], "+", 
           RowBox[{"final", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"1", ";;", 
               RowBox[{"l", "-", "1"}]}], ",", "2"}], "]"}], "]"}]}], ")"}], 
         "/", "2."}]}], "]"}], "]"}]}]}], "]"}]}]], "Code",
 CellChangeTimes->{{3.716923624244913*^9, 3.716923821429144*^9}, {
   3.716924091963422*^9, 3.7169241132028637`*^9}, {3.716924154772696*^9, 
   3.716924155819018*^9}, {3.7169241924969883`*^9, 3.716924536913549*^9}, {
   3.716924622297467*^9, 3.716924684509676*^9}, {3.7169248164332542`*^9, 
   3.716924847432054*^9}, {3.716924972244879*^9, 3.716925000460414*^9}, {
   3.716925370891469*^9, 3.716925401082692*^9}, {3.716925432193975*^9, 
   3.716925508598096*^9}, {3.716926287059024*^9, 3.716926290209504*^9}, {
   3.716926327207059*^9, 3.716926457234294*^9}, {3.7171624392080603`*^9, 
   3.717162465214031*^9}, {3.71716261744226*^9, 3.717162623017297*^9}, 
   3.7171681765701933`*^9, {3.7173370662670918`*^9, 3.7173371152399406`*^9}, {
   3.717337271035181*^9, 3.717337275001698*^9}, {3.7173373258418293`*^9, 
   3.717337326743484*^9}, {3.717337359895355*^9, 3.717337399397131*^9}, {
   3.717337433132181*^9, 3.717337436866412*^9}, {3.717337521368977*^9, 
   3.7173375395995703`*^9}, {3.7173375921421547`*^9, 
   3.7173375922936983`*^9}, {3.7173378178953667`*^9, 3.717337819030301*^9}, {
   3.717337910907193*^9, 3.717338002638853*^9}, {3.717346442426626*^9, 
   3.7173464455769444`*^9}, {3.718313514070155*^9, 3.718313577528901*^9}, {
   3.7183137875114822`*^9, 3.7183138020782413`*^9}, {3.718314057811257*^9, 
   3.71831408822124*^9}},ExpressionUUID->"4886183d-f4c3-46a7-ba5b-\
837dd6faa6b6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ROCDraw", "[", 
   RowBox[{"simu_", ",", "obser_", ",", 
    RowBox[{"interval_:", "0.08"}]}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"origin", ",", "final"}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"origin", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Prepend", "[", 
         RowBox[{
          RowBox[{"ROCPoint", "[", 
           RowBox[{"simu", ",", "obser", ",", 
            RowBox[{"{", 
             RowBox[{"tercile", ",", 
              RowBox[{"tercile", "+", "interval"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"tercile", "+", 
           RowBox[{"interval", "/", "2.0"}]}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"tercile", ",", "0.01", ",", 
          RowBox[{"0.9999", "-", "interval"}], ",", "interval"}], "}"}]}], 
       "]"}]}], ";", "\n", "\t", 
     RowBox[{"final", "=", 
      RowBox[{"Sort", "[", 
       RowBox[{
        RowBox[{"Append", "[", 
         RowBox[{
          RowBox[{"Prepend", "[", 
           RowBox[{"origin", ",", 
            RowBox[{"{", 
             RowBox[{"None", ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"None", ",", "1", ",", "1"}], "}"}]}], "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"#2", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ">", 
          RowBox[{"#1", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}]}], ";", "\n", 
     "\t", 
     RowBox[{"Labeled", "[", 
      RowBox[{
       RowBox[{"Show", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Plot", "[", 
           RowBox[{"x", ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"Dashed", ",", "Gray"}], "}"}]}], ",", "\n", "\t\t\t\t", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", "\n", "\t\t\t\t", 
            RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", "\n", 
            "\t\t\t\t", 
            RowBox[{"ImageSize", "\[Rule]", "400"}], ",", "\n", "\t\t\t\t", 
            RowBox[{"BaseStyle", "\[Rule]", "15"}], ",", "\n", "\t\t\t\t", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", "\n", 
            "\t\t\t\t", 
            RowBox[{"FrameLabel", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"\"\<False Alarm Ratio\>\"", ",", "\"\<Hit Ratio\>\""}],
               "}"}]}]}], "]"}], ",", "\n", "\t\t\t", 
          RowBox[{"ListLinePlot", "[", 
           RowBox[{
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Labeled", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "&"}], ",", 
              "final"}], "]"}], ",", "\n", "\t\t\t\t", 
            RowBox[{"PlotMarkers", "\[Rule]", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<*\>\"", ",", 
               RowBox[{"FontSize", "\[Rule]", "34"}]}], "]"}]}], ",", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "]"}]}], "}"}], 
        "]"}], ",", "\n", "\t\t\t", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"\"\<ROC Score=\>\"", "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{"Round", "[", 
            RowBox[{
             RowBox[{"ROCScore", "[", 
              RowBox[{"simu", ",", "obser", ",", "interval"}], "]"}], ",", 
             "0.001"}], "]"}], "]"}]}], ",", "\n", "\t\t\t\t", 
         RowBox[{"FontSize", "\[Rule]", "15"}]}], "]"}], ",", "Top"}], 
      "]"}]}]}], "]"}]}]], "Code",
 CellChangeTimes->{{3.716923624244913*^9, 3.716923821429144*^9}, {
   3.716924091963422*^9, 3.7169241132028637`*^9}, {3.716924154772696*^9, 
   3.716924155819018*^9}, {3.7169241924969883`*^9, 3.716924536913549*^9}, {
   3.716924622297467*^9, 3.716924684509676*^9}, {3.7169248164332542`*^9, 
   3.716924847432054*^9}, {3.716924972244879*^9, 3.716925000460414*^9}, {
   3.716925370891469*^9, 3.716925401082692*^9}, {3.716925432193975*^9, 
   3.716925508598096*^9}, {3.716926287059024*^9, 3.716926290209504*^9}, {
   3.716926327207059*^9, 3.716926457234294*^9}, {3.7171624392080603`*^9, 
   3.717162465214031*^9}, {3.71716261744226*^9, 3.717162623017297*^9}, 
   3.7171681765701933`*^9, {3.7173370662670918`*^9, 3.717337067156619*^9}, {
   3.7173371225212097`*^9, 3.7173371523917427`*^9}, {3.718312880684668*^9, 
   3.718312882391953*^9}, {3.7183136000868683`*^9, 3.718313606433104*^9}, {
   3.71831414679429*^9, 3.718314155252746*^9}, {3.718314195381282*^9, 
   3.718314196880052*^9}, {3.718314271267166*^9, 3.7183143091307898`*^9}, {
   3.71831434696108*^9, 3.718314370265717*^9}, {3.718314427746461*^9, 
   3.718314432780321*^9}},ExpressionUUID->"aac5cafd-cc6a-42cb-894d-\
38cef250a5f7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"simu", ",", "obser"}], "}"}], "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"RandomVariate", "[", 
     RowBox[{
      RowBox[{"MultinormalDistribution", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"5", ",", " ", "5"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", " ", "0.8"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"0.8", ",", " ", "1"}], "}"}]}], "}"}]}], "]"}], ",", 
      "3000"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"interval", "=", "0.05"}], ";"}]}], "Code",
 CellChangeTimes->{{3.7183144954953003`*^9, 3.7183145841818666`*^9}, {
  3.718314638209836*^9, 
  3.718314641286384*^9}},ExpressionUUID->"39018a4d-d82b-4377-9dc1-\
415af405acc6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"interval", "=", "0.05"}], ";"}], "\n", 
 RowBox[{"Sort", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ROCPoint", "[", 
      RowBox[{"simu", ",", "obser", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"i", "+", "interval"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", 
       RowBox[{"1", "-", "interval"}], ",", "interval"}], "}"}]}], "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"#2", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "<", 
     RowBox[{"#1", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}]}], "Code",
 CellChangeTimes->{{3.7183146525528107`*^9, 
  3.718314743652625*^9}},ExpressionUUID->"9373cd66-ca3a-4749-b1e2-\
3365a8be7420"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.05896805896805896`", ",", "0.12582781456953643`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.05686205686205686`", ",", "0.11258278145695365`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.05547752808988764`", ",", "0.11184210526315788`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.055438596491228065`", ",", "0.1`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.05335205335205335`", ",", "0.07947019867549669`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.051597051597051594`", ",", "0.09933774834437085`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.05124605124605124`", ",", "0.11920529801324503`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.04915730337078651`", ",", "0.09210526315789473`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.04773604773604773`", ",", "0.26490066225165565`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.044226044226044224`", ",", "0.09933774834437085`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.04387504387504387`", ",", "0.24503311258278146`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.04352404352404352`", ",", "0.11920529801324503`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.04143258426966292`", ",", "0.11842105263157894`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.04073033707865169`", ",", "0.11842105263157894`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.040365040365040364`", ",", "0.06622516556291391`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.03825903825903826`", ",", "0.07947019867549669`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.0351000351000351`", ",", "0.08609271523178808`"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"0.034736842105263156`", ",", "0.1`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.027729027729027727`", ",", "0.4304635761589404`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.021403508771929824`", ",", "0.5133333333333334`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7183146606347303`*^9, 
  3.718314744438287*^9}},ExpressionUUID->"919ebc0c-709c-48ab-b599-\
1a928132521f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"%", ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Code",
 CellChangeTimes->{{3.718314709302965*^9, 
  3.718314739823078*^9}},ExpressionUUID->"e4f5f885-7514-4382-b04d-\
a8a72b47cb1c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{"simu", ",", "obser"}], "}"}], "]"}], "]"}]], "Code",
 CellChangeTimes->{{3.718314607794376*^9, 
  3.718314619224798*^9}},ExpressionUUID->"54acacea-71bd-4aeb-857e-\
d7a9a30a4a91"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.65, 0., 0.], PointSize[0.005555555555555556], 
     AbsoluteThickness[1.6], 
     StyleBox[PointBox[CompressedData["
1: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
gkaeEy+Iz/z9VXCQ9Htdy9ukdRSe+FGLzTQJT//N+9mbyqDLzunYiDwPC+33
3HC4IoBgXdjn8FYRvE/55vhuEeJUYl+xdySD/a4TNgl1Cdc0KD6YMkEN0xev
KXolLsS0Z+3hTxbwYHveJGvoNhcB9xaukdFmUB/g0CB2lAWfxweLeqex0ah0
NGzYjcId69OjJmosHH1TP+lqLBd//lqsX6NBYVng6YlOAaTX5TiWxuQ5noXY
nsx05cPb+dy7Lg7h8kDnJW+bKfjLf1u86gqNUoVQ/tUUBpSvTnPrdx5sKq9c
+XePC6PI+SdlZ9FYynQE25IcL204dqGG9LFtwFPDulwKMnlXDhmGKoDft5D+
Fc3BhXpX3+mP2DAuKvvPn3CYna+FyVxVDkBFaOcFsXHDePTPZLJHyuNveaTK
czH85utruf00tn2XjvUh/rrz4wzXaZMo1GtfZ0+6TDxvUOfw9XAhvvHWtPTL
CbGNv77tUZ4IvllrqGePSa46G809v0SAU0YnDya/YeNoRlys9jxZ9Ly7eFMt
l7w3h3ZXKWkKNvH5KySJ/yiHUjWLlCl8Mpk3pOPNxeVx7rmp1jQmZDifPjKT
wpTY1PBG4k8ekPnzarIAYXT90VVsATTqJ9ZIiXEQ/vfif/v0OYi+MW3+memk
t78MnHrow8fYTrk9K3wpNAXttawi+Sk4U/5Ja0QRHttl3ZkdHJRYle09cJ/B
riuKP6M9aVw2+y3Z6ELj86NFX1gKfKQ6N/W0/VNE283SpZNlaVxT9R30Id+L
77xUNPyNXO8Ty/RNAYWH48cLsJED3eHjYanvGGSn8y5ulWZwNlFr2lLCs70B
qlFu+TRilGO4fHsKXx3MoqwI30ju5sx7b8VG0OreBIUxDjb7bbXKe8VDzvEN
W4w1hIg46Ocj8ZkPUZbdTedNNMpf7RY9LuPCcMGW/05PpVHdq7qxieLhgNSl
zsylHNQrM5Nl/VVRYJeqGXFVBU2Xi5XePJBChL1jockWWTw8xtnh3kahunpd
eWM3F8bhjnn0CgpqPfkSt7zI71420pyiIMSg3eqH2+/xMKQdUHN0UBKyWXZ9
Q16yEK72FsgFUjD6vU9pRSuDc2e8VSe1k/NvuC/R/zkPR0YSZ0xdQiNd+9jG
o+5cTFwYLCvazsOdr9l7n8ynked4OjRPkvDl3uZJHWw5+F8q/WJqxkVc98Oo
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
Pa/jR5YQ8+PnrXQREZ4LCR58z+JjZlLow1XpPHCe5R75W8rHNvfNdz6QvC1r
sVbTI3nw4tcM7VhDLj47J2k/IT6VY3w30/44Bx2D80o3idiIKA4LLnojR3q7
f+hAjBTMDAYZA+LLbkm/ZbdbcvBANWpNCrm/WYuGxPY7sHH8tk7VaIscnE2j
b0QoyUIheMDhsSYPswYjr84vIXzm3/LBLlIZI13yvlJdQnDj9T7PNyM51xee
xL5B4c3Y6+dNDkqEAwbEv5JeyVpkM2uKOgfW5ld/3Sln44Bp++zW/9Qw6dWq
jxJ3lJH/reyryS0WuCLpdx9qOIhD6TohOTcHjnFMMrbJYiNP8ZD9Oj7oAwZl
/jQXgVmP7Od+YsEhespyMcJFcy5wvwhdiD90MjcG84WQ71waTbWOWUYrap5M
/6GAvoJ7frIaPFhYdA5Ikv0uW9m/4e4VFVwLF3v7rl0ZiqxKvY2Ef3VNBvwN
Sc892yytPrpNgKfjIwaXLOFDsYwRK6kR4seyOQ9q3jDwLVq8VZNw88+QqAML
SH5Kds70bN1D+vJB5cs68rzO4x66mR7l4HUzu3tGDgdWPS1xN8ZzYPQnqCCD
9IDbjDaLR9coZLuMfjhly8Wec4mql8k5+S/QcKjAg4/7U2ICir6RPB9+/EHF
lI87nFOFSyQEOFNhkh+lTrhj288psd4UtvLfV6eMo2Clq7n85i4a0lN/B6nw
GDhoPR31t1TGFQW9zMMflRB1oXzJXrKvQ1uanl77wEN6UvSOUjXCjVSs756V
fARMMnkyboMQl797Jzr5MBhMf9m2YpQH5xVLA5BOvGPMovbBSwYLLfyqa5cy
KD/OGq/5mvjrf+civmgSL3qVtnAS8a3+Pb50fhKNm+2c+27mSrhSnO004ZII
q6aES+zRJJ57z+DT7UAO/uLc69V+Qnz+0dI17zMPepaCYf0qPo54eob1p/Dx
e+szexceF9Lhkcq2sygsCkHAmlMMVv+XVzDnB7mfJwsmWJE8XvBYfvf1GgYr
RVVqUYS3zhSwApR9iX8/jg6JPsiHxiPdpxrupE/6Lsa/NhRhxbkJXT+KhAhK
X7CD8RJhzrGtheIzRJBt9LpTISnEybuG+6VJ/r+eGsq9FaAAS/eznj3nOfj0
sWrGAyk+OOoNGwjL4Lt3QOfmTRTml/LGbyIeevARt/RQCx86e65WtfzHoH8r
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
yMQFg1yMy0yMV//DhfWyBpfnv7jYWzvD9d/7G2cZ3OCueE/83Fbk5iDZp1+9
Hr/uxRMO0HuS9I3DwCaBtGZgBAcv79TdiXvPhsSZq9/kI2Sge9LtlwX5c9Gu
zEaDVgWk1NPDBx+qwCX58iLZHTQCKl7ulyfc/cfu4ARnUqffTX+XBTylkbe3
Mfz9TCY+1XuEr17NwtFl2Wqv7vDhOaD6JXsSHy7C96eoYBm4h1er5dWzIT4R
oiuKFHD3jnGzrAkfZ9dw1m5Nk0TCLVk7B30xhBU1KgvWMuFydvsvrQlsnCr2
2XHJi/Dl7KSEhC0chHf+sbhxiIeocw6SMsR3pyx/aL1viPDrhTijtRvY8Fc+
UvZZgoczKz8me/pToKemTgz6wMWsZQlL/W050L7l9r3oORvhk16ofiX88+q2
tWZ+OuH71ubPnAIBuGm/zQ2Jz1etKAi5pMhC1K539PgaCsIj217NJ364216u
/IojE7m561reRFK4xU1W4PgSvlhp8eGgFguenin+c2oZMPumr208LI9H0sGj
NwyVCf/5hvvFKaCpTU7dkOzHns8xvvNInu03X+CwaESIkVnBK3WLSH4qnMx3
IP0zuqeKJ0nqXHHJ0pSjRRw0VhjmPY2noHnCqF6ELUTJ18+fHvYpof6WieVY
KQcRZiHxT9zJ3A4MvWRpwUNSuU2yWQsXUWMzkwtOsrDC5qfbfNInit7tmsrf
+JgoKFCuGOfDZwbru/puWfT3xRavjGbi2Xz/CeaJXHSovkhbtEMWV6u0Bmtd
eFjeocjX9KaxlTvvjk+PHPYGeWrV6jJQd68kQOIbC9DIOsRpZ2BW1NR3H35y
UXlHM6WW1I3WjBNqNbeEsHK4qZszRKNDuftjsjkPd4J2Le4y52PC48FrYQN8
0DtGr15RJ/5Qk+1pd4Ksi2SK1I0SBsQELzMsZgvQwL3vXRpO+FRQWbZOhwOq
u8vcai4TVzt8CpYMysK/S9Pj9DJJOGFv3PlRNg5J8bNUJTlwflIRvy2Ci7cb
9jvO/0WBQQ3M8SIeZbPB77QJ8X7nO29PnT+tgFMfBNwLsgJsGdxYVJ3HxOQX
OVceKBHPS91/0Z58/8rA5xvFptMYsDzVf5Tc32SqdIOcGRc28/UoQ8LKPmuU
rX4SjiieHtm+jtS/0vJnXQt2c/BoodJpTeJhPC2+s+EFHjpCWwqfNDOwE0KT
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
5MuUxqNlXm4fM8TxP7rNx/4=
       "]],
      FontFamily->"Baskerville"]}, {}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.3187900243658923`, 0},
  BaseStyle->{FontFamily -> "Baskerville"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->{FontFamily -> "Baskerville"},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{1.42728382226674, 8.370886887921005}, {0, 8.540014474505401}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.718314619561833*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztvQeQXtd15/mxG93IYBSDKCqLipSoHCzbkqxgWtHSyC57bE1pVXZZM7s7
Uxpv1XrslZUlKlgSJUpiJkJ3A92NnBMBEGACmBPABIAkSBA5dqPR6e75/e85
93tfoxFm11vempquaqC/9713370np3vuZ7/693/3N//bV//+61/76qs/9Y2v
/pe/+/rX/uurP/mfv2GXms+q1c76u1qt9uKra/yd7E//Rz9f5x//MMrfb9F/
zenIof2pb3BYn97m13p7etJQHqX2Fb/Wd6wn9Q3oau3tca23N+VLqXaFXxsc
9Ccr9w0cP5Z6+/r16ZL8+sv1X6v9058Wzbw5/fhn16TfXntN+t5PrknP7et7
q75uSf1Hd6dZ025InbPnpFunzUhbXjjobxqTBvsOpDkdt6Zrf3dT2rG/560+
4vDQQFo3ry3N6Jyd2qfenG5/4Mlky4sR0/Bg2nTb3NTRPTvdeuPNafNzu8q6
k6163qyOtHHzDn8LExxIm9avSm3tnalrZltauOL2dHwoXZyX8UYf9fnNm9Iv
f3pNemjLU2nHCzvT8YGhWkyoZ8+zaemq9YLog6tnpx9fOzUdTykA9vjaBem3
N83Sp7KG/qNp4Zy5aU/vUOrZ/VT63j9/N23ffyy+3rvtvnT1r29Ox2zIrfcu
Sd/5l6nMKZZx79KO9MupiysobU1Hdj6ZvvPP30zPHBhMw8deSt/77rfTA1v3
+TLe5E++sPnudOvN7elw/3DtHX5t56Mb0vd/9ot0dDg50YwVoB6+Z1VasXp1
uvW3P0/f/O4P0/KV61Pv8eFCCGD2ll98O23cvq+s67FV7elXnctEHUd3b07f
/NZvU89gmfjxQy+mX/78V2lXz1CZ+NGdT6TvfOtbafthQ+LA3vTD73+3MvE3
+5Mbl3ena6cvSscHY8ktqW//c2nJPMPyDdek2Ss3Av/KAobTg+vmpNm33Z3u
XjYn/ep3t6TNTz6Veo8N1oJSju7ZkV7ctT/12jg/+OY/pyf39JSF3L90Wvo/
/q8fp6effT6tmXdLurZ9aRoaTnVCGk4ru6eldQ9sLQuB8O5cMSf95KfXp+t+
8dM0ffby1D8chFTnh+G0Zk5bWvvQs7bc/el73/peeuy5A3Xq7U/bntqaHn9g
Q/rZL36etu/t8ReMSWmwJ62YPy8t6+5Kt0yfc4U/8uxdRl/XXZ/apt2Sltzx
MNMsS3zqzvlGjjemdWsMl2vvTr39Q4VpDz7/aJo1ZxW8U5adho6l7ptvSMvW
PpQ2b1yTrv3NTenw4PAJaxhIs35zXdqy85hN6kD6/n/7Vnrg6d3x0qFju9PP
r7kh9djHOxZPS9dMXVmIpmff8+lH//SNdO2t8wuf79l6f7rroSfSrl2702BQ
Oeh5Jv3ympvTUfhqoCe9sGtPQf3ObZvT08/tTAf2vZTap3WkFw7319fQvy/9
4EdXp0de6Evp0HPp6h98O+04OjSCoTffuyF1zV2a5nbcnK6fPi8d7R8qUBse
6k9rlnWnhUuXput//Yu0YuNTBWpP3LU4TZtV5b0x6fDOx9Ovr7km/epXv04b
HtgSkwTVj29albrmL0xdt96QZq++uyzgucc3pB/96Cfpd9f9Nv3oZ79Oj26r
MxHMd+eKeWlq5/y0yIhs1qI1FUIax39N6ciRI6/0KR3atzvteHGXEFlnzqH0
0o7n0+59hwqjc+3o0d6GqdtaTfKb9O49ZjJtIFa5f/fOtGPnbrFUTHlocMCU
yZF0zG7v6zuehobqsmDfrhcNP3v16ZLKPO2rBx98MD3yyCP6JLnwlcbvH374
4fTYY4/9P/7+8ccfT0888cQJ37f6tA1Q6f7770/z589PCxcuZD61pvTQQw+N
48+T/jX2lN/+v77PJm5/Cjh8GnuG11r/O58FeKe61nqG9/1rP/s/ynhN/HsW
9HUWhHZWlfTGph4zsyDPJUuWpGXLlqUtW7aIBBcvXmzka59stAULFqSlJmf4
NNavzZs3L+4v1yDflStX6lOrX5s7d25asWJFw32zZ89Oq1atarjW3d2dVpsm
r17r6upKt912W8N4PLt27dqG+zo7O9O6desars2aNSvdfvvtDddmzpyZ1q9f
3zBeR0dH2rBhwwnP3nnnnQ3X2tvbR7121113NYzX1taW7rnnnob7uLZx48aG
a7fcckvatGlTw7WbbrqpXGutXLv33nsb7rvxxhvTfffdd8I1REj1Wd7xwAMP
NNx3ww03jHoNahl5DW6tjnf99deLskbOGdFZvcZ9o1179NFHTxgPsTnyvpHX
WBs0OvK+zZs3nzAe9MunJv49i8fOgsbPqgrklniDZPFzzz2XduzYUYT1s88+
m1588UXnj3xt+/btJ1wDOs8880xRiFzbunWrmQi7Gu7jnt27dzdce/rpp9Oe
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
niFfOQt9UuVymCTlaPnL64fTO4Fo35BHQw7nkjNp6TD3uU8nzdD3mFAUf/vG
VawbMgM4JjqV1OSLdoDu2ZO71ngZNfIlGnDJcvDwQYXVxnjgORBWkOZmdZj0
UV4vZObd3KUSr0oXrf5vseRg9rqAz/T3yhIYJA6EZpd9561KZaUbc4vUDZBI
LVZBgGy3yX9tl3dCQW3rqCHjSthDiSrjTp6FS5nCNH9X6Y3dKp5HvmAyit6M
hkb30++99950zDz8/zWUSR2NZcsI1xDDRF5s1JYqIXgPuvLuMeWgGpZgy8sR
pwvyfk+TzTNzViN3SeY8MQ+m6zFbDRoOtY9o9HJ8IQpnnrchvI20dT5cbZKo
HK4gYoiHHd445MDEYju283FznSYmFAFPrko7CN1WaPckg4TExIkSAqpWr728
eAuiFZDKkV0VLgcpkCEkTKhx1223iaZU22MuGFKc+aLoFYFxmovjg9QKuF66
osCWgZ5zAxG/TFX7Z+xWLPd6KdM4idd2GN9E54AfXhqEYAp/FDMvUg3fqMj+
pXHS7c6dgWgZ9Gx1MTo3FDRXLpNwlcMex6m+rZEsKueAcA2GRzvE/ku1+Iyz
PBEIJu2jLYiWibHr9UXH8qnCAgksAyhiUyMU2ufbwL1yqvj0hHaI7fFOqAHs
6Aw8Y0MjuFyYl5uFgXTErxILJmPCqmurIr1ZwSgZKhgCda8itwGqZXMGsfVS
o2wo9V1xvtjMsfWdMUChagYpD0KgcIomuvLDH85wJHRDxYQpj/CfwJrKloyc
WCTSt5wCnc8Kh1xcBmgYxf/s7Yvf9rbTRnDyqXlDLhMKTeARmOGqQ4537Roz
yq1xBhDzmeMHxUaCEpmmnibeyV7pNT8olv5B/b6lWZ222aFOzcrFF9ei0F4t
tEyi+EGIOhXd5F4EefQKP0SslCVMUHoCG1K9G9wsUgMYIytVkdO+/xWvyLht
Fb46vLVDwdPYsZVsVn4jsUZVCpjIcg9wYrkn9sCJbiA5ROO4cWFfBO6RJcZj
+fL5xRKGtxC9RQ8AJw9hooSZvYwBSMl+2WzED+VhPG+GRinhj7qPepmLGuGK
5NS506DQkzfRxSEQcUmXX3rpkyenlX8ahQDGuxCLMly4upzaGzakXSsVwk1e
TAGVMzO1y8PboTiuoutVrYZq8/7OxccwP7Da1oxkbjSviZbB8Tw2iZo903Qh
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
C3rz8OJRrPORL9YJAvYG/Cub81v9DfvdDsY4XWJfbzCmjDeQc7w5mxfxhvA8
BigTc04arZxd30Q5tJqevfvdYvgQjrgpi+zanX/1VzE26z3em9Yu7kqdc+am
9va2dN+WnScf/iv+WGt6fP3M9O2rb0h9g0Np24Nr03d/8PN0eGDU3cd6Ms56
pzKenlWmTh12jPbw6pvTd32b6u4nN6XvfOdHaX9/w2gh/RqWCbIYjdNL3+3X
qFe5ya2seENL6u89mGZe9+M0tXtm+pef/yit2BT+W0s5JmvRokVp/vz5Ent6
zaU+JBi7xQ3FeA2Ms8g4eePf/m3lNX0HXkw3/uaX6b7N5tt23pjal95bXsMq
HjGhi0jkd8jc7IbXgLQlNqSZS7U/KEPufmJjuvqHVyfk6Lb7V6bv/2TmyRH0
8QqY9xgtGc5rF5WhBnr3pfYbrk1LV9+Wpt74u7Tq7i2nHwrBBzxNOZehxIlG
031p29NPpZ17D4453Shom8Xve1+652tfi1FOKrS/8m/8/ccCiIcPp90mfbHw
LznNM6+LZ0xE0FDTzOBcS4sEdwgSth1lnOiI2DAO5HWzy98YB0G69EMfShv/
5m9GjgMJX3fddXXSjXGQ58vsGTTF6/0aFe27mKNp6HNPnA9j4UJpnD8JKrj9
9nSjU8EozzTAIp7RsVC/93tp09e/ftpn/q1x/m/wfdSWjfY9NPGP//iPqaur
q1HynvV/A5mh6r4=\
\>"],ExpressionUUID->"2c42bbb6-7b8f-4d2b-8602-c4853deae143"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ROCDraw", "[", 
  RowBox[{"simu", ",", "obser", ",", "interval"}], "]"}]], "Code",
 CellChangeTimes->{{3.718314117308259*^9, 3.718314124320921*^9}, {
  3.7183143772682943`*^9, 
  3.7183143794606943`*^9}},ExpressionUUID->"a45c174c-52eb-4e45-949f-\
fde91b68867e"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}], 
           GrayLevel[0.5]], 
          LineBox[CompressedData["
1:eJxFxW0w03EcAPCNdZRrjMr9adxE5SlOUlKpuMhDneHk8nRCWk/InXR1WrdJ
nua6nZTnh5R2jGyuMnHsdDnPo1GzMUtj83RndnRZ9cL39+JzH0r8XWqiHg6H
C/7n/wGJypGu+fAz2xN8LFJkmLv39kcrS8paMV84cED8vhwLgyMStB3PsQR4
yuWpTwGWDlftvZydizFgumHroWcYG74SWc1dWa2DjXT0KD8rLmwXsqTsyePB
GYOe3iVrH2FzHkmKx3fCbXKf/qFT3XA3rdwyUi2ENQdPGzfe/gLrbXBMLO36
YA9dXFtoUz/cz3Af7HUYgq2LVBsNS8OwSiuTjruOwnUL7X3EQhFMJL9ZVijG
4Pwb/KQq22/w+lmOIjlLDKe7CXn7eiZgWZMwb4TyHf5NGyu1f/ADdjxnsJXU
LoH9aijXW8ylcAY51mYmSgY7qcONxMHTsJnxiqFwE03oLOUeKJuBb7q3T+4M
lMOci/FVn9fRGpWFyVzxLMwP9dNn+yrgLH9mJW8OTZkKmKhl/oRPHmewMbc5
OMpqaAMvQmv6CuQp9F9wCSEmnWqrhM2k/Bo9IXrHI3qYZ+o8jGuI4cpNF+C0
V9wC0250h2OOIemOCiYFpDk9IaphifOwKFOAbq7wtlXELMLRXA8SeQv9mFlN
l7xbghuV5FJi0DKcU86Mk15CJ1AX7ZpC0PsFgubgCHQu62pvfjw62ePl6q5M
tA1jj79BPXrrxMPd4rfoycXZ0XoOuiiiNfpCC1rnQL3HFKAlI6wKfRH6Q7b2
mmgczfaKta+dQAe+PsI7L0V/uj/wlT6PLnY+xgpRo1PlZWGUZfThoFuyrjU0
AT9WV6RFT/O9aHGbaAGt1sX1D/qFtZFGp0P/BaO4ekM=
           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$2744756#1"]& ]}}, {}, {}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.019444444444444445`], 
          RGBColor[0.65, 0., 0.], 
          AbsoluteThickness[1.6], FontFamily -> "Baskerville"], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQjQ42ahq8ePFgpv1zj+Illpfu2C/53/x4Tt5C+44L
zi8Uv2ywv/I858g2vyX2jTkOZgrSB+yrRNa5P6xaYv9U3Ltu45Pt9skbtt7a
Z7LUfuoMLx/VZYfsM89eEjs0Yal9d5PrwUUJF+3zX70POvpmKdT8Pfbx33dd
3/tuqb3UqWyN9Qv32P/bZAHUsgxuX/GMwzLPDJbbm025HhDnfNH+4kN1pi3b
ltsfmxSv8/PoJvuau6/jvu9abg+UrOR9utVeTH1t5C2nFfZ9Ju6zlM8ehPNv
NoAcvNteKfH5xQe/VtgvTgjcoBGxxd7qavSht1mr7IEcER2ubfYPBSVPMh1c
A1d/JpEP6IQ19iDHtX3aZX/5vfG/yYUb4O6HhNoHOA0A4reg2g==
          "]]}}, {{
         Directive[
          PointSize[0.019444444444444445`], 
          RGBColor[0.65, 0., 0.], 
          AbsoluteThickness[1.6], FontFamily -> "Baskerville"], 
         GeometricTransformationBox[
          InsetBox[
           BoxData[
            FormBox[
             StyleBox["\"*\"", FontSize -> 34, StripOnInput -> False], 
             TraditionalForm]], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGAQBWJGIGZiwAQbNQ1evHgw0/65R/ESy0t37Jf8b348J2+h
fccF5xeKXzbYX3mec2Sb3xL7xhwHMwXpA/ZVIuvcH1YtsX8q7l238cl2++QN
W2/tM1lqP3WGl4/qskP2mWcviR2asNS+u8n14KKEi/b5r94HHX2zFGr+Hvv4
77uu73231F7qVLbG+oV77P9tsgBqWQa3r3jGYZlnBsvtzaZcD4hzvmh/8aE6
05Zty+2PTYrX+Xl0k33N3ddx33cttwdKVvI+3Wovpr428pbTCvs+E/dZymcP
wvk3G0AO3m2vlPj84oNfK+wXJwRu0IjYYm91NfrQ26xV9kCOiA7XNvuHgpIn
mQ6ugas/k8gHdMIae5Dj2j7tsr/83vjf5MINcPdDQu0DnAYA7HOg3A==
          "]]}, {}}, {
        TagBox[{
          Opacity[0.], {
           PointBox[{0., 0.}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$2745202, {1}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.02527202527202527, 0.4503311258278146}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$2745202, {2}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.03404703404703405, 0.06622516556291391}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$2745202, {3}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.03966303966303966, 0.12582781456953643`}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$2745202, {4}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.039999999999999994`, 0.09333333333333334}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$2745202, {5}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.04141804141804142, 0.1456953642384106}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$2745202, {6}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.04212004212004212, 0.271523178807947}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$2745202, {7}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.04282204282204282, 0.11258278145695365`}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$2745202, {8}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.042837078651685394`, 0.11184210526315788`}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$2745202, {9}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.044577044577044575`, 0.06622516556291391}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$2745202, {10}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.04529494382022472, 0.26973684210526316`}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$2745202, {11}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.046315789473684206`, 0.07333333333333333}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$2745202, {12}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.046348314606741575`, 0.08552631578947367}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$2745202, {13}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.04738504738504738, 0.1390728476821192}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$2745202, {14}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.04738504738504738, 0.10596026490066225`}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$2745202, {15}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.048789048789048786`, 0.07947019867549669}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$2745202, {16}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.051597051597051594`, 0.08609271523178808}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$2745202, {17}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.056160056160056156`, 0.10596026490066225`}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$2745202, {18}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.056179775280898875`, 0.10526315789473684`}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$2745202, {19}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.06423306423306423, 0.11258278145695365`}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$2745202, {20}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{1., 1.}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$2745202, {
           21}}]& ]}}, {{{{}, {}}, {{}, {
          InsetBox[
           FormBox[
            PaneBox[
             StyleBox[
             "0.035`", {FontFamily -> "Baskerville"}, StripOnInput -> False]],
             TraditionalForm], 
           
           Offset[{2, -2}, {0.02527202527202527, 
            0.4503311258278146}], {-0.9620000000000001, \
-0.9620000000000001}], {
           Opacity[0], 
           TagBox[
            TooltipBox[
             PointBox[{0.03404703404703405, 0.06622516556291391}], 
             PaneBox[
              StyleBox[
              "0.3350000000000001`", {FontFamily -> "Baskerville"}, 
               StripOnInput -> False]]], Annotation[#, 
             Pane[
              Style[0.3350000000000001, {FontFamily -> "Baskerville"}]], 
             "Tooltip"]& ]}, {
           Opacity[0], 
           TagBox[
            TooltipBox[
             PointBox[{0.03966303966303966, 0.12582781456953643`}], 
             PaneBox[
              StyleBox[
              "0.48500000000000004`", {FontFamily -> "Baskerville"}, 
               StripOnInput -> False]]], Annotation[#, 
             Pane[
              Style[0.48500000000000004`, {FontFamily -> "Baskerville"}]], 
             "Tooltip"]& ]}, {
           Opacity[0], 
           TagBox[
            TooltipBox[
             PointBox[{0.039999999999999994`, 0.09333333333333334}], 
             PaneBox[
              StyleBox[
              "0.23500000000000001`", {FontFamily -> "Baskerville"}, 
               StripOnInput -> False]]], Annotation[#, 
             Pane[
              Style[0.23500000000000001`, {FontFamily -> "Baskerville"}]], 
             "Tooltip"]& ]}, 
          InsetBox[
           FormBox[
            PaneBox[
             StyleBox[
             "0.8850000000000001`", {FontFamily -> "Baskerville"}, 
              StripOnInput -> False]], TraditionalForm], 
           
           Offset[{2, -2}, {0.04141804141804142, 
            0.1456953642384106}], {-0.9620000000000001, -0.9620000000000001}], 
          InsetBox[
           FormBox[
            PaneBox[
             StyleBox[
             "0.935`", {FontFamily -> "Baskerville"}, StripOnInput -> False]],
             TraditionalForm], 
           
           Offset[{2, -2}, {0.04212004212004212, 
            0.271523178807947}], {-0.9620000000000001, -0.9620000000000001}], {
           Opacity[0], 
           TagBox[
            TooltipBox[
             PointBox[{0.04282204282204282, 0.11258278145695365`}], 
             PaneBox[
              StyleBox[
              "0.135`", {FontFamily -> "Baskerville"}, StripOnInput -> 
               False]]], Annotation[#, 
             Pane[
              Style[0.135, {FontFamily -> "Baskerville"}]], "Tooltip"]& ]}, {
           Opacity[0], 
           TagBox[
            TooltipBox[
             PointBox[{0.042837078651685394`, 0.11184210526315788`}], 
             PaneBox[
              StyleBox[
              "0.8350000000000001`", {FontFamily -> "Baskerville"}, 
               StripOnInput -> False]]], Annotation[#, 
             Pane[
              Style[0.8350000000000001, {FontFamily -> "Baskerville"}]], 
             "Tooltip"]& ]}, 
          InsetBox[
           FormBox[
            PaneBox[
             StyleBox[
             "0.685`", {FontFamily -> "Baskerville"}, StripOnInput -> False]],
             TraditionalForm], 
           Offset[{2, 0}, {0.044577044577044575`, 
            0.06622516556291391}], {-0.9620000000000001, 
           0.9620000000000001}], {
           Opacity[0], 
           TagBox[
            TooltipBox[
             PointBox[{0.04529494382022472, 0.26973684210526316`}], 
             PaneBox[
              StyleBox[
              "0.085`", {FontFamily -> "Baskerville"}, StripOnInput -> 
               False]]], Annotation[#, 
             Pane[
              Style[0.085, {FontFamily -> "Baskerville"}]], "Tooltip"]& ]}, {
           Opacity[0], 
           TagBox[
            TooltipBox[
             PointBox[{0.046315789473684206`, 0.07333333333333333}], 
             PaneBox[
              StyleBox[
              "0.38500000000000006`", {FontFamily -> "Baskerville"}, 
               StripOnInput -> False]]], Annotation[#, 
             Pane[
              Style[0.38500000000000006`, {FontFamily -> "Baskerville"}]], 
             "Tooltip"]& ]}, {
           Opacity[0], 
           TagBox[
            TooltipBox[
             PointBox[{0.046348314606741575`, 0.08552631578947367}], 
             PaneBox[
              StyleBox[
              "0.535`", {FontFamily -> "Baskerville"}, StripOnInput -> 
               False]]], Annotation[#, 
             Pane[
              Style[0.535, {FontFamily -> "Baskerville"}]], "Tooltip"]& ]}, {
           Opacity[0], 
           TagBox[
            TooltipBox[
             PointBox[{0.04738504738504738, 0.1390728476821192}], 
             PaneBox[
              StyleBox[
              "0.785`", {FontFamily -> "Baskerville"}, StripOnInput -> 
               False]]], Annotation[#, 
             Pane[
              Style[0.785, {FontFamily -> "Baskerville"}]], "Tooltip"]& ]}, {
           Opacity[0], 
           TagBox[
            TooltipBox[
             PointBox[{0.04738504738504738, 0.10596026490066225`}], 
             PaneBox[
              StyleBox[
              "0.28500000000000003`", {FontFamily -> "Baskerville"}, 
               StripOnInput -> False]]], Annotation[#, 
             Pane[
              Style[0.28500000000000003`, {FontFamily -> "Baskerville"}]], 
             "Tooltip"]& ]}, {
           Opacity[0], 
           TagBox[
            TooltipBox[
             PointBox[{0.048789048789048786`, 0.07947019867549669}], 
             PaneBox[
              StyleBox[
              "0.6350000000000001`", {FontFamily -> "Baskerville"}, 
               StripOnInput -> False]]], Annotation[#, 
             Pane[
              Style[0.6350000000000001, {FontFamily -> "Baskerville"}]], 
             "Tooltip"]& ]}, {
           Opacity[0], 
           TagBox[
            TooltipBox[
             PointBox[{0.051597051597051594`, 0.08609271523178808}], 
             PaneBox[
              StyleBox[
              "0.43500000000000005`", {FontFamily -> "Baskerville"}, 
               StripOnInput -> False]]], Annotation[#, 
             Pane[
              Style[0.43500000000000005`, {FontFamily -> "Baskerville"}]], 
             "Tooltip"]& ]}, {
           Opacity[0], 
           TagBox[
            TooltipBox[
             PointBox[{0.056160056160056156`, 0.10596026490066225`}], 
             PaneBox[
              StyleBox[
              "0.18500000000000003`", {FontFamily -> "Baskerville"}, 
               StripOnInput -> False]]], Annotation[#, 
             Pane[
              Style[0.18500000000000003`, {FontFamily -> "Baskerville"}]], 
             "Tooltip"]& ]}, {
           Opacity[0], 
           TagBox[
            TooltipBox[
             PointBox[{0.056179775280898875`, 0.10526315789473684`}], 
             PaneBox[
              StyleBox[
              "0.7350000000000001`", {FontFamily -> "Baskerville"}, 
               StripOnInput -> False]]], Annotation[#, 
             Pane[
              Style[0.7350000000000001, {FontFamily -> "Baskerville"}]], 
             "Tooltip"]& ]}, 
          InsetBox[
           FormBox[
            PaneBox[
             StyleBox[
             "0.5850000000000001`", {FontFamily -> "Baskerville"}, 
              StripOnInput -> False]], TraditionalForm], 
           Offset[{2, 0}, {0.06423306423306423, 
            0.11258278145695365`}], {-0.9620000000000001, 
           0.9620000000000001}]}}}, {{{}}, {{}}}}, {}, {}, {}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, BaseStyle -> 15, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox["\"Hit Ratio\"", TraditionalForm], None}, {
        FormBox["\"False Alarm Ratio\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     LabelStyle -> {FontFamily -> "Baskerville"}, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 1}, {0, 1}}, 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],StyleBox[
   "\"ROC Score=0.532\"", FontSize -> 15, StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {2, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Top"}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7183141252472982`*^9, 3.718314160226245*^9, 3.7183142011183357`*^9, {
   3.718314294334567*^9, 3.718314338178673*^9}, {3.718314380304003*^9, 
   3.718314393625288*^9}, {3.718314436463874*^9, 3.718314442240838*^9}, {
   3.718314573230918*^9, 
   3.7183146450836782`*^9}},ExpressionUUID->"8c15dcf8-dce0-4241-99fa-\
17ddd493f161"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"final", "[", 
    RowBox[{"[", 
     RowBox[{";;", ",", 
      RowBox[{"2", ";;", "3"}]}], "]"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Code",
 CellChangeTimes->{{3.718313987055524*^9, 
  3.718314006990294*^9}},ExpressionUUID->"2f2c0704-2bd4-43b4-8f3c-\
57a523582327"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.65, 0., 0.], PointSize[0.019444444444444445`], 
     AbsoluteThickness[1.6], 
     StyleBox[
      LineBox[{{0., 0.}, {0.0061616527727437476`, 0.06639004149377593}, {
       0.056179775280898875`, 0.21161825726141079`}, {0.06342877854295034, 
       0.2157676348547718}, {0.06415367886915549, 0.21161825726141079`}, {
       0.06739130434782609, 0.1875}, {0.0681406306632838, 
       0.17427385892116182`}, {0.07067778180500181, 0.21991701244813278`}, {
       0.07176513229430953, 0.22406639004149378`}, {0.07393983327292497, 
       0.2074688796680498}, {0.07396664249456128, 0.26859504132231404`}, {
       0.07572463768115942, 0.22916666666666666`}, {0.08336353751359188, 
       0.36929460580912865`}, {1., 1.}}],
      FontFamily->"Baskerville"]}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Baskerville"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->{FontFamily -> "Baskerville"},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1.}, {0, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.718313997204376*^9, 
  3.718314007336437*^9}},ExpressionUUID->"4fd978f3-b96b-41db-8906-\
39c6ccddc3c7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ROCPoint", "[", 
  RowBox[{"a", ",", "b", ",", 
   RowBox[{"{", 
    RowBox[{"0.5", ",", "0.6"}], "}"}]}], "]"}]], "Code",
 CellChangeTimes->{{3.718313745807271*^9, 
  3.718313757373609*^9}},ExpressionUUID->"b6e0b745-6ba0-491b-a41f-\
1948baf468b8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.07298999629492404`", ",", "0.23255813953488372`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.718313757809784*^9, 
  3.7183137751948633`*^9}},ExpressionUUID->"e836cab6-9405-4463-b3f3-\
77c8a8294f76"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ROCDraw", "[", 
  RowBox[{"a", ",", "b"}], "]"}]], "Code",
 CellChangeTimes->{{3.7173372186040773`*^9, 3.7173372316025677`*^9}, {
  3.717337279115757*^9, 3.717337279890092*^9}, {3.717337313821084*^9, 
  3.717337314095693*^9}, {3.717337408215464*^9, 3.71733750416109*^9}, {
  3.7173380781215277`*^9, 3.717338083155036*^9}, {3.7173381250795393`*^9, 
  3.717338126569426*^9}, {3.7173384086608763`*^9, 3.717338442093378*^9}, {
  3.7173385708382177`*^9, 3.7173385722010508`*^9}, {3.718312802741033*^9, 
  3.7183128107651377`*^9}, {3.7183136806629353`*^9, 
  3.718313681203874*^9}},ExpressionUUID->"1283b16e-10f1-4d9a-9f2e-\
4d47665f3f65"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}], 
           GrayLevel[0.5]], 
          LineBox[CompressedData["
1:eJxFxW0w03EcAPCNdZRrjMr9adxE5SlOUlKpuMhDneHk8nRCWk/InXR1WrdJ
nua6nZTnh5R2jGyuMnHsdDnPo1GzMUtj83RndnRZ9cL39+JzH0r8XWqiHg6H
C/7n/wGJypGu+fAz2xN8LFJkmLv39kcrS8paMV84cED8vhwLgyMStB3PsQR4
yuWpTwGWDlftvZydizFgumHroWcYG74SWc1dWa2DjXT0KD8rLmwXsqTsyePB
GYOe3iVrH2FzHkmKx3fCbXKf/qFT3XA3rdwyUi2ENQdPGzfe/gLrbXBMLO36
YA9dXFtoUz/cz3Af7HUYgq2LVBsNS8OwSiuTjruOwnUL7X3EQhFMJL9ZVijG
4Pwb/KQq22/w+lmOIjlLDKe7CXn7eiZgWZMwb4TyHf5NGyu1f/ADdjxnsJXU
LoH9aijXW8ylcAY51mYmSgY7qcONxMHTsJnxiqFwE03oLOUeKJuBb7q3T+4M
lMOci/FVn9fRGpWFyVzxLMwP9dNn+yrgLH9mJW8OTZkKmKhl/oRPHmewMbc5
OMpqaAMvQmv6CuQp9F9wCSEmnWqrhM2k/Bo9IXrHI3qYZ+o8jGuI4cpNF+C0
V9wC0250h2OOIemOCiYFpDk9IaphifOwKFOAbq7wtlXELMLRXA8SeQv9mFlN
l7xbghuV5FJi0DKcU86Mk15CJ1AX7ZpC0PsFgubgCHQu62pvfjw62ePl6q5M
tA1jj79BPXrrxMPd4rfoycXZ0XoOuiiiNfpCC1rnQL3HFKAlI6wKfRH6Q7b2
mmgczfaKta+dQAe+PsI7L0V/uj/wlT6PLnY+xgpRo1PlZWGUZfThoFuyrjU0
AT9WV6RFT/O9aHGbaAGt1sX1D/qFtZFGp0P/BaO4ekM=
           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$2726212#1"]& ]}}, {}, {}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.019444444444444445`], 
          RGBColor[0.65, 0., 0.], 
          AbsoluteThickness[1.6], FontFamily -> "Baskerville"], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQTQhsC7s9fVnTIvvGHAczBekD9vZM7EWreRbbP/co
XmJ5aY+9q7zKunUZi+33fYir0N+z3T4wMk5tq8ISuPyV5zlHtvktgcsnb9h6
a5/JUvvTO1LvGOXttI95wCS+48BS+zjnSt6npkfsP1X8+3BMapn9qiMhSVqG
R+1ZLoQuvaC3HK5/32qWtm0dy+2finvXbXyy3b7ymPG8jz3L7QPABhy1X80j
vOZpy0r7jgvOLxS/HLAHSqbbPF4Jld+Kxj9q/57HwqMvY5U99/XFBbZcx+1P
zl1y42vAavs5f3z/qdUftu/L/swtXbzefuoMLx/VZYfsk0sPrI+fsdF+7uwC
rv3ll+wBqFKPuw==
          "]]}}, {{
         Directive[
          PointSize[0.019444444444444445`], 
          RGBColor[0.65, 0., 0.], 
          AbsoluteThickness[1.6], FontFamily -> "Baskerville"], 
         GeometricTransformationBox[
          InsetBox[
           BoxData[
            FormBox[
             StyleBox["\"*\"", FontSize -> 34, StripOnInput -> False], 
             TraditionalForm]], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGAQAWJGIGZiIAy2hd2evqxpkX1jjoOZgvQBe3sm9qLVPIvt
n3sUL7G8tMfeVV5l3bqMxfb7PsRV6O/Zbh8YGae2VWEJXP7K85wj2/yWwOWT
N2y9tc9kqf3pHal3jPJ22sc8YBLfcWCpfZxzJe9T0yP2nyr+fTgmtcx+1ZGQ
JC3Do/YsF0KXXtBbDte/bzVL27aO5fZPxb3rNj7Zbl95zHjex57l9gFgA47a
r+YRXvO0ZaV9xwXnF4pfDtgDJdNtHq+Eym9F4x+1f89j4dGXscqe+/riAluu
4/Yn5y658TVgtf2cP77/1OoP2/dlf+aWLl5vP3WGl4/qskP2yaUH1sfP2Gg/
d3YB1/7yS/YAseqPvQ==
          "]]}, {}}, {
        TagBox[{
          Opacity[0.], {
           PointBox[{0., 0.}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$2726698, {1}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0., 0.}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$2726698, {2}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.03615303615303615, 0.12582781456953643`}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$2726698, {3}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.037206037206037205`, 0.11258278145695365`}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$2726698, {4}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.03790803790803791, 0.09271523178807947}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$2726698, {5}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.03931203931203931, 0.11258278145695365`}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$2726698, {6}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.03966303966303966, 0.09271523178807947}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$2726698, {7}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.04141804141804142, 0.09933774834437085}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$2726698, {8}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.042485955056179775`, 0.15789473684210525`}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$2726698, {9}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.04317304317304317, 0.16556291390728478`}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$2726698, {10}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.04527904527904528, 0.09271523178807947}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$2726698, {11}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.04596491228070175, 0.09333333333333334}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$2726698, {12}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.045997191011235956`, 0.17105263157894735`}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$2726698, {13}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.04984204984204984, 0.13245033112582782`}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$2726698, {14}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.05056179775280899, 0.08552631578947367}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$2726698, {15}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.05056179775280899, 0.17105263157894735`}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$2726698, {16}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.05157894736842105, 0.18000000000000002`}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$2726698, {17}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.05335205335205335, 0.152317880794702}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$2726698, {18}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.06142506142506142, 0.1456953642384106}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$2726698, {
           19}}]& ]}}, {{{{}, {}}, {{}, {{
           Opacity[0], 
           TagBox[
            TooltipBox[
             PointBox[{0., 0.}], 
             PaneBox[
              StyleBox[
              "0.935`", {FontFamily -> "Baskerville"}, StripOnInput -> 
               False]]], Annotation[#, 
             Pane[
              Style[0.935, {FontFamily -> "Baskerville"}]], "Tooltip"]& ]}, {
           Opacity[0], 
           TagBox[
            TooltipBox[
             PointBox[{0., 0.}], 
             PaneBox[
              StyleBox[
              "0.`", {FontFamily -> "Baskerville"}, StripOnInput -> False]]], 
            Annotation[#, 
             Pane[
              Style[0., {FontFamily -> "Baskerville"}]], "Tooltip"]& ]}, 
          InsetBox[
           FormBox[
            PaneBox[
             StyleBox[
             "0.8850000000000001`", {FontFamily -> "Baskerville"}, 
              StripOnInput -> False]], TraditionalForm], 
           Offset[{-2, -2}, {0.03615303615303615, 0.12582781456953643`}], {
           0.9620000000000001, -0.9620000000000001}], 
          InsetBox[
           FormBox[
            PaneBox[
             StyleBox[
             "0.135`", {FontFamily -> "Baskerville"}, StripOnInput -> False]],
             TraditionalForm], 
           Offset[{-2, 0}, {0.037206037206037205`, 0.11258278145695365`}], {
           0.9620000000000001, 0.9620000000000001}], 
          InsetBox[
           FormBox[
            PaneBox[
             StyleBox[
             "0.685`", {FontFamily -> "Baskerville"}, StripOnInput -> False]],
             TraditionalForm], 
           Offset[{-2, 0}, {0.03790803790803791, 0.09271523178807947}], {
           0.9620000000000001, 0.9620000000000001}], 
          InsetBox[
           FormBox[
            PaneBox[
             StyleBox[
             "0.48500000000000004`", {FontFamily -> "Baskerville"}, 
              StripOnInput -> False]], TraditionalForm], 
           
           Offset[{2, -2}, {0.03931203931203931, 
            0.11258278145695365`}], {-0.9620000000000001, \
-0.9620000000000001}], {
           Opacity[0], 
           TagBox[
            TooltipBox[
             PointBox[{0.03966303966303966, 0.09271523178807947}], 
             PaneBox[
              StyleBox[
              "0.785`", {FontFamily -> "Baskerville"}, StripOnInput -> 
               False]]], Annotation[#, 
             Pane[
              Style[0.785, {FontFamily -> "Baskerville"}]], "Tooltip"]& ]}, {
           Opacity[0], 
           TagBox[
            TooltipBox[
             PointBox[{0.04141804141804142, 0.09933774834437085}], 
             PaneBox[
              StyleBox[
              "0.5850000000000001`", {FontFamily -> "Baskerville"}, 
               StripOnInput -> False]]], Annotation[#, 
             Pane[
              Style[0.5850000000000001, {FontFamily -> "Baskerville"}]], 
             "Tooltip"]& ]}, 
          InsetBox[
           FormBox[
            PaneBox[
             StyleBox[
             "0.535`", {FontFamily -> "Baskerville"}, StripOnInput -> False]],
             TraditionalForm], 
           
           Offset[{2, 0}, {0.042485955056179775`, 
            0.15789473684210525`}], {-0.9620000000000001, 
           0.9620000000000001}], 
          InsetBox[
           FormBox[
            PaneBox[
             StyleBox[
             "0.28500000000000003`", {FontFamily -> "Baskerville"}, 
              StripOnInput -> False]], TraditionalForm], 
           Offset[{-2, -2}, {0.04317304317304317, 0.16556291390728478`}], {
           0.9620000000000001, -0.9620000000000001}], {
           Opacity[0], 
           TagBox[
            TooltipBox[
             PointBox[{0.04527904527904528, 0.09271523178807947}], 
             PaneBox[
              StyleBox[
              "0.43500000000000005`", {FontFamily -> "Baskerville"}, 
               StripOnInput -> False]]], Annotation[#, 
             Pane[
              Style[0.43500000000000005`, {FontFamily -> "Baskerville"}]], 
             "Tooltip"]& ]}, 
          InsetBox[
           FormBox[
            PaneBox[
             StyleBox[
             "0.23500000000000001`", {FontFamily -> "Baskerville"}, 
              StripOnInput -> False]], TraditionalForm], 
           
           Offset[{2, -2}, {0.04596491228070175, 
            0.09333333333333334}], {-0.9620000000000001, \
-0.9620000000000001}], {
           Opacity[0], 
           TagBox[
            TooltipBox[
             PointBox[{0.045997191011235956`, 0.17105263157894735`}], 
             PaneBox[
              StyleBox[
              "0.085`", {FontFamily -> "Baskerville"}, StripOnInput -> 
               False]]], Annotation[#, 
             Pane[
              Style[0.085, {FontFamily -> "Baskerville"}]], "Tooltip"]& ]}, {
           Opacity[0], 
           TagBox[
            TooltipBox[
             PointBox[{0.04984204984204984, 0.13245033112582782`}], 
             PaneBox[
              StyleBox[
              "0.18500000000000003`", {FontFamily -> "Baskerville"}, 
               StripOnInput -> False]]], Annotation[#, 
             Pane[
              Style[0.18500000000000003`, {FontFamily -> "Baskerville"}]], 
             "Tooltip"]& ]}, 
          InsetBox[
           FormBox[
            PaneBox[
             StyleBox[
             "0.8350000000000001`", {FontFamily -> "Baskerville"}, 
              StripOnInput -> False]], TraditionalForm], 
           Offset[{-2, 0}, {0.05056179775280899, 0.08552631578947367}], {
           0.9620000000000001, 0.9620000000000001}], {
           Opacity[0], 
           TagBox[
            TooltipBox[
             PointBox[{0.05056179775280899, 0.17105263157894735`}], 
             PaneBox[
              StyleBox[
              "0.7350000000000001`", {FontFamily -> "Baskerville"}, 
               StripOnInput -> False]]], Annotation[#, 
             Pane[
              Style[0.7350000000000001, {FontFamily -> "Baskerville"}]], 
             "Tooltip"]& ]}, 
          InsetBox[
           FormBox[
            PaneBox[
             StyleBox[
             "0.38500000000000006`", {FontFamily -> "Baskerville"}, 
              StripOnInput -> False]], TraditionalForm], 
           
           Offset[{2, -2}, {0.05157894736842105, 
            0.18000000000000002`}], {-0.9620000000000001, \
-0.9620000000000001}], 
          InsetBox[
           FormBox[
            PaneBox[
             StyleBox[
             "0.3350000000000001`", {FontFamily -> "Baskerville"}, 
              StripOnInput -> False]], TraditionalForm], 
           
           Offset[{2, -2}, {0.05335205335205335, 
            0.152317880794702}], {-0.9620000000000001, -0.9620000000000001}], 
          
          InsetBox[
           FormBox[
            PaneBox[
             StyleBox[
             "0.6350000000000001`", {FontFamily -> "Baskerville"}, 
              StripOnInput -> False]], TraditionalForm], 
           
           Offset[{2, 0}, {0.06142506142506142, 
            0.1456953642384106}], {-0.9620000000000001, 0.9620000000000001}], {
           Opacity[0], 
           TagBox[
            TooltipBox[
             PointBox[{0.08073008073008073, 0.5231788079470199}], 
             PaneBox[
              StyleBox[
              "0.035`", {FontFamily -> "Baskerville"}, StripOnInput -> 
               False]]], Annotation[#, 
             Pane[
              Style[0.035, {FontFamily -> "Baskerville"}]], "Tooltip"]& ]}, {
           Opacity[0], 
           TagBox[
            TooltipBox[
             PointBox[{1., 1.}], 
             PaneBox[
              StyleBox[
              "1.`", {FontFamily -> "Baskerville"}, StripOnInput -> False]]], 
            Annotation[#, 
             Pane[
              Style[1., {FontFamily -> "Baskerville"}]], 
             "Tooltip"]& ]}}}}, {{{}}, {{}}}}, {}, {}, {}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, BaseStyle -> 15, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox["\"Hit Ratio\"", TraditionalForm], None}, {
        FormBox["\"False Alarm Ratio\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     LabelStyle -> {FontFamily -> "Baskerville"}, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 1}, {0, 1}}, 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],StyleBox[
   "\"ROC Score=0.748\"", FontSize -> 15, StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {2, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Top"}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.71733723255298*^9, 3.717337280209193*^9, {3.7173373143123817`*^9, 
   3.717337330786834*^9}, {3.7173374034320107`*^9, 3.7173375044621468`*^9}, 
   3.7173375433037663`*^9, {3.7173380838534317`*^9, 3.7173381345047913`*^9}, {
   3.7173382553988867`*^9, 3.717338259238995*^9}, {3.717338368441325*^9, 
   3.7173383750968437`*^9}, {3.717338406991797*^9, 3.717338445858108*^9}, {
   3.717338569543133*^9, 3.7173385810238323`*^9}, 3.717346455061668*^9, {
   3.717351225145499*^9, 3.7173512337989902`*^9}, {3.718312793120729*^9, 
   3.71831281142232*^9}, 3.718312884562071*^9, 3.718313621012794*^9, {
   3.718313682499661*^9, 3.718313716669956*^9}, 
   3.718313793814529*^9},ExpressionUUID->"c2bdf30d-8fe4-4051-916b-\
633ba9665cd0"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"5b65c0a3-4613-4854-9f07-ddc24a73137c"],

Cell[CellGroupData[{

Cell["Evaluation", "Subchapter",
 CellChangeTimes->{{3.716927238743927*^9, 3.716927245559847*^9}, {
  3.717272724935122*^9, 
  3.717272726494026*^9}},ExpressionUUID->"97fd9862-bf6a-4fd5-8181-\
93e44d826362"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ROCEvaluation", "[", "dataset_", "]"}], ":=", "\n", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "result", ",", "\n", "\t   ", "SCAsimu", ",", "NCAsimu", ",", "ORsimu", 
       ",", "WAsimu", ",", "\n", "\t   ", "SCAobser", ",", "NCAobser", ",", 
       "ORobser", ",", "WAobser", ",", "\n", "\t   ", "mSCAsimu", ",", 
       "mNCAsimu", ",", "mORsimu", ",", "mWAsimu", ",", "\n", "\t   ", 
       "mSCAobser", ",", "mNCAobser", ",", "mORobser", ",", "mWAobser", ",", 
       "\n", "\t   ", "iSCAsimu", ",", "iSCAobser", ",", "iNCAsimu", ",", 
       "iNCAobser", ",", "\n", "\t   ", "imSCAsimu", ",", "imNCAsimu", ",", 
       "imORsimu", ",", "imWAsimu", ",", "\n", "\t   ", "iORsimu", ",", 
       "iORobser", ",", "iWAsimu", ",", "iWAobser", ",", "\n", "\t   ", 
       "GridDaily", ",", "GridInterval", ",", "RegionalDaily", ",", 
       "RegionalInterval", ",", "\n", "\t   ", "int"}], "}"}], ",", "\n", 
     "\t", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"SCAsimu", ",", "NCAsimu", ",", "ORsimu", ",", "WAsimu"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "SCAobser", ",", "NCAobser", ",", "ORobser", ",", "WAobser"}], 
            "}"}]}], "}"}], ",", "\n", "\t ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "iSCAsimu", ",", "iNCAsimu", ",", "iORsimu", ",", "iWAsimu"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "iSCAobser", ",", "iNCAobser", ",", "iORobser", ",", "iWAobser"}],
             "}"}]}], "}"}]}], "}"}], "=", "\n", "\t ", 
       RowBox[{"Import", "[", 
        RowBox[{
        "main", "<>", "\"\<Data/\>\"", "<>", "dataset", "<>", "\"\</\>\"", "<>",
          "dataset", "<>", "\"\<_dg.mx\>\""}], "]"}]}], ";", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"mSCAsimu", ",", "mNCAsimu", ",", "mORsimu", ",", "mWAsimu"}],
         "}"}], "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"#", ",", "1"}], "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"SCAsimu", ",", "NCAsimu", ",", "ORsimu", ",", "WAsimu"}], 
          "}"}]}], "]"}]}], ";", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "mSCAobser", ",", "mNCAobser", ",", "mORobser", ",", "mWAobser"}], 
        "}"}], "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{"#", ",", 
              RowBox[{
               RowBox[{"Dimensions", "[", "SCAsimu", "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", "1"}], "]"}], 
          "&"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "SCAobser", ",", "NCAobser", ",", "ORobser", ",", "WAobser"}], 
          "}"}]}], "]"}]}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "imSCAsimu", ",", "imNCAsimu", ",", "imORsimu", ",", "imWAsimu"}], 
        "}"}], "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "#", "]"}], "\[Equal]", "0"}], ",", 
               "0", ",", 
               RowBox[{"Flatten", "[", 
                RowBox[{"#", ",", "1"}], "]"}]}], "]"}], "&"}], ",", "#"}], 
           "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "iSCAsimu", ",", "iNCAsimu", ",", "iORsimu", ",", "iWAsimu"}], 
          "}"}]}], "]"}]}], ";", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "imSCAobser", ",", "imNCAobser", ",", "imORobser", ",", "imWAobser"}],
         "}"}], "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "#", "]"}], "\[Equal]", "0"}], ",", 
               "0", ",", 
               RowBox[{"Flatten", "[", 
                RowBox[{
                 RowBox[{"Table", "[", 
                  RowBox[{"#", ",", 
                   RowBox[{
                    RowBox[{"Dimensions", "[", 
                    RowBox[{"iSCAsimu", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", "1"}], 
                "]"}]}], "]"}], "&"}], ",", "#"}], "]"}], "&"}], ",", "\n", 
         "\t", 
         RowBox[{"{", 
          RowBox[{
          "iSCAobser", ",", "iNCAobser", ",", "iORobser", ",", "iWAobser"}], 
          "}"}]}], "]"}]}], ";", "\n", "\t", "\n", 
      RowBox[{"GridDaily", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"ROCScore", "[", 
              RowBox[{
               RowBox[{"mSCAsimu", "[", 
                RowBox[{"[", 
                 RowBox[{";;", ",", "day", ",", "grid"}], "]"}], "]"}], ",", 
               RowBox[{"mSCAobser", "[", 
                RowBox[{"[", 
                 RowBox[{";;", ",", "day", ",", "grid"}], "]"}], "]"}]}], 
              "]"}], ",", "\n", "\t\t\t", 
             RowBox[{"{", 
              RowBox[{"grid", ",", 
               RowBox[{
                RowBox[{"Dimensions", "[", "mSCAsimu", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
           "\n", "\t\t    ", 
           RowBox[{"{", 
            RowBox[{"day", ",", 
             RowBox[{
              RowBox[{"Dimensions", "[", "mSCAsimu", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"-", "2"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", "\n", 
         "\t\t   ", 
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"ROCScore", "[", 
              RowBox[{
               RowBox[{"mNCAsimu", "[", 
                RowBox[{"[", 
                 RowBox[{";;", ",", "day", ",", "grid"}], "]"}], "]"}], ",", 
               RowBox[{"mNCAobser", "[", 
                RowBox[{"[", 
                 RowBox[{";;", ",", "day", ",", "grid"}], "]"}], "]"}]}], 
              "]"}], ",", "\n", "\t\t\t", 
             RowBox[{"{", 
              RowBox[{"grid", ",", 
               RowBox[{
                RowBox[{"Dimensions", "[", "mNCAsimu", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
           "\n", "\t\t    ", 
           RowBox[{"{", 
            RowBox[{"day", ",", 
             RowBox[{
              RowBox[{"Dimensions", "[", "mNCAsimu", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"-", "2"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", "\n", 
         "\t\t   ", 
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"ROCScore", "[", 
              RowBox[{
               RowBox[{"mORsimu", "[", 
                RowBox[{"[", 
                 RowBox[{";;", ",", "day", ",", "grid"}], "]"}], "]"}], ",", 
               RowBox[{"mORobser", "[", 
                RowBox[{"[", 
                 RowBox[{";;", ",", "day", ",", "grid"}], "]"}], "]"}]}], 
              "]"}], ",", "\n", "\t\t\t", 
             RowBox[{"{", 
              RowBox[{"grid", ",", 
               RowBox[{
                RowBox[{"Dimensions", "[", "mORsimu", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
           "\n", "\t\t    ", 
           RowBox[{"{", 
            RowBox[{"day", ",", 
             RowBox[{
              RowBox[{"Dimensions", "[", "mORsimu", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"-", "2"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", "\n", 
         "\t\t   ", 
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"ROCScore", "[", 
              RowBox[{
               RowBox[{"mWAsimu", "[", 
                RowBox[{"[", 
                 RowBox[{";;", ",", "day", ",", "grid"}], "]"}], "]"}], ",", 
               RowBox[{"mWAobser", "[", 
                RowBox[{"[", 
                 RowBox[{";;", ",", "day", ",", "grid"}], "]"}], "]"}]}], 
              "]"}], ",", "\n", "\t\t\t", 
             RowBox[{"{", 
              RowBox[{"grid", ",", 
               RowBox[{
                RowBox[{"Dimensions", "[", "mWAsimu", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
           "\n", "\t\t    ", 
           RowBox[{"{", 
            RowBox[{"day", ",", 
             RowBox[{
              RowBox[{"Dimensions", "[", "mWAsimu", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"-", "2"}], "]"}], "]"}]}], "}"}]}], "]"}]}], "}"}]}], 
      ";", "\n", "\n", 
      RowBox[{"RegionalDaily", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"ROCScore", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Mean", "[", 
               RowBox[{"Transpose", "[", 
                RowBox[{"Map", "[", 
                 RowBox[{"Transpose", ",", "mSCAsimu"}], "]"}], "]"}], "]"}], 
              "[", 
              RowBox[{"[", 
               RowBox[{";;", ",", "day"}], "]"}], "]"}], ",", "\n", 
             "\t\t\t\t", 
             RowBox[{
              RowBox[{"Mean", "[", 
               RowBox[{"Transpose", "[", 
                RowBox[{"Map", "[", 
                 RowBox[{"Transpose", ",", "mSCAobser"}], "]"}], "]"}], "]"}],
               "[", 
              RowBox[{"[", 
               RowBox[{";;", ",", "day"}], "]"}], "]"}]}], "]"}], ",", "\n", 
           "\t\t\t\t", 
           RowBox[{"{", 
            RowBox[{"day", ",", 
             RowBox[{
              RowBox[{"Dimensions", "[", "mSCAsimu", "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], ",", "\n", 
         "\t\t\t  ", 
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"ROCScore", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Mean", "[", 
               RowBox[{"Transpose", "[", 
                RowBox[{"Map", "[", 
                 RowBox[{"Transpose", ",", "mNCAsimu"}], "]"}], "]"}], "]"}], 
              "[", 
              RowBox[{"[", 
               RowBox[{";;", ",", "day"}], "]"}], "]"}], ",", "\n", 
             "\t\t\t\t", 
             RowBox[{
              RowBox[{"Mean", "[", 
               RowBox[{"Transpose", "[", 
                RowBox[{"Map", "[", 
                 RowBox[{"Transpose", ",", "mNCAobser"}], "]"}], "]"}], "]"}],
               "[", 
              RowBox[{"[", 
               RowBox[{";;", ",", "day"}], "]"}], "]"}]}], "]"}], ",", "\n", 
           "\t\t\t\t", 
           RowBox[{"{", 
            RowBox[{"day", ",", 
             RowBox[{
              RowBox[{"Dimensions", "[", "mNCAsimu", "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], ",", "\n", 
         "              ", 
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"ROCScore", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Mean", "[", 
               RowBox[{"Transpose", "[", 
                RowBox[{"Map", "[", 
                 RowBox[{"Transpose", ",", "mORsimu"}], "]"}], "]"}], "]"}], 
              "[", 
              RowBox[{"[", 
               RowBox[{";;", ",", "day"}], "]"}], "]"}], ",", "\n", 
             "\t\t\t\t", 
             RowBox[{
              RowBox[{"Mean", "[", 
               RowBox[{"Transpose", "[", 
                RowBox[{"Map", "[", 
                 RowBox[{"Transpose", ",", "mORobser"}], "]"}], "]"}], "]"}], 
              "[", 
              RowBox[{"[", 
               RowBox[{";;", ",", "day"}], "]"}], "]"}]}], "]"}], ",", "\n", 
           "\t            ", 
           RowBox[{"{", 
            RowBox[{"day", ",", 
             RowBox[{
              RowBox[{"Dimensions", "[", "mORsimu", "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], ",", "\n", 
         "              ", 
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"ROCScore", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Mean", "[", 
               RowBox[{"Transpose", "[", 
                RowBox[{"Map", "[", 
                 RowBox[{"Transpose", ",", "mWAsimu"}], "]"}], "]"}], "]"}], 
              "[", 
              RowBox[{"[", 
               RowBox[{";;", ",", "day"}], "]"}], "]"}], ",", "\n", 
             "\t\t\t\t", 
             RowBox[{
              RowBox[{"Mean", "[", 
               RowBox[{"Transpose", "[", 
                RowBox[{"Map", "[", 
                 RowBox[{"Transpose", ",", "mWAobser"}], "]"}], "]"}], "]"}], 
              "[", 
              RowBox[{"[", 
               RowBox[{";;", ",", "day"}], "]"}], "]"}]}], "]"}], ",", "\n", 
           "\t            ", 
           RowBox[{"{", 
            RowBox[{"day", ",", 
             RowBox[{
              RowBox[{"Dimensions", "[", "mWAsimu", "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}]}], "}"}]}], 
      ";", "\n", "\t", "\n", 
      RowBox[{"GridInterval", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"imSCAsimu", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}], "\[Equal]", "0"}], ",",
              "0", ",", "\n", "\t\t\t\t", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"ROCScore", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"imSCAsimu", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{";;", ",", "grid"}], "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"imSCAobser", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{";;", ",", "grid"}], "]"}], "]"}]}], "]"}], ",", 
               "\n", "\t\t\t\t\t", 
               RowBox[{"{", 
                RowBox[{"grid", ",", 
                 RowBox[{
                  RowBox[{"Dimensions", "[", 
                   RowBox[{"imSCAobser", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
            "]"}], ",", "\n", "\t\t\t   ", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "imSCAobser", "]"}]}], "}"}]}], "]"}], 
         ",", "\n", "\t\t\t  ", 
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"imNCAsimu", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}], "\[Equal]", "0"}], ",",
              "0", ",", "\n", "\t\t\t\t", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"ROCScore", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"imNCAsimu", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{";;", ",", "grid"}], "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"imNCAobser", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{";;", ",", "grid"}], "]"}], "]"}]}], "]"}], ",", 
               "\n", "\t\t\t\t\t", 
               RowBox[{"{", 
                RowBox[{"grid", ",", 
                 RowBox[{
                  RowBox[{"Dimensions", "[", 
                   RowBox[{"imNCAobser", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
            "]"}], ",", "\n", "\t\t\t   ", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "imNCAobser", "]"}]}], "}"}]}], "]"}], 
         ",", "\n", "\t\t\t  ", 
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"imORsimu", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}], "\[Equal]", "0"}], ",",
              "0", ",", "\n", "\t\t\t\t", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"ROCScore", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"imORsimu", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{";;", ",", "grid"}], "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"imORobser", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{";;", ",", "grid"}], "]"}], "]"}]}], "]"}], ",", 
               "\n", "\t\t\t\t\t", 
               RowBox[{"{", 
                RowBox[{"grid", ",", 
                 RowBox[{
                  RowBox[{"Dimensions", "[", 
                   RowBox[{"imORobser", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
            "]"}], ",", "\n", "\t\t\t   ", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "imORobser", "]"}]}], "}"}]}], "]"}], ",",
          "\n", "\t\t\t  ", 
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"imWAsimu", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}], "\[Equal]", "0"}], ",",
              "0", ",", "\n", "\t\t\t\t", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"ROCScore", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"imWAsimu", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{";;", ",", "grid"}], "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"imWAobser", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{";;", ",", "grid"}], "]"}], "]"}]}], "]"}], ",", 
               "\n", "\t\t\t\t\t", 
               RowBox[{"{", 
                RowBox[{"grid", ",", 
                 RowBox[{
                  RowBox[{"Dimensions", "[", 
                   RowBox[{"imWAobser", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
            "]"}], ",", "\n", "\t\t\t   ", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "imWAobser", "]"}]}], "}"}]}], "]"}]}], 
        "}"}]}], ";", "\n", "\n", 
      RowBox[{"RegionalInterval", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"imSCAsimu", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}], "\[Equal]", "0"}], ",",
              "0", ",", "\n", "\t\t\t\t", 
             RowBox[{"ROCScore", "[", 
              RowBox[{
               RowBox[{"Mean", "[", 
                RowBox[{"Transpose", "[", 
                 RowBox[{"imSCAsimu", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
               RowBox[{"Mean", "[", 
                RowBox[{"Transpose", "[", 
                 RowBox[{"imSCAobser", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], "]"}]}], 
            "]"}], ",", "\n", "\t\t\t   ", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "imSCAobser", "]"}]}], "}"}]}], "]"}], 
         ",", "\n", "\t\t\t  ", 
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"imNCAsimu", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}], "\[Equal]", "0"}], ",",
              "0", ",", "\n", "\t\t\t\t", 
             RowBox[{"ROCScore", "[", 
              RowBox[{
               RowBox[{"Mean", "[", 
                RowBox[{"Transpose", "[", 
                 RowBox[{"imNCAsimu", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
               RowBox[{"Mean", "[", 
                RowBox[{"Transpose", "[", 
                 RowBox[{"imNCAobser", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], "]"}]}], 
            "]"}], ",", "\n", "\t\t\t   ", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "imNCAobser", "]"}]}], "}"}]}], "]"}], 
         ",", "\n", "\t\t\t  ", 
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"imORsimu", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}], "\[Equal]", "0"}], ",",
              "0", ",", "\n", "\t\t\t\t", 
             RowBox[{"ROCScore", "[", 
              RowBox[{
               RowBox[{"Mean", "[", 
                RowBox[{"Transpose", "[", 
                 RowBox[{"imORsimu", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
               RowBox[{"Mean", "[", 
                RowBox[{"Transpose", "[", 
                 RowBox[{"imORobser", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], "]"}]}], 
            "]"}], ",", "\n", "\t\t\t   ", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "imORobser", "]"}]}], "}"}]}], "]"}], ",",
          "\n", "\t\t\t  ", 
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"imWAsimu", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}], "\[Equal]", "0"}], ",",
              "0", ",", "\n", "\t\t\t\t", 
             RowBox[{"ROCScore", "[", 
              RowBox[{
               RowBox[{"Mean", "[", 
                RowBox[{"Transpose", "[", 
                 RowBox[{"imWAsimu", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
               RowBox[{"Mean", "[", 
                RowBox[{"Transpose", "[", 
                 RowBox[{"imWAobser", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], "]"}]}], 
            "]"}], ",", "\n", "\t\t\t   ", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "imWAobser", "]"}]}], "}"}]}], "]"}]}], 
        "}"}]}], ";", "\n", "\t\t\t   ", "\n", 
      RowBox[{"result", "=", 
       RowBox[{"{", 
        RowBox[{
        "GridDaily", ",", "RegionalDaily", ",", "GridInterval", ",", 
         "RegionalInterval"}], "}"}]}], ";", "\n", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{
        "\"\</Users/lambda/Documents/Research/3_S2SEvaluation/Results/ROC/\>\"\
", "<>", "dataset", "<>", "\"\<_ROC.mx\>\""}], ",", "result"}], "]"}]}]}], 
    "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.7172610952541113`*^9, 3.7172611223449802`*^9}, {
   3.717261571506278*^9, 3.717261657245943*^9}, {3.717261696147327*^9, 
   3.7172617813345003`*^9}, {3.717261908438643*^9, 3.717261934236375*^9}, {
   3.717262111535325*^9, 3.7172621576994953`*^9}, 3.717262189706666*^9, {
   3.717264079360442*^9, 3.7172641082928677`*^9}, {3.717264142516197*^9, 
   3.71726422216073*^9}, {3.717264317939464*^9, 3.717264342934778*^9}, {
   3.71726441096797*^9, 3.717264413805118*^9}, {3.717264478491213*^9, 
   3.7172645878396606`*^9}, {3.7172650191838913`*^9, 3.717265038392861*^9}, {
   3.717265764602108*^9, 3.717265771056772*^9}, {3.717271066510188*^9, 
   3.717271069758582*^9}, 3.717271935397588*^9, 3.717272277160787*^9, {
   3.717272690565714*^9, 3.717272713454351*^9}, 3.7173390188372498`*^9, {
   3.7173390683630533`*^9, 3.7173390983387117`*^9}, {3.7173391438236027`*^9, 
   3.71733921847579*^9}, {3.717339544915206*^9, 3.717339547153029*^9}, 
   3.717339815160405*^9, {3.71733986830217*^9, 3.717339868620483*^9}, {
   3.71734013178694*^9, 3.717340143938252*^9}, {3.71734018493043*^9, 
   3.717340244072968*^9}, {3.717340279230398*^9, 3.717340281780361*^9}, {
   3.717340640401989*^9, 3.717340702636799*^9}, {3.7173422161521187`*^9, 
   3.717342216570899*^9}, {3.717342419106058*^9, 3.717342419443102*^9}, 
   3.7173426845658293`*^9, {3.717342729532435*^9, 3.717342839033535*^9}, {
   3.717347820275064*^9, 
   3.7173478525872297`*^9}},ExpressionUUID->"219fa6df-7556-4985-a935-\
1add5468b2f1"],

Cell[CellGroupData[{

Cell[BoxData["models"], "Code",
 CellChangeTimes->{{3.717342716683272*^9, 
  3.717342717426085*^9}},ExpressionUUID->"628e86cf-2ca0-4f0a-b714-\
8b0322441c92"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"BoM\"\>", ",", "\<\"CMA\"\>", ",", "\<\"ECCC\"\>", 
   ",", "\<\"ECMWF\"\>", ",", "\<\"HCMR\"\>", ",", "\<\"ISACCNR\"\>", 
   ",", "\<\"JMA\"\>", ",", "\<\"KMA\"\>", ",", "\<\"MeteoFrance\"\>", 
   ",", "\<\"NCEP\"\>", ",", "\<\"UKMO\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.7173427177287693`*^9, 3.717346477221767*^9, 
  3.7173478745087423`*^9},ExpressionUUID->"0ae454fa-749e-4640-ad3a-\
781fd8931509"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"ROCEvaluation", ",", "models"}], "]"}]], "Code",
 CellChangeTimes->{3.71734885699559*^9, 
  3.717348978067802*^9},ExpressionUUID->"1fc26376-dc6b-42fe-92e0-\
4765e8fa3bf9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"450c0950-1961-475d-983c-ddd02ad2bdbd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GridDaily", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Block", "[", 
        RowBox[{
         RowBox[{"{", "data", "}"}], ",", "\n", "\t", 
         RowBox[{
          RowBox[{"data", "=", 
           RowBox[{"Import", "[", 
            RowBox[{
            "\"\</Users/lambda/Documents/Research/3_S2SEvaluation/Results/ROC/\
\>\"", "<>", "#", "<>", "\"\<_ROC.mx\>\""}], "]"}]}], ";", "\n", "\t", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Mean", "[", 
              RowBox[{"Transpose", "[", "#", "]"}], "]"}], "&"}], ",", 
            RowBox[{"data", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], "]"}], "&"}], ",", 
      "models"}], "]"}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.717346319158333*^9, 3.7173463259965963`*^9}, {
  3.717349863350075*^9, 3.717349884932309*^9}, {3.7173503207435017`*^9, 
  3.717350322268359*^9}, {3.7173503810115833`*^9, 3.717350446026781*^9}, {
  3.7173511871692266`*^9, 
  3.71735118997561*^9}},ExpressionUUID->"4da69e09-9978-4a90-8903-\
325e1eaf3788"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RegionalDaily", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Block", "[", 
        RowBox[{
         RowBox[{"{", "data", "}"}], ",", "\n", "\t", 
         RowBox[{
          RowBox[{"data", "=", 
           RowBox[{"Import", "[", 
            RowBox[{
            "\"\</Users/lambda/Documents/Research/3_S2SEvaluation/Results/ROC/\
\>\"", "<>", "#", "<>", "\"\<_ROC.mx\>\""}], "]"}]}], ";", "\n", "\t", 
          RowBox[{"data", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], "&"}], ",", "models"}], 
     "]"}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.7173505783655853`*^9, 3.717350642931798*^9}, {
  3.717351191495824*^9, 
  3.717351194967174*^9}},ExpressionUUID->"8ce7e1ea-a74b-4974-81d0-\
3350e3e97299"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GridInterval", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"Transpose", ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Block", "[", 
          RowBox[{
           RowBox[{"{", "data", "}"}], ",", "\n", "\t", 
           RowBox[{
            RowBox[{"data", "=", 
             RowBox[{"Import", "[", 
              RowBox[{
              "\"\</Users/lambda/Documents/Research/3_S2SEvaluation/Results/\
ROC/\>\"", "<>", "#", "<>", "\"\<_ROC.mx\>\""}], "]"}]}], ";", "\n", "\t", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Map", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Length", "[", "#", "]"}], ">", "0"}], ",", 
                   RowBox[{"Mean", "[", "#", "]"}], ",", "0"}], "]"}], "&"}], 
                ",", 
                RowBox[{"data", "[", 
                 RowBox[{"[", 
                  RowBox[{"3", ",", "i"}], "]"}], "]"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", 
                RowBox[{
                 RowBox[{"Dimensions", "[", "data", "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}]}]}], "]"}], 
         "&"}], ",", "models"}], "]"}], "]"}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.717350796413657*^9, 3.717350817306245*^9}, {
  3.717350895190755*^9, 3.717350914584928*^9}, {3.7173509790164747`*^9, 
  3.717351050004692*^9}},ExpressionUUID->"c67bc7e3-4fbe-48f3-b431-\
0df30a977802"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RegionalInterval", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"Transpose", ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Block", "[", 
          RowBox[{
           RowBox[{"{", "data", "}"}], ",", "\n", "\t", 
           RowBox[{
            RowBox[{"data", "=", 
             RowBox[{"Import", "[", 
              RowBox[{
              "\"\</Users/lambda/Documents/Research/3_S2SEvaluation/Results/\
ROC/\>\"", "<>", "#", "<>", "\"\<_ROC.mx\>\""}], "]"}]}], ";", "\n", "\t", 
            RowBox[{"data", "[", 
             RowBox[{"[", "4", "]"}], "]"}]}]}], "]"}], "&"}], ",", 
        "models"}], "]"}], "]"}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.717351085644451*^9, 
  3.717351144154241*^9}},ExpressionUUID->"75384e34-d2b3-4537-a1ea-\
f6dfa23b870f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"range", "=", 
   RowBox[{"{", 
    RowBox[{"0.5", ",", "1"}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.7173514616468163`*^9, 3.717351469045656*^9}, {
  3.71735172760618*^9, 
  3.717351727884647*^9}},ExpressionUUID->"3a83eddf-bf4d-4e28-871e-\
13fc1e0acb2e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Dimensions", "[", "GridDaily", "]"}], "\n", 
 RowBox[{"Dimensions", "[", "RegionalDaily", "]"}], "\n", 
 RowBox[{"Dimensions", "[", "GridInterval", "]"}], "\n", 
 RowBox[{"Dimensions", "[", "RegionalInterval", "]"}]}], "Code",
 CellChangeTimes->{{3.7173506447956657`*^9, 3.7173506617947493`*^9}, {
  3.71735117145753*^9, 
  3.717351178248756*^9}},ExpressionUUID->"030065b9-c922-42e2-86dd-\
5aa59acb9b59"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "11"}], "}"}]], "Output",
 CellChangeTimes->{{3.717350649546967*^9, 3.717350662096137*^9}, {
  3.717351178572802*^9, 
  3.717351202111589*^9}},ExpressionUUID->"7c3f7576-3c7d-49c4-9824-\
55f6af1c9a13"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "11"}], "}"}]], "Output",
 CellChangeTimes->{{3.717350649546967*^9, 3.717350662096137*^9}, {
  3.717351178572802*^9, 
  3.717351202145726*^9}},ExpressionUUID->"834bccdf-4643-4cbc-8669-\
7a8eaee9a2d1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "7", ",", "11"}], "}"}]], "Output",
 CellChangeTimes->{{3.717350649546967*^9, 3.717350662096137*^9}, {
  3.717351178572802*^9, 
  3.7173512021781*^9}},ExpressionUUID->"e1e1ab32-4106-4150-9b8c-86c0c7cc8e0b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "7", ",", "11"}], "}"}]], "Output",
 CellChangeTimes->{{3.717350649546967*^9, 3.717350662096137*^9}, {
  3.717351178572802*^9, 
  3.717351202211145*^9}},ExpressionUUID->"0c9babe1-c597-4759-9310-\
363ed2162df9"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"GridDailyDraw", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"GridDaily", "[", 
        RowBox[{"[", "region", "]"}], "]"}], ",", "\n", "\t\t", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"Thickness", "[", "0.005", "]"}]}], "}"}], "&"}], ",", 
          "datasets"}], "]"}]}], ",", "\n", "\t\t", 
       RowBox[{"PlotRange", "\[Rule]", "range"}], ",", "\n", "\t\t", 
       RowBox[{"BaseStyle", "\[Rule]", "40"}], ",", "\n", "\t\t", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", "\n", "\t\t", 
       RowBox[{"ImageSize", "\[Rule]", "800"}], ",", "\n", "\t\t", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Forecast Leading Day\>\"", ",", "\"\<ROC\>\""}], 
         "}"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"region", ",", "4"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"RegionalDailyDraw", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"RegionalDaily", "[", 
        RowBox[{"[", "region", "]"}], "]"}], ",", "\n", "\t\t", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"Thickness", "[", "0.005", "]"}]}], "}"}], "&"}], ",", 
          "datasets"}], "]"}]}], ",", "\n", "\t\t", 
       RowBox[{"PlotRange", "\[Rule]", "range"}], ",", "\n", "\t\t", 
       RowBox[{"BaseStyle", "\[Rule]", "40"}], ",", "\n", "\t\t", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", "\n", "\t\t", 
       RowBox[{"ImageSize", "\[Rule]", "800"}], ",", "\n", "\t\t", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Forecast Leading Day\>\"", ",", "\"\<ROC\>\""}], 
         "}"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"region", ",", "4"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"GridIntervalDraw", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"BarChart", "[", 
      RowBox[{
       RowBox[{"GridInterval", "[", 
        RowBox[{"[", "region", "]"}], "]"}], ",", "\n", "\t", 
       RowBox[{"BaseStyle", "\[Rule]", "40"}], ",", "\n", "\t", 
       RowBox[{"BarSpacing", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "4."}], "}"}]}], ",", "\n", "\t", 
       RowBox[{"ChartStyle", "\[Rule]", 
        RowBox[{"datasets", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "1"}], "]"}], "]"}]}], ",", "\n", "\t", 
       RowBox[{"ChartLabels", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<1d1d\>\"", ",", "\"\<2d2d\>\"", ",", "\"\<4d4d\>\"", ",", 
            "\"\<1w1w\>\"", ",", "\"\<2w2w\>\"", ",", "\"\<3w3w\>\"", ",", 
            "\"\<4w4w\>\""}], "}"}], ",", "None"}], "}"}]}], ",", "\n", "\t", 
       
       RowBox[{"Frame", "\[Rule]", "True"}], ",", "\n", "\t", 
       RowBox[{"PlotRange", " ", "->", " ", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", " ", "range"}], "}"}]}], ",", "\n", "    ", 
       RowBox[{"PlotRangePadding", " ", "->", " ", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", " ", "0"}], "}"}]}], ",", "\n", "    ", 
       RowBox[{"PlotRangeClipping", " ", "->", " ", "True"}], ",", "\n", "\t", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Forecast Interval\>\"", ",", "\"\<ROC\>\""}], "}"}]}], 
       ",", "\n", "\t", 
       RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"region", ",", "4"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"RegionalIntervalDraw", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"BarChart", "[", 
      RowBox[{
       RowBox[{"RegionalInterval", "[", 
        RowBox[{"[", "region", "]"}], "]"}], ",", "\n", "\t", 
       RowBox[{"BaseStyle", "\[Rule]", "40"}], ",", "\n", "\t", 
       RowBox[{"BarSpacing", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "4."}], "}"}]}], ",", "\n", "\t", 
       RowBox[{"ChartStyle", "\[Rule]", 
        RowBox[{"datasets", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "1"}], "]"}], "]"}]}], ",", "\n", "\t", 
       RowBox[{"ChartLabels", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<1d1d\>\"", ",", "\"\<2d2d\>\"", ",", "\"\<4d4d\>\"", ",", 
            "\"\<1w1w\>\"", ",", "\"\<2w2w\>\"", ",", "\"\<3w3w\>\"", ",", 
            "\"\<4w4w\>\""}], "}"}], ",", "None"}], "}"}]}], ",", "\n", "\t", 
       
       RowBox[{"Frame", "\[Rule]", "True"}], ",", "\n", "\t", 
       RowBox[{"PlotRange", " ", "->", " ", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", " ", "range"}], "}"}]}], ",", "\n", "    ", 
       RowBox[{"PlotRangePadding", " ", "->", " ", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", " ", "0"}], "}"}]}], ",", "\n", "    ", 
       RowBox[{"PlotRangeClipping", " ", "->", " ", "True"}], ",", "\n", "\t", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Forecast Interval\>\"", ",", "\"\<ROC\>\""}], "}"}]}], 
       ",", "\n", "\t", 
       RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"region", ",", "4"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"label", "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{
       RowBox[{"table", "[", "pairs_", "]"}], " ", ":=", 
       RowBox[{"TableForm", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", "pairs", "]"}], ",", 
         RowBox[{"TableAlignments", "\[Rule]", "Center"}]}], "]"}]}], ";", 
      "\n", "\t", 
      RowBox[{"SwatchLegend", "[", 
       RowBox[{
        RowBox[{"datasets", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"datasets", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "2"}], "]"}], "]"}], ",", "\n", "\t", 
        RowBox[{"LegendLayout", "\[Rule]", "table"}], ",", "\n", "\t", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"FontSize", "\[Rule]", "50"}], "}"}]}], ",", "\n", "\t", 
        RowBox[{"LegendMarkerSize", "\[Rule]", "50"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"fig", "=", 
   RowBox[{"Labeled", "[", 
    RowBox[{
     RowBox[{"TableForm", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
         "GridDailyDraw", ",", "RegionalDailyDraw", ",", "GridIntervalDraw", 
          ",", "RegionalIntervalDraw"}], "}"}], "]"}], ",", "\n", "\t", 
       RowBox[{"TableHeadings", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"#", ",", 
               RowBox[{"FontSize", "\[Rule]", "50"}]}], "]"}], "&"}], ",", 
            RowBox[{"{", 
             RowBox[{
             "\"\<SCA\>\"", ",", "\"\<NCA\>\"", ",", "\"\<OR\>\"", ",", 
              "\"\<WA\>\""}], "}"}]}], "]"}], ",", "\n", "\t\t", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"#", ",", 
               RowBox[{"FontSize", "\[Rule]", "50"}]}], "]"}], "&"}], ",", 
            RowBox[{"{", 
             RowBox[{
             "\"\<Grid Daily Scale\>\"", ",", "\"\<Regional Daily Scale\>\"", 
              ",", "\"\<Grid Interval Scale\>\"", ",", 
              "\"\<Regional Interval Scale\>\""}], "}"}]}], "]"}]}], "}"}]}], 
       ",", "\n", "\t", 
       RowBox[{"TableAlignments", "\[Rule]", "Center"}]}], "]"}], ",", 
     "label", ",", "Bottom"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\</Users/lambda/Documents/Research/3_S2SEvaluation/Results/fig_ROC.pdf\>\
\"", ",", "fig"}], "]"}], ";"}]}], "Code",
 CellChangeTimes->{{3.717351281517667*^9, 3.7173512911519117`*^9}, {
  3.717351451850397*^9, 3.7173515924115677`*^9}, {3.71735168135942*^9, 
  3.717351709493843*^9}},ExpressionUUID->"bfe9048a-544f-4e34-bc4e-\
bd1a9ed81e6f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"5f25a7db-1617-4725-a408-b3acf3e77fd9"],

Cell["\<\
For a fair comparison across a seamless range of time scales, the \
verification is performed using data averaged over time windows equal in \
length to the forecast lead time. At a lead time of one day, skill is \
greatest in the extratropics around 40-60o latitude, lowest around 20o, and \
has a secondary local maximum close to the equator. The extratropical skill \
at this short range is highest in the winter hemisphere presumably due to the \
higher predictability of winter baroclinic systems.\
\>", "Text",ExpressionUUID->"8cd5e2e9-a800-45da-927b-bd35120f6155"],

Cell["\<\
 defining a consistent and useful distance metric on these aspects\
\>", "Text",ExpressionUUID->"0fcca257-3472-4583-b9ab-c7705cfd2ceb"],

Cell[TextData[{
 "The essence of our approach is as follows. We compute the prediction skill \
at\n",
 StyleBox[" ",
  FontFamily->"Helvetica",
  FontSize->11],
 "a range of lead times, from one day to one month. As the lead time \
increases, we also\n",
 StyleBox[" ",
  FontFamily->"Helvetica",
  FontSize->11],
 "increase the length of the time window over which the data are averaged for\
\n",
 StyleBox[" ",
  FontFamily->"Helvetica",
  FontSize->11],
 "verification. This is intended to capture the fact that we are \
transitioning from\n",
 StyleBox[" ",
  FontFamily->"Helvetica",
  FontSize->11],
 "weather to climate prediction as the lead time increases, and to allow the \
transition to\n",
 StyleBox[" ",
  FontFamily->"Helvetica",
  FontSize->11],
 "occur smoothly. The skill is computed for both total precipitation and \
anomalies, and\n",
 StyleBox[" ",
  FontFamily->"Helvetica",
  FontSize->11],
 "comparison is made with the skill achievable by a persistence forecast of \
the\n",
 StyleBox[" ",
  FontFamily->"Helvetica",
  FontSize->11],
 "precipitation anomalies. For comparison we also evaluate the forecasts at \
varying lead\ntime but with a fixed verification window of 1 day."
}], "Text",
 CellChangeTimes->{{3.716214090409994*^9, 
  3.716214101039338*^9}},ExpressionUUID->"6dd152ab-94f9-4ab3-ac92-\
2c412be69ac5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"/Users/lambda/Documents/Research/3_S2SEvaluation/Results/ROC/\
BoM_ROC.mx\"\>", 
   ",", "\<\"/Users/lambda/Documents/Research/3_S2SEvaluation/Results/ROC/CMA_\
ROC.mx\"\>", 
   ",", "\<\"/Users/lambda/Documents/Research/3_S2SEvaluation/Results/ROC/\
ECCC_ROC.mx\"\>", 
   ",", "\<\"/Users/lambda/Documents/Research/3_S2SEvaluation/Results/ROC/\
ECMWF_ROC.mx\"\>", 
   ",", "\<\"/Users/lambda/Documents/Research/3_S2SEvaluation/Results/ROC/\
HCMR_ROC.mx\"\>", 
   ",", "\<\"/Users/lambda/Documents/Research/3_S2SEvaluation/Results/ROC/\
ISACCNR_ROC.mx\"\>", 
   ",", "\<\"/Users/lambda/Documents/Research/3_S2SEvaluation/Results/ROC/JMA_\
ROC.mx\"\>", 
   ",", "\<\"/Users/lambda/Documents/Research/3_S2SEvaluation/Results/ROC/KMA_\
ROC.mx\"\>", 
   ",", "\<\"/Users/lambda/Documents/Research/3_S2SEvaluation/Results/ROC/\
MeteoFrance_ROC.mx\"\>", 
   ",", "\<\"/Users/lambda/Documents/Research/3_S2SEvaluation/Results/ROC/\
NCEP_ROC.mx\"\>", 
   ",", "\<\"/Users/lambda/Documents/Research/3_S2SEvaluation/Results/ROC/\
UKMO_ROC.mx\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.717346299777079*^9, 3.7173478671577187`*^9, 
  3.717349524463719*^9},ExpressionUUID->"ca261aaa-f37a-4d71-af33-\
1859322c3a01"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"54fa6fea-71e5-42c7-97e8-ea60454954ff"],

Cell["LinearROC", "Section",
 CellChangeTimes->{{3.715625787110599*^9, 3.715625788499967*^9}, {
  3.7156282146572943`*^9, 3.715628217953314*^9}, {3.716657826710766*^9, 
  3.71665782875006*^9}, {3.717352087161462*^9, 
  3.7173520908315887`*^9}},ExpressionUUID->"1331d563-2efa-45c6-9177-\
60bc723ac2e7"],

Cell[CellGroupData[{

Cell["ROC ", "Subchapter",
 CellChangeTimes->{{3.71691673294831*^9, 
  3.716916733706813*^9}},ExpressionUUID->"a7155f44-dfb4-45be-8baa-\
0567d849ffcc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ROCPoint", "[", 
   RowBox[{"simu_", ",", "obser_", ",", "tercile_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "point", ",", "bisimu", ",", "biobser", ",", "FalsePositiveRate", ",", 
      "TruePositiveRate"}], "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"point", "=", 
      RowBox[{"Quantile", "[", 
       RowBox[{"obser", ",", "tercile"}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"bisimu", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"#", ">", "point"}], ",", "1", ",", "0"}], "]"}], "&"}], 
        ",", "simu"}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"biobser", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"#", ">", "point"}], ",", "1", ",", "0"}], "]"}], "&"}], 
        ",", "obser"}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"FalsePositiveRate", "=", 
      RowBox[{
       RowBox[{"Total", "[", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"And", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "1"}], ",", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "0"}]}], "]"}], 
             ",", "1.", ",", "0."}], "]"}], "&"}], ",", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{"bisimu", ",", "biobser"}], "}"}], "]"}]}], "]"}], "]"}], 
       "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Length", "[", "biobser", "]"}], "-", 
         RowBox[{"Total", "[", "biobser", "]"}]}], ")"}]}]}], ";", "\n", 
     "\t\t", 
     RowBox[{"TruePositiveRate", "=", 
      RowBox[{
       RowBox[{"Total", "[", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"And", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "1"}], ",", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "1"}]}], "]"}], 
             ",", "1.", ",", "0."}], "]"}], "&"}], ",", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{"bisimu", ",", "biobser"}], "}"}], "]"}]}], "]"}], "]"}], 
       "/", 
       RowBox[{"Total", "[", "biobser", "]"}]}]}], ";", "\n", "\t\t", 
     RowBox[{"{", 
      RowBox[{"FalsePositiveRate", ",", "TruePositiveRate"}], "}"}]}]}], 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.716917329368575*^9, 3.716917410079918*^9}, {
   3.716917670125122*^9, 3.716917688737439*^9}, 3.7169177222534313`*^9, {
   3.71691776834295*^9, 3.716917770198345*^9}, {3.716918175793373*^9, 
   3.716918180359756*^9}, {3.716918220694716*^9, 3.716918328296632*^9}, 
   3.7169184722892847`*^9, {3.716918586498473*^9, 3.7169186216593523`*^9}, {
   3.716918701346843*^9, 3.71691871347023*^9}, {3.716918800340975*^9, 
   3.7169188180843763`*^9}, {3.716918856296802*^9, 3.716918901934931*^9}, {
   3.716919100306055*^9, 3.716919226504942*^9}, {3.716919909140963*^9, 
   3.716919929162407*^9}, {3.716919964251376*^9, 3.7169199677128487`*^9}, {
   3.716920203469982*^9, 3.716920204284493*^9}, {3.716920276780294*^9, 
   3.716920293922621*^9}, {3.7169204245847797`*^9, 3.716920450918282*^9}, {
   3.716920630762258*^9, 3.716920636264254*^9}, {3.7169214211192303`*^9, 
   3.716921422468564*^9}, {3.716923619246188*^9, 3.7169236350778112`*^9}, {
   3.7173370233011312`*^9, 
   3.717337031043146*^9}},ExpressionUUID->"764965d5-0c79-4478-8726-\
056f31309434"],

Cell[BoxData[
 RowBox[{
  RowBox[{"LinearROCScore", "[", 
   RowBox[{"simu_", ",", "obser_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"origin", ",", "final", ",", "l", ",", "model", ",", "nsimu"}], 
     "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"model", "=", 
      RowBox[{"LinearModelFit", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{"simu", ",", "obser"}], "}"}], "]"}], ",", "xx", ",", 
        "xx"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"nsimu", "=", 
      RowBox[{"Map", "[", 
       RowBox[{"model", ",", "simu"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"origin", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Prepend", "[", 
         RowBox[{
          RowBox[{"ROCPoint", "[", 
           RowBox[{"nsimu", ",", "obser", ",", "tercile"}], "]"}], ",", 
          "tercile"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"tercile", ",", "0.01", ",", "0.99", ",", "0.02"}], "}"}]}], 
       "]"}]}], ";", "\n", "\t", 
     RowBox[{"final", "=", 
      RowBox[{"Prepend", "[", 
       RowBox[{
        RowBox[{"Append", "[", 
         RowBox[{
          RowBox[{"Sort", "[", 
           RowBox[{
            RowBox[{"DeleteDuplicates", "[", 
             RowBox[{"origin", "[", 
              RowBox[{"[", 
               RowBox[{";;", ",", 
                RowBox[{"2", ";;", "3"}]}], "]"}], "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"#2", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ">", 
              RowBox[{"#1", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"l", "=", 
      RowBox[{"Length", "[", "final", "]"}]}], ";", "\n", "\t", 
     RowBox[{"Total", "[", 
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"final", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"2", ";;", "l"}], ",", "1"}], "]"}], "]"}], "-", 
          RowBox[{"final", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"1", ";;", 
              RowBox[{"l", "-", "1"}]}], ",", "1"}], "]"}], "]"}]}], ")"}], 
        "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"final", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"2", ";;", "l"}], ",", "2"}], "]"}], "]"}], "+", 
           RowBox[{"final", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"1", ";;", 
               RowBox[{"l", "-", "1"}]}], ",", "2"}], "]"}], "]"}]}], ")"}], 
         "/", "2."}]}], "]"}], "]"}]}]}], "]"}]}]], "Code",
 CellChangeTimes->{{3.716923624244913*^9, 3.716923821429144*^9}, {
   3.716924091963422*^9, 3.7169241132028637`*^9}, {3.716924154772696*^9, 
   3.716924155819018*^9}, {3.7169241924969883`*^9, 3.716924536913549*^9}, {
   3.716924622297467*^9, 3.716924684509676*^9}, {3.7169248164332542`*^9, 
   3.716924847432054*^9}, {3.716924972244879*^9, 3.716925000460414*^9}, {
   3.716925370891469*^9, 3.716925401082692*^9}, {3.716925432193975*^9, 
   3.716925508598096*^9}, {3.716926287059024*^9, 3.716926290209504*^9}, {
   3.716926327207059*^9, 3.716926457234294*^9}, {3.7171624392080603`*^9, 
   3.717162465214031*^9}, {3.71716261744226*^9, 3.717162623017297*^9}, 
   3.7171681765701933`*^9, {3.7173370662670918`*^9, 3.7173371152399406`*^9}, {
   3.717337271035181*^9, 3.717337275001698*^9}, {3.7173373258418293`*^9, 
   3.717337326743484*^9}, {3.717337359895355*^9, 3.717337399397131*^9}, {
   3.717337433132181*^9, 3.717337436866412*^9}, {3.717337521368977*^9, 
   3.7173375395995703`*^9}, {3.7173375921421547`*^9, 
   3.7173375922936983`*^9}, {3.7173378178953667`*^9, 3.717337819030301*^9}, {
   3.717337910907193*^9, 3.717338002638853*^9}, {3.717346442426626*^9, 
   3.7173464455769444`*^9}, {3.717351960942821*^9, 3.717351985854113*^9}, {
   3.717352024805337*^9, 3.7173520316987963`*^9}, {3.717352079681095*^9, 
   3.717352095448783*^9}},ExpressionUUID->"2d5983d9-16d7-46d0-a54c-\
e667cdf8f2e7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ROCDraw", "[", 
   RowBox[{"simu_", ",", "obser_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"origin", ",", "final"}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"origin", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Prepend", "[", 
         RowBox[{
          RowBox[{"ROCPoint", "[", 
           RowBox[{"simu", ",", "obser", ",", "tercile"}], "]"}], ",", 
          "tercile"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"tercile", ",", "0.01", ",", "0.99", ",", "0.05"}], "}"}]}], 
       "]"}]}], ";", "\n", "\t", 
     RowBox[{"final", "=", 
      RowBox[{"Sort", "[", 
       RowBox[{
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"Append", "[", 
          RowBox[{
           RowBox[{"Prepend", "[", 
            RowBox[{"origin", ",", 
             RowBox[{"{", 
              RowBox[{"0.", ",", "0.", ",", "0."}], "}"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.", ",", "1.", ",", "1."}], "}"}]}], "]"}], "]"}], ",", 
        
        RowBox[{
         RowBox[{
          RowBox[{"#2", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ">", 
          RowBox[{"#1", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}]}], ";", "\n", 
     "\t", 
     RowBox[{"Labeled", "[", 
      RowBox[{
       RowBox[{"Show", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Plot", "[", 
           RowBox[{"x", ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"Dashed", ",", "Gray"}], "}"}]}], ",", "\n", "\t\t\t\t", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", "\n", "\t\t\t\t", 
            RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", "\n", 
            "\t\t\t\t", 
            RowBox[{"ImageSize", "\[Rule]", "400"}], ",", "\n", "\t\t\t\t", 
            RowBox[{"BaseStyle", "\[Rule]", "15"}], ",", "\n", "\t\t\t\t", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", "\n", 
            "\t\t\t\t", 
            RowBox[{"FrameLabel", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<False Alarm Ratio\>\"", ",", 
               "\"\<Probability of Detection\>\""}], "}"}]}]}], "]"}], ",", 
          "\n", "\t\t\t", 
          RowBox[{"ListLinePlot", "[", 
           RowBox[{
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Labeled", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "&"}], ",", 
              "final"}], "]"}], ",", "\n", "\t\t\t\t", 
            RowBox[{"PlotMarkers", "\[Rule]", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<*\>\"", ",", 
               RowBox[{"FontSize", "\[Rule]", "34"}]}], "]"}]}]}], "]"}]}], 
         "}"}], "]"}], ",", "\n", "\t\t\t", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"\"\<ROC Score=\>\"", "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{"Round", "[", 
            RowBox[{
             RowBox[{"LinearROCScore", "[", 
              RowBox[{"simu", ",", "obser"}], "]"}], ",", "0.001"}], "]"}], 
           "]"}]}], ",", "\n", "\t\t\t\t", 
         RowBox[{"FontSize", "\[Rule]", "15"}]}], "]"}], ",", "Top"}], 
      "]"}]}]}], "]"}]}]], "Code",
 CellChangeTimes->{{3.716923624244913*^9, 3.716923821429144*^9}, {
   3.716924091963422*^9, 3.7169241132028637`*^9}, {3.716924154772696*^9, 
   3.716924155819018*^9}, {3.7169241924969883`*^9, 3.716924536913549*^9}, {
   3.716924622297467*^9, 3.716924684509676*^9}, {3.7169248164332542`*^9, 
   3.716924847432054*^9}, {3.716924972244879*^9, 3.716925000460414*^9}, {
   3.716925370891469*^9, 3.716925401082692*^9}, {3.716925432193975*^9, 
   3.716925508598096*^9}, {3.716926287059024*^9, 3.716926290209504*^9}, {
   3.716926327207059*^9, 3.716926457234294*^9}, {3.7171624392080603`*^9, 
   3.717162465214031*^9}, {3.71716261744226*^9, 3.717162623017297*^9}, 
   3.7171681765701933`*^9, {3.7173370662670918`*^9, 3.717337067156619*^9}, {
   3.7173371225212097`*^9, 3.7173371523917427`*^9}, {3.7173521028186693`*^9, 
   3.7173521064041862`*^9}},ExpressionUUID->"42fc1842-333b-48c7-9120-\
ffbdbbe2d11d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ROCDraw", "[", 
  RowBox[{
   RowBox[{"RandomReal", "[", 
    RowBox[{"0.5", ",", "3000"}], "]"}], ",", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"0.5", ",", "3000"}], "]"}]}], "]"}]], "Code",
 CellChangeTimes->{{3.7173372186040773`*^9, 3.7173372316025677`*^9}, {
  3.717337279115757*^9, 3.717337279890092*^9}, {3.717337313821084*^9, 
  3.717337314095693*^9}, {3.717337408215464*^9, 3.71733750416109*^9}, {
  3.7173380781215277`*^9, 3.717338083155036*^9}, {3.7173381250795393`*^9, 
  3.717338126569426*^9}, {3.7173384086608763`*^9, 3.717338442093378*^9}, {
  3.7173385708382177`*^9, 
  3.7173385722010508`*^9}},ExpressionUUID->"5e2f08ba-3702-4b19-ab88-\
d600c658f075"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}], 
           GrayLevel[0.5]], 
          LineBox[CompressedData["
1:eJxFxW0w03EcAPCNdZRrjMr9adxE5SlOUlKpuMhDneHk8nRCWk/InXR1WrdJ
nua6nZTnh5R2jGyuMnHsdDnPo1GzMUtj83RndnRZ9cL39+JzH0r8XWqiHg6H
C/7n/wGJypGu+fAz2xN8LFJkmLv39kcrS8paMV84cED8vhwLgyMStB3PsQR4
yuWpTwGWDlftvZydizFgumHroWcYG74SWc1dWa2DjXT0KD8rLmwXsqTsyePB
GYOe3iVrH2FzHkmKx3fCbXKf/qFT3XA3rdwyUi2ENQdPGzfe/gLrbXBMLO36
YA9dXFtoUz/cz3Af7HUYgq2LVBsNS8OwSiuTjruOwnUL7X3EQhFMJL9ZVijG
4Pwb/KQq22/w+lmOIjlLDKe7CXn7eiZgWZMwb4TyHf5NGyu1f/ADdjxnsJXU
LoH9aijXW8ylcAY51mYmSgY7qcONxMHTsJnxiqFwE03oLOUeKJuBb7q3T+4M
lMOci/FVn9fRGpWFyVzxLMwP9dNn+yrgLH9mJW8OTZkKmKhl/oRPHmewMbc5
OMpqaAMvQmv6CuQp9F9wCSEmnWqrhM2k/Bo9IXrHI3qYZ+o8jGuI4cpNF+C0
V9wC0250h2OOIemOCiYFpDk9IaphifOwKFOAbq7wtlXELMLRXA8SeQv9mFlN
l7xbghuV5FJi0DKcU86Mk15CJ1AX7ZpC0PsFgubgCHQu62pvfjw62ePl6q5M
tA1jj79BPXrrxMPd4rfoycXZ0XoOuiiiNfpCC1rnQL3HFKAlI6wKfRH6Q7b2
mmgczfaKta+dQAe+PsI7L0V/uj/wlT6PLnY+xgpRo1PlZWGUZfThoFuyrjU0
AT9WV6RFT/O9aHGbaAGt1sX1D/qFtZFGp0P/BaO4ekM=
           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$9878#1"]& ]}}, {}, {}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.019444444444444445`], 
          RGBColor[0.65, 0., 0.], 
          AbsoluteThickness[1.6], FontFamily -> "Baskerville"], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQjQ7Ecw6K5RxcZn/vLgistZ81EwR22ldzvlXdMv2A
ff/0F9YiKYftxTPnMHw9esT+0/7zUe8LTtgbzT1aInb5pL3f33nRj66ctw/4
tcT/15Lz9tunHd0lL3PZ3hgMLtu3MHzctOvmVftpYHDNfvWa7v2vlt+0V7C+
5BAhe8t+wW6DA5/S7ti3BLokFFTfsZ/v9RWI7ttn5s11UeV+YC+33iTx6LOH
9rnuk39rnXloH8LsYdoQ8tj+/elk7aa2x/a/Xroc3b7jib3zj6Nn6vc9sQ+M
c67kffrU/h/P73bF3Gf20/N/Tsv/+cyeoXnNvB/6L+zP8E7ScMl4ab9S2czb
Y/FLe6n1050XfnxlX/m06cTaf6/sxWNLLrqKv7U/LRTkI7fujb39y8l2Lye/
s1/+/dqGSM939pBQ+4BBbw/Tvftx5nt7AKO8q1Q=
          "]]}}, {{
         Directive[
          PointSize[0.019444444444444445`], 
          RGBColor[0.65, 0., 0.], 
          AbsoluteThickness[1.6], FontFamily -> "Baskerville"], 
         GeometricTransformationBox[
          InsetBox[
           BoxData[
            FormBox[
             StyleBox["\"*\"", FontSize -> 34, StripOnInput -> False], 
             TraditionalForm]], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGAQA2JGIGZiwATiOQfFcg4us793FwTW2s+aCQI77as536pu
mX7Avn/6C2uRlMP24plzGL4ePWL/af/5qPcFJ+yN5h4tEbt80t7v77zoR1fO
2wf8WuL/a8l5++3Tju6Sl7lsbwwGl+1bGD5u2nXzqv00MLhmv3pN9/5Xy2/a
K1hfcoiQvWW/YLfBgU9pd+xbAl0SCqrv2M/3+gpE9+0z8+a6qHI/sJdbb5J4
9NlD+1z3yb+1zjy0D2H2MG0IeWz//nSydlPbY/tfL12Obt/xxN75x9Ez9fue
2AfGOVfyPn1q/4/nd7ti7jP76fk/p+X/fGbP0Lxm3g/9F/ZneCdpuGS8tF+p
bObtsfilvdT66c4LP76yr3zadGLtv1f24rElF13F39qfFgrykVv3xt7+5WS7
l5Pf2S//fm1DpOc7e0iofcCgt4fp3v048709AK2cq1Y=
          "]]}, {}}, {
        TagBox[{
          Opacity[0.], {
           PointBox[{0., 0.}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$10503, {1}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.044444444444444446`, 0.058333333333333334`}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$10503, {2}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.1, 0.12962962962962962`}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$10503, {3}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.1514916698953894, 0.162291169451074}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$10503, {4}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.19094650205761315`, 0.2017543859649123}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$10503, {5}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.24868421052631579`, 0.24722222222222223`}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$10503, {6}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.29859154929577464`, 0.3}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$10503, {7}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.3414141414141414, 0.3529411764705882}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$10503, {8}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.40087383943200433`, 0.4080410607356715}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$10503, {9}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.4437834622248662, 0.4450341167551175}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$10503, {10}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.4993464052287581, 0.501360544217687}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$10503, {11}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.5594202898550724, 0.5561728395061728}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$10503, {12}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.6040650406504064, 0.6101694915254238}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$10503, {13}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.6475485661424607, 0.6482542991141219}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$10503, {14}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.6842105263157895, 0.7008216529724505}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$10503, {15}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.717948717948718, 0.7558558558558559}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$10503, {16}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.7939778129952457, 0.801181933305192}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$10503, {17}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.841995841995842, 0.8435887256847955}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$10503, {18}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.9090909090909091, 0.8962546816479401}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$10503, {19}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.9555555555555556, 0.94645390070922}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$10503, {20}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{1., 1.}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$10503, {21}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{1., 0.9875420875420876}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$10503, {
           22}}]& ]}}, {{{{}, {}}, {{}, {{
           Opacity[0], 
           TagBox[
            TooltipBox[
             PointBox[{0., 0.}], 
             PaneBox[
              StyleBox[
              "0.`", {FontFamily -> "Baskerville"}, StripOnInput -> False]]], 
            Annotation[#, 
             Pane[
              Style[0., {FontFamily -> "Baskerville"}]], "Tooltip"]& ]}, 
          InsetBox[
           FormBox[
            PaneBox[
             StyleBox[
             "0.9600000000000001`", {FontFamily -> "Baskerville"}, 
              StripOnInput -> False]], TraditionalForm], 
           
           Offset[{2, 0}, {0.044444444444444446`, 
            0.058333333333333334`}], {-0.9620000000000001, 
           0.9620000000000001}], 
          InsetBox[
           FormBox[
            PaneBox[
             StyleBox[
             "0.91`", {FontFamily -> "Baskerville"}, StripOnInput -> False]], 
            TraditionalForm], 
           Offset[{2, 0}, {0.1, 0.12962962962962962`}], {-0.9620000000000001, 
           0.9620000000000001}], 
          InsetBox[
           FormBox[
            PaneBox[
             StyleBox[
             "0.8600000000000001`", {FontFamily -> "Baskerville"}, 
              StripOnInput -> False]], TraditionalForm], 
           Offset[{-2, -2}, {0.1514916698953894, 0.162291169451074}], {
           0.9620000000000001, -0.9620000000000001}], 
          InsetBox[
           FormBox[
            PaneBox[
             StyleBox[
             "0.81`", {FontFamily -> "Baskerville"}, StripOnInput -> False]], 
            TraditionalForm], 
           
           Offset[{2, 0}, {0.19094650205761315`, 
            0.2017543859649123}], {-0.9620000000000001, 0.9620000000000001}], 
          
          InsetBox[
           FormBox[
            PaneBox[
             StyleBox[
             "0.76`", {FontFamily -> "Baskerville"}, StripOnInput -> False]], 
            TraditionalForm], 
           Offset[{-2, -2}, {0.24868421052631579`, 0.24722222222222223`}], {
           0.9620000000000001, -0.9620000000000001}], 
          InsetBox[
           FormBox[
            PaneBox[
             StyleBox[
             "0.7100000000000001`", {FontFamily -> "Baskerville"}, 
              StripOnInput -> False]], TraditionalForm], 
           Offset[{-2, -2}, {0.29859154929577464`, 0.3}], {
           0.9620000000000001, -0.9620000000000001}], 
          InsetBox[
           FormBox[
            PaneBox[
             StyleBox[
             "0.66`", {FontFamily -> "Baskerville"}, StripOnInput -> False]], 
            TraditionalForm], 
           Offset[{-2, -2}, {0.3414141414141414, 0.3529411764705882}], {
           0.9620000000000001, -0.9620000000000001}], 
          InsetBox[
           FormBox[
            PaneBox[
             StyleBox[
             "0.6100000000000001`", {FontFamily -> "Baskerville"}, 
              StripOnInput -> False]], TraditionalForm], 
           Offset[{-2, -2}, {0.40087383943200433`, 0.4080410607356715}], {
           0.9620000000000001, -0.9620000000000001}], 
          InsetBox[
           FormBox[
            PaneBox[
             StyleBox[
             "0.56`", {FontFamily -> "Baskerville"}, StripOnInput -> False]], 
            TraditionalForm], 
           
           Offset[{2, 0}, {0.4437834622248662, 
            0.4450341167551175}], {-0.9620000000000001, 0.9620000000000001}], 
          
          InsetBox[
           FormBox[
            PaneBox[
             StyleBox[
             "0.51`", {FontFamily -> "Baskerville"}, StripOnInput -> False]], 
            TraditionalForm], 
           Offset[{-2, -2}, {0.4993464052287581, 0.501360544217687}], {
           0.9620000000000001, -0.9620000000000001}], 
          InsetBox[
           FormBox[
            PaneBox[
             StyleBox[
             "0.46`", {FontFamily -> "Baskerville"}, StripOnInput -> False]], 
            TraditionalForm], 
           Offset[{-2, -2}, {0.5594202898550724, 0.5561728395061728}], {
           0.9620000000000001, -0.9620000000000001}], 
          InsetBox[
           FormBox[
            PaneBox[
             StyleBox[
             "0.41000000000000003`", {FontFamily -> "Baskerville"}, 
              StripOnInput -> False]], TraditionalForm], 
           Offset[{-2, -2}, {0.6040650406504064, 0.6101694915254238}], {
           0.9620000000000001, -0.9620000000000001}], 
          InsetBox[
           FormBox[
            PaneBox[
             StyleBox[
             "0.36000000000000004`", {FontFamily -> "Baskerville"}, 
              StripOnInput -> False]], TraditionalForm], 
           
           Offset[{2, 0}, {0.6475485661424607, 
            0.6482542991141219}], {-0.9620000000000001, 0.9620000000000001}], 
          
          InsetBox[
           FormBox[
            PaneBox[
             StyleBox[
             "0.31000000000000005`", {FontFamily -> "Baskerville"}, 
              StripOnInput -> False]], TraditionalForm], 
           Offset[{-2, -2}, {0.6842105263157895, 0.7008216529724505}], {
           0.9620000000000001, -0.9620000000000001}], 
          InsetBox[
           FormBox[
            PaneBox[
             StyleBox[
             "0.26`", {FontFamily -> "Baskerville"}, StripOnInput -> False]], 
            TraditionalForm], 
           Offset[{-2, -2}, {0.717948717948718, 0.7558558558558559}], {
           0.9620000000000001, -0.9620000000000001}], 
          InsetBox[
           FormBox[
            PaneBox[
             StyleBox[
             "0.21000000000000002`", {FontFamily -> "Baskerville"}, 
              StripOnInput -> False]], TraditionalForm], 
           Offset[{-2, -2}, {0.7939778129952457, 0.801181933305192}], {
           0.9620000000000001, -0.9620000000000001}], 
          InsetBox[
           FormBox[
            PaneBox[
             StyleBox[
             "0.16000000000000003`", {FontFamily -> "Baskerville"}, 
              StripOnInput -> False]], TraditionalForm], 
           Offset[{-2, -2}, {0.841995841995842, 0.8435887256847955}], {
           0.9620000000000001, -0.9620000000000001}], 
          InsetBox[
           FormBox[
            PaneBox[
             StyleBox[
             "0.11`", {FontFamily -> "Baskerville"}, StripOnInput -> False]], 
            TraditionalForm], 
           Offset[{-2, -2}, {0.9090909090909091, 0.8962546816479401}], {
           0.9620000000000001, -0.9620000000000001}], 
          InsetBox[
           FormBox[
            PaneBox[
             StyleBox[
             "0.060000000000000005`", {FontFamily -> "Baskerville"}, 
              StripOnInput -> False]], TraditionalForm], 
           Offset[{-2, -2}, {0.9555555555555556, 0.94645390070922}], {
           0.9620000000000001, -0.9620000000000001}], 
          InsetBox[
           FormBox[
            PaneBox[
             StyleBox[
             "1.`", {FontFamily -> "Baskerville"}, StripOnInput -> False]], 
            TraditionalForm], 
           
           Offset[{2, -2}, {1., 
            1.}], {-0.9620000000000001, -0.9620000000000001}], 
          InsetBox[
           FormBox[
            PaneBox[
             StyleBox[
             "0.01`", {FontFamily -> "Baskerville"}, StripOnInput -> False]], 
            TraditionalForm], 
           Offset[{2, 0}, {1., 0.9875420875420876}], {-0.9620000000000001, 
           0.9620000000000001}]}}}, {{{}}, {{}}}}, {}, {}, {}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, BaseStyle -> 15, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox["\"Probability of Detection\"", TraditionalForm], None}, {
        FormBox["\"False Alarm Ratio\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     LabelStyle -> {FontFamily -> "Baskerville"}, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 1}, {0, 1}}, 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],StyleBox[
   "\"ROC Score=0.5\"", FontSize -> 15, StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {2, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Top"}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.71733723255298*^9, 3.717337280209193*^9, {3.7173373143123817`*^9, 
   3.717337330786834*^9}, {3.7173374034320107`*^9, 3.7173375044621468`*^9}, 
   3.7173375433037663`*^9, {3.7173380838534317`*^9, 3.7173381345047913`*^9}, {
   3.7173382553988867`*^9, 3.717338259238995*^9}, {3.717338368441325*^9, 
   3.7173383750968437`*^9}, {3.717338406991797*^9, 3.717338445858108*^9}, {
   3.717338569543133*^9, 3.7173385810238323`*^9}, 3.717346455061668*^9, {
   3.717351225145499*^9, 3.7173512337989902`*^9}, {3.7173520117069607`*^9, 
   3.717352051539875*^9}, {3.71735210976271*^9, 3.717352131392416*^9}, 
   3.7173715168191833`*^9},ExpressionUUID->"1249fce4-ef66-4ff2-b6b0-\
5ca52d977ebe"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"435b5f0c-3dec-471d-87dd-9054bcabd60e"],

Cell[CellGroupData[{

Cell["Evaluation", "Subchapter",
 CellChangeTimes->{{3.716927238743927*^9, 3.716927245559847*^9}, {
  3.717272724935122*^9, 
  3.717272726494026*^9}},ExpressionUUID->"f1dd7c75-ed12-4c06-abb3-\
8180c26dcf7e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"LinearROCEvaluation", "[", "dataset_", "]"}], ":=", "\n", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "result", ",", "\n", "\t   ", "SCAsimu", ",", "NCAsimu", ",", "ORsimu", 
       ",", "WAsimu", ",", "\n", "\t   ", "SCAobser", ",", "NCAobser", ",", 
       "ORobser", ",", "WAobser", ",", "\n", "\t   ", "mSCAsimu", ",", 
       "mNCAsimu", ",", "mORsimu", ",", "mWAsimu", ",", "\n", "\t   ", 
       "mSCAobser", ",", "mNCAobser", ",", "mORobser", ",", "mWAobser", ",", 
       "\n", "\t   ", "iSCAsimu", ",", "iSCAobser", ",", "iNCAsimu", ",", 
       "iNCAobser", ",", "\n", "\t   ", "imSCAsimu", ",", "imNCAsimu", ",", 
       "imORsimu", ",", "imWAsimu", ",", "\n", "\t   ", "imSCAobser", ",", 
       "imNCAobser", ",", "imORobser", ",", "imWAobser", ",", "\n", "\t   ", 
       "iORsimu", ",", "iORobser", ",", "iWAsimu", ",", "iWAobser", ",", "\n",
        "\t   ", "GridDaily", ",", "GridInterval", ",", "RegionalDaily", ",", 
       "RegionalInterval", ",", "\n", "\t   ", "int"}], "}"}], ",", "\n", 
     "\t", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"SCAsimu", ",", "NCAsimu", ",", "ORsimu", ",", "WAsimu"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "SCAobser", ",", "NCAobser", ",", "ORobser", ",", "WAobser"}], 
            "}"}]}], "}"}], ",", "\n", "\t ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "iSCAsimu", ",", "iNCAsimu", ",", "iORsimu", ",", "iWAsimu"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "iSCAobser", ",", "iNCAobser", ",", "iORobser", ",", "iWAobser"}],
             "}"}]}], "}"}]}], "}"}], "=", "\n", "\t ", 
       RowBox[{"Import", "[", 
        RowBox[{
        "main", "<>", "\"\<Data/\>\"", "<>", "dataset", "<>", "\"\</\>\"", "<>",
          "dataset", "<>", "\"\<_dg.mx\>\""}], "]"}]}], ";", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"mSCAsimu", ",", "mNCAsimu", ",", "mORsimu", ",", "mWAsimu"}],
         "}"}], "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"#", ",", "1"}], "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"SCAsimu", ",", "NCAsimu", ",", "ORsimu", ",", "WAsimu"}], 
          "}"}]}], "]"}]}], ";", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "mSCAobser", ",", "mNCAobser", ",", "mORobser", ",", "mWAobser"}], 
        "}"}], "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{"#", ",", 
              RowBox[{
               RowBox[{"Dimensions", "[", "SCAsimu", "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", "1"}], "]"}], 
          "&"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "SCAobser", ",", "NCAobser", ",", "ORobser", ",", "WAobser"}], 
          "}"}]}], "]"}]}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "imSCAsimu", ",", "imNCAsimu", ",", "imORsimu", ",", "imWAsimu"}], 
        "}"}], "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "#", "]"}], "\[Equal]", "0"}], ",", 
               "0", ",", 
               RowBox[{"Flatten", "[", 
                RowBox[{"#", ",", "1"}], "]"}]}], "]"}], "&"}], ",", "#"}], 
           "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "iSCAsimu", ",", "iNCAsimu", ",", "iORsimu", ",", "iWAsimu"}], 
          "}"}]}], "]"}]}], ";", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "imSCAobser", ",", "imNCAobser", ",", "imORobser", ",", "imWAobser"}],
         "}"}], "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "#", "]"}], "\[Equal]", "0"}], ",", 
               "0", ",", 
               RowBox[{"Flatten", "[", 
                RowBox[{
                 RowBox[{"Table", "[", 
                  RowBox[{"#", ",", 
                   RowBox[{
                    RowBox[{"Dimensions", "[", 
                    RowBox[{"iSCAsimu", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", "1"}], 
                "]"}]}], "]"}], "&"}], ",", "#"}], "]"}], "&"}], ",", "\n", 
         "\t", 
         RowBox[{"{", 
          RowBox[{
          "iSCAobser", ",", "iNCAobser", ",", "iORobser", ",", "iWAobser"}], 
          "}"}]}], "]"}]}], ";", "\n", "\t", "\n", 
      RowBox[{"GridDaily", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"LinearROCScore", "[", 
              RowBox[{
               RowBox[{"mSCAsimu", "[", 
                RowBox[{"[", 
                 RowBox[{";;", ",", "day", ",", "grid"}], "]"}], "]"}], ",", 
               RowBox[{"mSCAobser", "[", 
                RowBox[{"[", 
                 RowBox[{";;", ",", "day", ",", "grid"}], "]"}], "]"}]}], 
              "]"}], ",", "\n", "\t\t\t", 
             RowBox[{"{", 
              RowBox[{"grid", ",", 
               RowBox[{
                RowBox[{"Dimensions", "[", "mSCAsimu", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
           "\n", "\t\t    ", 
           RowBox[{"{", 
            RowBox[{"day", ",", 
             RowBox[{
              RowBox[{"Dimensions", "[", "mSCAsimu", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"-", "2"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", "\n", 
         "\t\t   ", 
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"LinearROCScore", "[", 
              RowBox[{
               RowBox[{"mNCAsimu", "[", 
                RowBox[{"[", 
                 RowBox[{";;", ",", "day", ",", "grid"}], "]"}], "]"}], ",", 
               RowBox[{"mNCAobser", "[", 
                RowBox[{"[", 
                 RowBox[{";;", ",", "day", ",", "grid"}], "]"}], "]"}]}], 
              "]"}], ",", "\n", "\t\t\t", 
             RowBox[{"{", 
              RowBox[{"grid", ",", 
               RowBox[{
                RowBox[{"Dimensions", "[", "mNCAsimu", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
           "\n", "\t\t    ", 
           RowBox[{"{", 
            RowBox[{"day", ",", 
             RowBox[{
              RowBox[{"Dimensions", "[", "mNCAsimu", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"-", "2"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", "\n", 
         "\t\t   ", 
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"LinearROCScore", "[", 
              RowBox[{
               RowBox[{"mORsimu", "[", 
                RowBox[{"[", 
                 RowBox[{";;", ",", "day", ",", "grid"}], "]"}], "]"}], ",", 
               RowBox[{"mORobser", "[", 
                RowBox[{"[", 
                 RowBox[{";;", ",", "day", ",", "grid"}], "]"}], "]"}]}], 
              "]"}], ",", "\n", "\t\t\t", 
             RowBox[{"{", 
              RowBox[{"grid", ",", 
               RowBox[{
                RowBox[{"Dimensions", "[", "mORsimu", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
           "\n", "\t\t    ", 
           RowBox[{"{", 
            RowBox[{"day", ",", 
             RowBox[{
              RowBox[{"Dimensions", "[", "mORsimu", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"-", "2"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", "\n", 
         "\t\t   ", 
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"LinearROCScore", "[", 
              RowBox[{
               RowBox[{"mWAsimu", "[", 
                RowBox[{"[", 
                 RowBox[{";;", ",", "day", ",", "grid"}], "]"}], "]"}], ",", 
               RowBox[{"mWAobser", "[", 
                RowBox[{"[", 
                 RowBox[{";;", ",", "day", ",", "grid"}], "]"}], "]"}]}], 
              "]"}], ",", "\n", "\t\t\t", 
             RowBox[{"{", 
              RowBox[{"grid", ",", 
               RowBox[{
                RowBox[{"Dimensions", "[", "mWAsimu", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
           "\n", "\t\t    ", 
           RowBox[{"{", 
            RowBox[{"day", ",", 
             RowBox[{
              RowBox[{"Dimensions", "[", "mWAsimu", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"-", "2"}], "]"}], "]"}]}], "}"}]}], "]"}]}], "}"}]}], 
      ";", "\n", "\n", 
      RowBox[{"RegionalDaily", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"LinearROCScore", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Mean", "[", 
               RowBox[{"Transpose", "[", 
                RowBox[{"Map", "[", 
                 RowBox[{"Transpose", ",", "mSCAsimu"}], "]"}], "]"}], "]"}], 
              "[", 
              RowBox[{"[", 
               RowBox[{";;", ",", "day"}], "]"}], "]"}], ",", "\n", 
             "\t\t\t\t", 
             RowBox[{
              RowBox[{"Mean", "[", 
               RowBox[{"Transpose", "[", 
                RowBox[{"Map", "[", 
                 RowBox[{"Transpose", ",", "mSCAobser"}], "]"}], "]"}], "]"}],
               "[", 
              RowBox[{"[", 
               RowBox[{";;", ",", "day"}], "]"}], "]"}]}], "]"}], ",", "\n", 
           "\t\t\t\t", 
           RowBox[{"{", 
            RowBox[{"day", ",", 
             RowBox[{
              RowBox[{"Dimensions", "[", "mSCAsimu", "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], ",", "\n", 
         "\t\t\t  ", 
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"LinearROCScore", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Mean", "[", 
               RowBox[{"Transpose", "[", 
                RowBox[{"Map", "[", 
                 RowBox[{"Transpose", ",", "mNCAsimu"}], "]"}], "]"}], "]"}], 
              "[", 
              RowBox[{"[", 
               RowBox[{";;", ",", "day"}], "]"}], "]"}], ",", "\n", 
             "\t\t\t\t", 
             RowBox[{
              RowBox[{"Mean", "[", 
               RowBox[{"Transpose", "[", 
                RowBox[{"Map", "[", 
                 RowBox[{"Transpose", ",", "mNCAobser"}], "]"}], "]"}], "]"}],
               "[", 
              RowBox[{"[", 
               RowBox[{";;", ",", "day"}], "]"}], "]"}]}], "]"}], ",", "\n", 
           "\t\t\t\t", 
           RowBox[{"{", 
            RowBox[{"day", ",", 
             RowBox[{
              RowBox[{"Dimensions", "[", "mNCAsimu", "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], ",", "\n", 
         "              ", 
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"LinearROCScore", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Mean", "[", 
               RowBox[{"Transpose", "[", 
                RowBox[{"Map", "[", 
                 RowBox[{"Transpose", ",", "mORsimu"}], "]"}], "]"}], "]"}], 
              "[", 
              RowBox[{"[", 
               RowBox[{";;", ",", "day"}], "]"}], "]"}], ",", "\n", 
             "\t\t\t\t", 
             RowBox[{
              RowBox[{"Mean", "[", 
               RowBox[{"Transpose", "[", 
                RowBox[{"Map", "[", 
                 RowBox[{"Transpose", ",", "mORobser"}], "]"}], "]"}], "]"}], 
              "[", 
              RowBox[{"[", 
               RowBox[{";;", ",", "day"}], "]"}], "]"}]}], "]"}], ",", "\n", 
           "\t            ", 
           RowBox[{"{", 
            RowBox[{"day", ",", 
             RowBox[{
              RowBox[{"Dimensions", "[", "mORsimu", "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], ",", "\n", 
         "              ", 
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"LinearROCScore", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Mean", "[", 
               RowBox[{"Transpose", "[", 
                RowBox[{"Map", "[", 
                 RowBox[{"Transpose", ",", "mWAsimu"}], "]"}], "]"}], "]"}], 
              "[", 
              RowBox[{"[", 
               RowBox[{";;", ",", "day"}], "]"}], "]"}], ",", "\n", 
             "\t\t\t\t", 
             RowBox[{
              RowBox[{"Mean", "[", 
               RowBox[{"Transpose", "[", 
                RowBox[{"Map", "[", 
                 RowBox[{"Transpose", ",", "mWAobser"}], "]"}], "]"}], "]"}], 
              "[", 
              RowBox[{"[", 
               RowBox[{";;", ",", "day"}], "]"}], "]"}]}], "]"}], ",", "\n", 
           "\t            ", 
           RowBox[{"{", 
            RowBox[{"day", ",", 
             RowBox[{
              RowBox[{"Dimensions", "[", "mWAsimu", "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}]}], "}"}]}], 
      ";", "\n", "\t", "\n", 
      RowBox[{"GridInterval", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"imSCAsimu", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}], "\[Equal]", "0"}], ",",
              "0", ",", "\n", "\t\t\t\t", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"LinearROCScore", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"imSCAsimu", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{";;", ",", "grid"}], "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"imSCAobser", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{";;", ",", "grid"}], "]"}], "]"}]}], "]"}], ",", 
               "\n", "\t\t\t\t\t", 
               RowBox[{"{", 
                RowBox[{"grid", ",", 
                 RowBox[{
                  RowBox[{"Dimensions", "[", 
                   RowBox[{"imSCAobser", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
            "]"}], ",", "\n", "\t\t\t   ", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "imSCAobser", "]"}]}], "}"}]}], "]"}], 
         ",", "\n", "\t\t\t  ", 
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"imNCAsimu", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}], "\[Equal]", "0"}], ",",
              "0", ",", "\n", "\t\t\t\t", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"LinearROCScore", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"imNCAsimu", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{";;", ",", "grid"}], "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"imNCAobser", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{";;", ",", "grid"}], "]"}], "]"}]}], "]"}], ",", 
               "\n", "\t\t\t\t\t", 
               RowBox[{"{", 
                RowBox[{"grid", ",", 
                 RowBox[{
                  RowBox[{"Dimensions", "[", 
                   RowBox[{"imNCAobser", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
            "]"}], ",", "\n", "\t\t\t   ", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "imNCAobser", "]"}]}], "}"}]}], "]"}], 
         ",", "\n", "\t\t\t  ", 
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"imORsimu", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}], "\[Equal]", "0"}], ",",
              "0", ",", "\n", "\t\t\t\t", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"LinearROCScore", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"imORsimu", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{";;", ",", "grid"}], "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"imORobser", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{";;", ",", "grid"}], "]"}], "]"}]}], "]"}], ",", 
               "\n", "\t\t\t\t\t", 
               RowBox[{"{", 
                RowBox[{"grid", ",", 
                 RowBox[{
                  RowBox[{"Dimensions", "[", 
                   RowBox[{"imORobser", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
            "]"}], ",", "\n", "\t\t\t   ", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "imORobser", "]"}]}], "}"}]}], "]"}], ",",
          "\n", "\t\t\t  ", 
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"imWAsimu", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}], "\[Equal]", "0"}], ",",
              "0", ",", "\n", "\t\t\t\t", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"LinearROCScore", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"imWAsimu", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{";;", ",", "grid"}], "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"imWAobser", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{";;", ",", "grid"}], "]"}], "]"}]}], "]"}], ",", 
               "\n", "\t\t\t\t\t", 
               RowBox[{"{", 
                RowBox[{"grid", ",", 
                 RowBox[{
                  RowBox[{"Dimensions", "[", 
                   RowBox[{"imWAobser", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
            "]"}], ",", "\n", "\t\t\t   ", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "imWAobser", "]"}]}], "}"}]}], "]"}]}], 
        "}"}]}], ";", "\n", "\n", 
      RowBox[{"RegionalInterval", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"imSCAsimu", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}], "\[Equal]", "0"}], ",",
              "0", ",", "\n", "\t\t\t\t", 
             RowBox[{"LinearROCScore", "[", 
              RowBox[{
               RowBox[{"Mean", "[", 
                RowBox[{"Transpose", "[", 
                 RowBox[{"imSCAsimu", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
               RowBox[{"Mean", "[", 
                RowBox[{"Transpose", "[", 
                 RowBox[{"imSCAobser", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], "]"}]}], 
            "]"}], ",", "\n", "\t\t\t   ", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "imSCAobser", "]"}]}], "}"}]}], "]"}], 
         ",", "\n", "\t\t\t  ", 
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"imNCAsimu", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}], "\[Equal]", "0"}], ",",
              "0", ",", "\n", "\t\t\t\t", 
             RowBox[{"LinearROCScore", "[", 
              RowBox[{
               RowBox[{"Mean", "[", 
                RowBox[{"Transpose", "[", 
                 RowBox[{"imNCAsimu", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
               RowBox[{"Mean", "[", 
                RowBox[{"Transpose", "[", 
                 RowBox[{"imNCAobser", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], "]"}]}], 
            "]"}], ",", "\n", "\t\t\t   ", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "imNCAobser", "]"}]}], "}"}]}], "]"}], 
         ",", "\n", "\t\t\t  ", 
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"imORsimu", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}], "\[Equal]", "0"}], ",",
              "0", ",", "\n", "\t\t\t\t", 
             RowBox[{"LinearROCScore", "[", 
              RowBox[{
               RowBox[{"Mean", "[", 
                RowBox[{"Transpose", "[", 
                 RowBox[{"imORsimu", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
               RowBox[{"Mean", "[", 
                RowBox[{"Transpose", "[", 
                 RowBox[{"imORobser", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], "]"}]}], 
            "]"}], ",", "\n", "\t\t\t   ", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "imORobser", "]"}]}], "}"}]}], "]"}], ",",
          "\n", "\t\t\t  ", 
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"imWAsimu", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}], "\[Equal]", "0"}], ",",
              "0", ",", "\n", "\t\t\t\t", 
             RowBox[{"LinearROCScore", "[", 
              RowBox[{
               RowBox[{"Mean", "[", 
                RowBox[{"Transpose", "[", 
                 RowBox[{"imWAsimu", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
               RowBox[{"Mean", "[", 
                RowBox[{"Transpose", "[", 
                 RowBox[{"imWAobser", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], "]"}]}], 
            "]"}], ",", "\n", "\t\t\t   ", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "imWAobser", "]"}]}], "}"}]}], "]"}]}], 
        "}"}]}], ";", "\n", "\t\t\t   ", "\n", 
      RowBox[{"result", "=", 
       RowBox[{"{", 
        RowBox[{
        "GridDaily", ",", "RegionalDaily", ",", "GridInterval", ",", 
         "RegionalInterval"}], "}"}]}], ";", "\n", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{
        "\"\</Users/lambda/Documents/Research/3_S2SEvaluation/Results/ROC/\>\"\
", "<>", "dataset", "<>", "\"\<_LinearROC.mx\>\""}], ",", "result"}], 
       "]"}]}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.7172610952541113`*^9, 3.7172611223449802`*^9}, {
   3.717261571506278*^9, 3.717261657245943*^9}, {3.717261696147327*^9, 
   3.7172617813345003`*^9}, {3.717261908438643*^9, 3.717261934236375*^9}, {
   3.717262111535325*^9, 3.7172621576994953`*^9}, 3.717262189706666*^9, {
   3.717264079360442*^9, 3.7172641082928677`*^9}, {3.717264142516197*^9, 
   3.71726422216073*^9}, {3.717264317939464*^9, 3.717264342934778*^9}, {
   3.71726441096797*^9, 3.717264413805118*^9}, {3.717264478491213*^9, 
   3.7172645878396606`*^9}, {3.7172650191838913`*^9, 3.717265038392861*^9}, {
   3.717265764602108*^9, 3.717265771056772*^9}, {3.717271066510188*^9, 
   3.717271069758582*^9}, 3.717271935397588*^9, 3.717272277160787*^9, {
   3.717272690565714*^9, 3.717272713454351*^9}, 3.7173390188372498`*^9, {
   3.7173390683630533`*^9, 3.7173390983387117`*^9}, {3.7173391438236027`*^9, 
   3.71733921847579*^9}, {3.717339544915206*^9, 3.717339547153029*^9}, 
   3.717339815160405*^9, {3.71733986830217*^9, 3.717339868620483*^9}, {
   3.71734013178694*^9, 3.717340143938252*^9}, {3.71734018493043*^9, 
   3.717340244072968*^9}, {3.717340279230398*^9, 3.717340281780361*^9}, {
   3.717340640401989*^9, 3.717340702636799*^9}, {3.7173422161521187`*^9, 
   3.717342216570899*^9}, {3.717342419106058*^9, 3.717342419443102*^9}, 
   3.7173426845658293`*^9, {3.717342729532435*^9, 3.717342839033535*^9}, {
   3.717347820275064*^9, 3.7173478525872297`*^9}, {3.717352063421818*^9, 
   3.717352064439156*^9}, {3.717352138606052*^9, 3.717352189911706*^9}, {
   3.717371526073822*^9, 
   3.717371527313517*^9}},ExpressionUUID->"df204dc7-e664-454f-a321-\
404caf808030"],

Cell[CellGroupData[{

Cell[BoxData["models"], "Code",
 CellChangeTimes->{{3.717342716683272*^9, 
  3.717342717426085*^9}},ExpressionUUID->"e40dc23f-2648-49eb-ab36-\
9c19dfe8195e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"BoM\"\>", ",", "\<\"CMA\"\>", ",", "\<\"ECCC\"\>", 
   ",", "\<\"ECMWF\"\>", ",", "\<\"HCMR\"\>", ",", "\<\"ISACCNR\"\>", 
   ",", "\<\"JMA\"\>", ",", "\<\"KMA\"\>", ",", "\<\"MeteoFrance\"\>", 
   ",", "\<\"NCEP\"\>", ",", "\<\"UKMO\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.7173427177287693`*^9, 3.717346477221767*^9, 
  3.7173478745087423`*^9, 3.717352069178466*^9, 3.717352180043357*^9, 
  3.717371534419303*^9},ExpressionUUID->"6521d5f9-4eaf-441f-97bd-\
736709883f6b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"models", "[", 
  RowBox[{"[", 
   RowBox[{
    RowBox[{"-", "3"}], ";;", 
    RowBox[{"-", "1"}]}], "]"}], "]"}]], "Code",
 CellChangeTimes->{{3.7173712997584667`*^9, 3.7173713037152557`*^9}, {
  3.717371540809936*^9, 
  3.717371542172144*^9}},ExpressionUUID->"be03b9b3-f6d4-4e07-a98b-\
57ce687afac7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"MeteoFrance\"\>", ",", "\<\"NCEP\"\>", ",", "\<\"UKMO\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.717371535822104*^9, 
  3.717371542422967*^9}},ExpressionUUID->"3ff0f839-f54e-4433-9ddb-\
c4295e1318a1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LinearROCEvaluation", "[", "\"\<NCEP\>\"", "]"}]], "Code",
 CellChangeTimes->{
  3.71734885699559*^9, 3.717348978067802*^9, {3.7173521953007174`*^9, 
   3.717352196299427*^9}, {3.717371546804991*^9, 
   3.71737155723555*^9}},ExpressionUUID->"d48fcd9c-ca38-4aa0-aaf5-\
125cf80bb797"],

Cell[BoxData["\<\"/Users/lambda/Documents/Research/3_S2SEvaluation/Results/\
ROC/NCEP_LinearROC.mx\"\>"], "Output",
 CellChangeTimes->{
  3.717372239408361*^9},ExpressionUUID->"a9523da5-ab07-4fbe-8107-\
10660c3f6fb9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LinearROCEvaluation", "[", "\"\<UKMO\>\"", "]"}]], "Code",
 CellChangeTimes->{
  3.71734885699559*^9, 3.717348978067802*^9, {3.7173521953007174`*^9, 
   3.717352196299427*^9}, {3.717371546804991*^9, 
   3.717371567179455*^9}},ExpressionUUID->"cdc9a184-9994-49bb-9df0-\
1461699f8a34"],

Cell[BoxData["\<\"/Users/lambda/Documents/Research/3_S2SEvaluation/Results/\
ROC/UKMO_LinearROC.mx\"\>"], "Output",
 CellChangeTimes->{
  3.717372425563602*^9},ExpressionUUID->"1c6946aa-16b1-4d4e-9707-\
5077b6c7db90"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LinearROCEvaluation", "[", "\"\<MeteoFrance\>\"", "]"}]], "Code",
 CellChangeTimes->{
  3.71734885699559*^9, 3.717348978067802*^9, {3.7173521953007174`*^9, 
   3.717352196299427*^9}, {3.717371546804991*^9, 
   3.717371573517353*^9}},ExpressionUUID->"e3812ad7-9535-4a0f-96b7-\
df6af547fa5a"],

Cell[BoxData["\<\"/Users/lambda/Documents/Research/3_S2SEvaluation/Results/\
ROC/MeteoFrance_LinearROC.mx\"\>"], "Output",
 CellChangeTimes->{
  3.717372860489662*^9},ExpressionUUID->"ede1ce81-857b-4630-b707-\
7ce2de8e8bf0"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"7d650ffe-7c0a-4bed-959a-0020c9c8d801"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GridDaily", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Block", "[", 
        RowBox[{
         RowBox[{"{", "data", "}"}], ",", "\n", "\t", 
         RowBox[{
          RowBox[{"data", "=", 
           RowBox[{"Import", "[", 
            RowBox[{
            "\"\</Users/lambda/Documents/Research/3_S2SEvaluation/Results/ROC/\
\>\"", "<>", "#", "<>", "\"\<_LinearROC.mx\>\""}], "]"}]}], ";", "\n", "\t", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Mean", "[", 
              RowBox[{"Transpose", "[", "#", "]"}], "]"}], "&"}], ",", 
            RowBox[{"data", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], "]"}], "&"}], ",", 
      "models"}], "]"}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.717346319158333*^9, 3.7173463259965963`*^9}, {
   3.717349863350075*^9, 3.717349884932309*^9}, {3.7173503207435017`*^9, 
   3.717350322268359*^9}, {3.7173503810115833`*^9, 3.717350446026781*^9}, {
   3.7173511871692266`*^9, 3.71735118997561*^9}, 
   3.7173522079983397`*^9},ExpressionUUID->"82b6133e-953b-4e3e-aefb-\
3653647593d3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RegionalDaily", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Block", "[", 
        RowBox[{
         RowBox[{"{", "data", "}"}], ",", "\n", "\t", 
         RowBox[{
          RowBox[{"data", "=", 
           RowBox[{"Import", "[", 
            RowBox[{
            "\"\</Users/lambda/Documents/Research/3_S2SEvaluation/Results/ROC/\
\>\"", "<>", "#", "<>", "\"\<_LinearROC.mx\>\""}], "]"}]}], ";", "\n", "\t", 
          RowBox[{"data", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], "&"}], ",", "models"}], 
     "]"}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.7173505783655853`*^9, 3.717350642931798*^9}, {
   3.717351191495824*^9, 3.717351194967174*^9}, 
   3.717352209190292*^9},ExpressionUUID->"4e57e41e-2816-4dd8-b245-\
54c1bcd6ac76"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GridInterval", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"Transpose", ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Block", "[", 
          RowBox[{
           RowBox[{"{", "data", "}"}], ",", "\n", "\t", 
           RowBox[{
            RowBox[{"data", "=", 
             RowBox[{"Import", "[", 
              RowBox[{
              "\"\</Users/lambda/Documents/Research/3_S2SEvaluation/Results/\
ROC/\>\"", "<>", "#", "<>", "\"\<_LinearROC.mx\>\""}], "]"}]}], ";", "\n", 
            "\t", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Map", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Length", "[", "#", "]"}], ">", "0"}], ",", 
                   RowBox[{"Mean", "[", "#", "]"}], ",", "0"}], "]"}], "&"}], 
                ",", 
                RowBox[{"data", "[", 
                 RowBox[{"[", 
                  RowBox[{"3", ",", "i"}], "]"}], "]"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", 
                RowBox[{
                 RowBox[{"Dimensions", "[", "data", "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}]}]}], "]"}], 
         "&"}], ",", "models"}], "]"}], "]"}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.717350796413657*^9, 3.717350817306245*^9}, {
   3.717350895190755*^9, 3.717350914584928*^9}, {3.7173509790164747`*^9, 
   3.717351050004692*^9}, 
   3.717352211246224*^9},ExpressionUUID->"00821473-d218-457a-905c-\
efc3c45bca7a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RegionalInterval", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"Transpose", ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Block", "[", 
          RowBox[{
           RowBox[{"{", "data", "}"}], ",", "\n", "\t", 
           RowBox[{
            RowBox[{"data", "=", 
             RowBox[{"Import", "[", 
              RowBox[{
              "\"\</Users/lambda/Documents/Research/3_S2SEvaluation/Results/\
ROC/\>\"", "<>", "#", "<>", "\"\<_LinearROC.mx\>\""}], "]"}]}], ";", "\n", 
            "\t", 
            RowBox[{"data", "[", 
             RowBox[{"[", "4", "]"}], "]"}]}]}], "]"}], "&"}], ",", 
        "models"}], "]"}], "]"}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.717351085644451*^9, 3.717351144154241*^9}, 
   3.7173522128540487`*^9},ExpressionUUID->"26f0320f-846b-4b97-8b6b-\
c27aa4a4c4c7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"range", "=", 
   RowBox[{"{", 
    RowBox[{"0.5", ",", "1"}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.7173514616468163`*^9, 3.717351469045656*^9}, {
  3.71735172760618*^9, 
  3.717351727884647*^9}},ExpressionUUID->"83466529-e08a-4e8f-b3e1-\
0948b70955cc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Dimensions", "[", "GridDaily", "]"}], "\n", 
 RowBox[{"Dimensions", "[", "RegionalDaily", "]"}], "\n", 
 RowBox[{"Dimensions", "[", "GridInterval", "]"}], "\n", 
 RowBox[{"Dimensions", "[", "RegionalInterval", "]"}]}], "Code",
 CellChangeTimes->{{3.7173506447956657`*^9, 3.7173506617947493`*^9}, {
  3.71735117145753*^9, 
  3.717351178248756*^9}},ExpressionUUID->"4d3a6291-01eb-4b3c-9675-\
b0848bbab213"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "11"}], "}"}]], "Output",
 CellChangeTimes->{
  3.71737295441645*^9},ExpressionUUID->"9891a84d-431b-4fd5-bf55-efb995e4985d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "11"}], "}"}]], "Output",
 CellChangeTimes->{
  3.717372954435658*^9},ExpressionUUID->"15f59229-72d7-4620-960c-\
0e6462bf5dde"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "7", ",", "11"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7173729544564734`*^9},ExpressionUUID->"9bebe94a-4ff6-436d-bd33-\
36121a8d2845"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "7", ",", "11"}], "}"}]], "Output",
 CellChangeTimes->{
  3.717372954476554*^9},ExpressionUUID->"b8c4e7c2-ff15-4ac4-8613-\
43a184224f31"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"GridDailyDraw", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"GridDaily", "[", 
        RowBox[{"[", "region", "]"}], "]"}], ",", "\n", "\t\t", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"Thickness", "[", "0.005", "]"}]}], "}"}], "&"}], ",", 
          "datasets"}], "]"}]}], ",", "\n", "\t\t", 
       RowBox[{"PlotRange", "\[Rule]", "range"}], ",", "\n", "\t\t", 
       RowBox[{"BaseStyle", "\[Rule]", "40"}], ",", "\n", "\t\t", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", "\n", "\t\t", 
       RowBox[{"ImageSize", "\[Rule]", "800"}], ",", "\n", "\t\t", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Forecast Leading Day\>\"", ",", "\"\<ROC\>\""}], 
         "}"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"region", ",", "4"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"RegionalDailyDraw", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"RegionalDaily", "[", 
        RowBox[{"[", "region", "]"}], "]"}], ",", "\n", "\t\t", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"Thickness", "[", "0.005", "]"}]}], "}"}], "&"}], ",", 
          "datasets"}], "]"}]}], ",", "\n", "\t\t", 
       RowBox[{"PlotRange", "\[Rule]", "range"}], ",", "\n", "\t\t", 
       RowBox[{"BaseStyle", "\[Rule]", "40"}], ",", "\n", "\t\t", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", "\n", "\t\t", 
       RowBox[{"ImageSize", "\[Rule]", "800"}], ",", "\n", "\t\t", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Forecast Leading Day\>\"", ",", "\"\<ROC\>\""}], 
         "}"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"region", ",", "4"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"GridIntervalDraw", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"BarChart", "[", 
      RowBox[{
       RowBox[{"GridInterval", "[", 
        RowBox[{"[", "region", "]"}], "]"}], ",", "\n", "\t", 
       RowBox[{"BaseStyle", "\[Rule]", "40"}], ",", "\n", "\t", 
       RowBox[{"BarSpacing", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "4."}], "}"}]}], ",", "\n", "\t", 
       RowBox[{"ChartStyle", "\[Rule]", 
        RowBox[{"datasets", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "1"}], "]"}], "]"}]}], ",", "\n", "\t", 
       RowBox[{"ChartLabels", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<1d1d\>\"", ",", "\"\<2d2d\>\"", ",", "\"\<4d4d\>\"", ",", 
            "\"\<1w1w\>\"", ",", "\"\<2w2w\>\"", ",", "\"\<3w3w\>\"", ",", 
            "\"\<4w4w\>\""}], "}"}], ",", "None"}], "}"}]}], ",", "\n", "\t", 
       
       RowBox[{"Frame", "\[Rule]", "True"}], ",", "\n", "\t", 
       RowBox[{"PlotRange", " ", "->", " ", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", " ", "range"}], "}"}]}], ",", "\n", "    ", 
       RowBox[{"PlotRangePadding", " ", "->", " ", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", " ", "0"}], "}"}]}], ",", "\n", "    ", 
       RowBox[{"PlotRangeClipping", " ", "->", " ", "True"}], ",", "\n", "\t", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Forecast Interval\>\"", ",", "\"\<ROC\>\""}], "}"}]}], 
       ",", "\n", "\t", 
       RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"region", ",", "4"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"RegionalIntervalDraw", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"BarChart", "[", 
      RowBox[{
       RowBox[{"RegionalInterval", "[", 
        RowBox[{"[", "region", "]"}], "]"}], ",", "\n", "\t", 
       RowBox[{"BaseStyle", "\[Rule]", "40"}], ",", "\n", "\t", 
       RowBox[{"BarSpacing", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "4."}], "}"}]}], ",", "\n", "\t", 
       RowBox[{"ChartStyle", "\[Rule]", 
        RowBox[{"datasets", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "1"}], "]"}], "]"}]}], ",", "\n", "\t", 
       RowBox[{"ChartLabels", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<1d1d\>\"", ",", "\"\<2d2d\>\"", ",", "\"\<4d4d\>\"", ",", 
            "\"\<1w1w\>\"", ",", "\"\<2w2w\>\"", ",", "\"\<3w3w\>\"", ",", 
            "\"\<4w4w\>\""}], "}"}], ",", "None"}], "}"}]}], ",", "\n", "\t", 
       
       RowBox[{"Frame", "\[Rule]", "True"}], ",", "\n", "\t", 
       RowBox[{"PlotRange", " ", "->", " ", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", " ", "range"}], "}"}]}], ",", "\n", "    ", 
       RowBox[{"PlotRangePadding", " ", "->", " ", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", " ", "0"}], "}"}]}], ",", "\n", "    ", 
       RowBox[{"PlotRangeClipping", " ", "->", " ", "True"}], ",", "\n", "\t", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Forecast Interval\>\"", ",", "\"\<ROC\>\""}], "}"}]}], 
       ",", "\n", "\t", 
       RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"region", ",", "4"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"label", "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{
       RowBox[{"table", "[", "pairs_", "]"}], " ", ":=", 
       RowBox[{"TableForm", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", "pairs", "]"}], ",", 
         RowBox[{"TableAlignments", "\[Rule]", "Center"}]}], "]"}]}], ";", 
      "\n", "\t", 
      RowBox[{"SwatchLegend", "[", 
       RowBox[{
        RowBox[{"datasets", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"datasets", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "2"}], "]"}], "]"}], ",", "\n", "\t", 
        RowBox[{"LegendLayout", "\[Rule]", "table"}], ",", "\n", "\t", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"FontSize", "\[Rule]", "50"}], "}"}]}], ",", "\n", "\t", 
        RowBox[{"LegendMarkerSize", "\[Rule]", "50"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"fig", "=", 
   RowBox[{"Labeled", "[", 
    RowBox[{
     RowBox[{"TableForm", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
         "GridDailyDraw", ",", "RegionalDailyDraw", ",", "GridIntervalDraw", 
          ",", "RegionalIntervalDraw"}], "}"}], "]"}], ",", "\n", "\t", 
       RowBox[{"TableHeadings", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"#", ",", 
               RowBox[{"FontSize", "\[Rule]", "50"}]}], "]"}], "&"}], ",", 
            RowBox[{"{", 
             RowBox[{
             "\"\<SCA\>\"", ",", "\"\<NCA\>\"", ",", "\"\<OR\>\"", ",", 
              "\"\<WA\>\""}], "}"}]}], "]"}], ",", "\n", "\t\t", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"#", ",", 
               RowBox[{"FontSize", "\[Rule]", "50"}]}], "]"}], "&"}], ",", 
            RowBox[{"{", 
             RowBox[{
             "\"\<Grid Daily Scale\>\"", ",", "\"\<Regional Daily Scale\>\"", 
              ",", "\"\<Grid Interval Scale\>\"", ",", 
              "\"\<Regional Interval Scale\>\""}], "}"}]}], "]"}]}], "}"}]}], 
       ",", "\n", "\t", 
       RowBox[{"TableAlignments", "\[Rule]", "Center"}]}], "]"}], ",", 
     "label", ",", "Bottom"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\</Users/lambda/Documents/Research/3_S2SEvaluation/Results/fig_\
LinearROC.pdf\>\"", ",", "fig"}], "]"}], ";"}]}], "Code",
 CellChangeTimes->{{3.717351281517667*^9, 3.7173512911519117`*^9}, {
   3.717351451850397*^9, 3.7173515924115677`*^9}, {3.71735168135942*^9, 
   3.717351709493843*^9}, 
   3.717352227533803*^9},ExpressionUUID->"bb7f86f9-764f-4ea3-8fa5-\
b288447dba02"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"2cd1c07b-f9e4-4ff7-af7d-1af10775c5e2"],

Cell["\<\
For a fair comparison across a seamless range of time scales, the \
verification is performed using data averaged over time windows equal in \
length to the forecast lead time. At a lead time of one day, skill is \
greatest in the extratropics around 40-60o latitude, lowest around 20o, and \
has a secondary local maximum close to the equator. The extratropical skill \
at this short range is highest in the winter hemisphere presumably due to the \
higher predictability of winter baroclinic systems.\
\>", "Text",ExpressionUUID->"f094a076-f02e-40b7-b903-dfecc015133d"],

Cell["\<\
 defining a consistent and useful distance metric on these aspects\
\>", "Text",ExpressionUUID->"53c9ba75-68ee-4351-9994-2172aef434ae"],

Cell[TextData[{
 "The essence of our approach is as follows. We compute the prediction skill \
at\n",
 StyleBox[" ",
  FontFamily->"Helvetica",
  FontSize->11],
 "a range of lead times, from one day to one month. As the lead time \
increases, we also\n",
 StyleBox[" ",
  FontFamily->"Helvetica",
  FontSize->11],
 "increase the length of the time window over which the data are averaged for\
\n",
 StyleBox[" ",
  FontFamily->"Helvetica",
  FontSize->11],
 "verification. This is intended to capture the fact that we are \
transitioning from\n",
 StyleBox[" ",
  FontFamily->"Helvetica",
  FontSize->11],
 "weather to climate prediction as the lead time increases, and to allow the \
transition to\n",
 StyleBox[" ",
  FontFamily->"Helvetica",
  FontSize->11],
 "occur smoothly. The skill is computed for both total precipitation and \
anomalies, and\n",
 StyleBox[" ",
  FontFamily->"Helvetica",
  FontSize->11],
 "comparison is made with the skill achievable by a persistence forecast of \
the\n",
 StyleBox[" ",
  FontFamily->"Helvetica",
  FontSize->11],
 "precipitation anomalies. For comparison we also evaluate the forecasts at \
varying lead\ntime but with a fixed verification window of 1 day."
}], "Text",
 CellChangeTimes->{{3.716214090409994*^9, 
  3.716214101039338*^9}},ExpressionUUID->"3df5bec8-2175-4102-97e8-\
c0ba0cc19f6a"]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->Automatic,
TaggingRules->{"SlideShow" -> True},
FrontEndVersion->"11.2 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
10, 2017)",
StyleDefinitions->FrontEnd`FileName[{"SlideShow"}, "Garnet.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "SlideShowHeader"->{
  Cell[422, 15, 4399, 98, 75, "SlideShowNavigationBar",ExpressionUUID->"25e0900b-5d64-4ab0-8e07-fe9f0504c0e6",
   CellTags->"SlideShowHeader"],
  Cell[5560, 136, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"2656db73-78b7-4018-a8ef-9da22dae5d85",
   CellTags->"SlideShowHeader"],
  Cell[41431, 959, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"48928679-6037-495a-86aa-a3bb83371bec",
   CellTags->"SlideShowHeader"],
  Cell[194707, 3947, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"5b65c0a3-4613-4854-9f07-ddc24a73137c",
   CellTags->"SlideShowHeader"],
  Cell[222068, 4631, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"450c0950-1961-475d-983c-ddd02ad2bdbd",
   CellTags->"SlideShowHeader"],
  Cell[237101, 5027, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"5f25a7db-1617-4725-a408-b3acf3e77fd9",
   CellTags->"SlideShowHeader"],
  Cell[240589, 5119, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"54fa6fea-71e5-42c7-97e8-ea60454954ff",
   CellTags->"SlideShowHeader"],
  Cell[272295, 5875, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"435b5f0c-3dec-471d-87dd-9054bcabd60e",
   CellTags->"SlideShowHeader"],
  Cell[302180, 6629, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"7d650ffe-7c0a-4bed-959a-0020c9c8d801",
   CellTags->"SlideShowHeader"],
  Cell[317113, 7025, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"2cd1c07b-f9e4-4ff7-af7d-1af10775c5e2",
   CellTags->"SlideShowHeader"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"SlideShowHeader", 319724, 7100}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[422, 15, 4399, 98, 75, "SlideShowNavigationBar",ExpressionUUID->"25e0900b-5d64-4ab0-8e07-fe9f0504c0e6",
 CellTags->"SlideShowHeader"],
Cell[4824, 115, 484, 8, 311, "Title",ExpressionUUID->"8b59354f-01b7-4454-91fb-db15d64cd7df"],
Cell[5311, 125, 212, 6, 93, "Text",ExpressionUUID->"1248c6d1-c1ac-4a11-9621-02549bb28186"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5560, 136, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"2656db73-78b7-4018-a8ef-9da22dae5d85",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[5707, 142, 166, 3, 123, "Section",ExpressionUUID->"1183ddb6-51fe-442c-ab1e-39170e3b5831"],
Cell[5876, 147, 859, 25, 167, "Code",ExpressionUUID->"69f9e5e5-95b7-44ab-bd12-c3ef3933c724"],
Cell[6738, 174, 29054, 614, 1014, "Code",ExpressionUUID->"143cd342-99b7-4755-9a22-6204f5482ece"],
Cell[35795, 790, 1366, 37, 135, "Code",ExpressionUUID->"4d488475-e3ae-44ef-a155-40897f6a8ede"],
Cell[37164, 829, 4218, 124, 295, "Code",ExpressionUUID->"b5ad0616-316e-4f8f-a449-ad813656938d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[41431, 959, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"48928679-6037-495a-86aa-a3bb83371bec",
 CellTags->"SlideShowHeader"],
Cell[41556, 963, 253, 4, 123, "Section",ExpressionUUID->"be3eb40f-eef3-4131-ad02-1b1c64c7e79b"],
Cell[CellGroupData[{
Cell[41834, 971, 151, 3, 49, "Subchapter",ExpressionUUID->"5022c7c8-ba43-475e-84e7-b2776fb8dc6e"],
Cell[41988, 976, 4430, 109, 263, "Code",ExpressionUUID->"64a16c9f-48c7-454b-8bd1-e238ed639daa"],
Cell[46421, 1087, 4061, 97, 199, "Code",ExpressionUUID->"4886183d-f4c3-46a7-ba5b-837dd6faa6b6"],
Cell[50485, 1186, 5565, 128, 487, "Code",ExpressionUUID->"aac5cafd-cc6a-42cb-894d-38cef250a5f7"],
Cell[56053, 1316, 834, 24, 103, "Code",ExpressionUUID->"39018a4d-d82b-4377-9dc1-415af405acc6"],
Cell[CellGroupData[{
Cell[56912, 1344, 781, 23, 103, "Code",ExpressionUUID->"9373cd66-ca3a-4749-b1e2-3365a8be7420"],
Cell[57696, 1369, 2112, 50, 176, "Output",ExpressionUUID->"919ebc0c-709c-48ab-b599-1a928132521f"]
}, Open  ]],
Cell[59823, 1422, 254, 6, 70, "Code",ExpressionUUID->"e4f5f885-7514-4382-b04d-a8a72b47cb1c"],
Cell[CellGroupData[{
Cell[60102, 1432, 278, 7, 70, "Code",ExpressionUUID->"54acacea-71bd-4aeb-857e-d7a9a30a4a91"],
Cell[60383, 1441, 96059, 1592, 251, 62214, 1036, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"2c42bbb6-7b8f-4d2b-8602-c4853deae143"]
}, Open  ]],
Cell[CellGroupData[{
Cell[156479, 3038, 285, 6, 70, "Code",ExpressionUUID->"a45c174c-52eb-4e45-949f-fde91b68867e"],
Cell[156767, 3046, 17084, 393, 317, "Output",ExpressionUUID->"8c15dcf8-dce0-4241-99fa-17ddd493f161"]
}, Open  ]],
Cell[CellGroupData[{
Cell[173888, 3444, 367, 10, 70, "Code",ExpressionUUID->"2f2c0704-2bd4-43b4-8f3c-57a523582327"],
Cell[174258, 3456, 1962, 48, 249, "Output",ExpressionUUID->"4fd978f3-b96b-41db-8906-39c6ccddc3c7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[176257, 3509, 272, 7, 70, "Code",ExpressionUUID->"b6e0b745-6ba0-491b-a41f-1948baf468b8"],
Cell[176532, 3518, 242, 6, 47, "Output",ExpressionUUID->"e836cab6-9405-4463-b3f3-77c8a8294f76"]
}, Open  ]],
Cell[CellGroupData[{
Cell[176811, 3529, 657, 11, 70, "Code",ExpressionUUID->"1283b16e-10f1-4d9a-9f2e-4d47665f3f65"],
Cell[177471, 3542, 17175, 398, 317, "Output",ExpressionUUID->"c2bdf30d-8fe4-4051-916b-633ba9665cd0"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[194707, 3947, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"5b65c0a3-4613-4854-9f07-ddc24a73137c",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[194854, 3953, 207, 4, 65, "Subchapter",ExpressionUUID->"97fd9862-bf6a-4fd5-8181-93e44d826362"],
Cell[195064, 3959, 26084, 641, 2567, "Code",ExpressionUUID->"219fa6df-7556-4985-a935-1add5468b2f1"],
Cell[CellGroupData[{
Cell[221173, 4604, 157, 3, 70, "Code",ExpressionUUID->"628e86cf-2ca0-4f0a-b714-8b0322441c92"],
Cell[221333, 4609, 453, 8, 47, "Output",ExpressionUUID->"0ae454fa-749e-4640-ad3a-781fd8931509"]
}, Open  ]],
Cell[221801, 4620, 218, 5, 70, "Code",ExpressionUUID->"1fc26376-dc6b-42fe-92e0-4765e8fa3bf9"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[222068, 4631, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"450c0950-1961-475d-983c-ddd02ad2bdbd",
 CellTags->"SlideShowHeader"],
Cell[222193, 4635, 1163, 29, 135, "Code",ExpressionUUID->"4da69e09-9978-4a90-8903-325e1eaf3788"],
Cell[223359, 4666, 825, 22, 135, "Code",ExpressionUUID->"8ce7e1ea-a74b-4974-81d0-3350e3e97299"],
Cell[224187, 4690, 1654, 41, 135, "Code",ExpressionUUID->"c67bc7e3-4fbe-48f3-b431-0df30a977802"],
Cell[225844, 4733, 872, 23, 135, "Code",ExpressionUUID->"75384e34-d2b3-4537-a1ea-f6dfa23b870f"],
Cell[226719, 4758, 297, 8, 70, "Code",ExpressionUUID->"3a83eddf-bf4d-4e28-871e-13fc1e0acb2e"],
Cell[CellGroupData[{
Cell[227041, 4770, 429, 8, 167, "Code",ExpressionUUID->"030065b9-c922-42e2-86dd-5aa59acb9b59"],
Cell[227473, 4780, 249, 6, 47, "Output",ExpressionUUID->"7c3f7576-3c7d-49c4-9824-55f6af1c9a13"],
Cell[227725, 4788, 249, 6, 47, "Output",ExpressionUUID->"834bccdf-4643-4cbc-8669-7a8eaee9a2d1"],
Cell[227977, 4796, 255, 5, 47, "Output",ExpressionUUID->"e1e1ab32-4106-4150-9b8c-86c0c7cc8e0b"],
Cell[228235, 4803, 259, 6, 47, "Output",ExpressionUUID->"0c9babe1-c597-4759-9310-363ed2162df9"]
}, Open  ]],
Cell[228509, 4812, 8555, 210, 1543, "Code",ExpressionUUID->"bfe9048a-544f-4e34-bc4e-bd1a9ed81e6f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[237101, 5027, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"5f25a7db-1617-4725-a408-b3acf3e77fd9",
 CellTags->"SlideShowHeader"],
Cell[237226, 5031, 581, 8, 207, "Text",ExpressionUUID->"8cd5e2e9-a800-45da-927b-bd35120f6155"],
Cell[237810, 5041, 145, 2, 55, "Text",ExpressionUUID->"0fcca257-3472-4583-b9ab-c7705cfd2ceb"],
Cell[237958, 5045, 1342, 41, 359, "Text",ExpressionUUID->"6dd152ab-94f9-4ab3-ac92-2c412be69ac5"],
Cell[239303, 5088, 1249, 26, 368, "Output",ExpressionUUID->"ca261aaa-f37a-4d71-af33-1859322c3a01"]
}, Open  ]],
Cell[CellGroupData[{
Cell[240589, 5119, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"54fa6fea-71e5-42c7-97e8-ea60454954ff",
 CellTags->"SlideShowHeader"],
Cell[240714, 5123, 301, 5, 123, "Section",ExpressionUUID->"1331d563-2efa-45c6-9177-60bc723ac2e7"],
Cell[CellGroupData[{
Cell[241040, 5132, 151, 3, 49, "Subchapter",ExpressionUUID->"a7155f44-dfb4-45be-8baa-0567d849ffcc"],
Cell[241194, 5137, 3913, 96, 263, "Code",ExpressionUUID->"764965d5-0c79-4478-8726-056f31309434"],
Cell[245110, 5235, 4283, 102, 263, "Code",ExpressionUUID->"2d5983d9-16d7-46d0-a54c-e667cdf8f2e7"],
Cell[249396, 5339, 4837, 115, 487, "Code",ExpressionUUID->"42fc1842-333b-48c7-9120-ffbdbbe2d11d"],
Cell[CellGroupData[{
Cell[254258, 5458, 694, 14, 70, "Code",ExpressionUUID->"5e2f08ba-3702-4b19-ab88-d600c658f075"],
Cell[254955, 5474, 17279, 394, 317, "Output",ExpressionUUID->"1249fce4-ef66-4ff2-b6b0-5ca52d977ebe"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[272295, 5875, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"435b5f0c-3dec-471d-87dd-9054bcabd60e",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[272442, 5881, 207, 4, 65, "Subchapter",ExpressionUUID->"f1dd7c75-ed12-4c06-abb3-8180c26dcf7e"],
Cell[272652, 5887, 26438, 644, 2599, "Code",ExpressionUUID->"df204dc7-e664-454f-a321-404caf808030"],
Cell[CellGroupData[{
Cell[299115, 6535, 157, 3, 70, "Code",ExpressionUUID->"e40dc23f-2648-49eb-ab36-9c19dfe8195e"],
Cell[299275, 6540, 522, 9, 47, "Output",ExpressionUUID->"6521d5f9-4eaf-441f-97bd-736709883f6b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[299834, 6554, 325, 9, 70, "Code",ExpressionUUID->"be03b9b3-f6d4-4e07-a98b-57ce687afac7"],
Cell[300162, 6565, 252, 6, 47, "Output",ExpressionUUID->"3ff0f839-f54e-4433-9ddb-c4295e1318a1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[300451, 6576, 306, 6, 70, "Code",ExpressionUUID->"d48fcd9c-ca38-4aa0-aaf5-125cf80bb797"],
Cell[300760, 6584, 217, 4, 47, "Output",ExpressionUUID->"a9523da5-ab07-4fbe-8107-10660c3f6fb9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[301014, 6593, 307, 6, 70, "Code",ExpressionUUID->"cdc9a184-9994-49bb-9df0-1461699f8a34"],
Cell[301324, 6601, 217, 4, 47, "Output",ExpressionUUID->"1c6946aa-16b1-4d4e-9707-5077b6c7db90"]
}, Open  ]],
Cell[CellGroupData[{
Cell[301578, 6610, 314, 6, 70, "Code",ExpressionUUID->"e3812ad7-9535-4a0f-96b7-df6af547fa5a"],
Cell[301895, 6618, 224, 4, 47, "Output",ExpressionUUID->"ede1ce81-857b-4630-b707-7ce2de8e8bf0"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[302180, 6629, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"7d650ffe-7c0a-4bed-959a-0020c9c8d801",
 CellTags->"SlideShowHeader"],
Cell[302305, 6633, 1197, 29, 135, "Code",ExpressionUUID->"82b6133e-953b-4e3e-aefb-3653647593d3"],
Cell[303505, 6664, 855, 22, 135, "Code",ExpressionUUID->"4e57e41e-2816-4dd8-b245-54c1bcd6ac76"],
Cell[304363, 6688, 1701, 43, 135, "Code",ExpressionUUID->"00821473-d218-457a-905c-efc3c45bca7a"],
Cell[306067, 6733, 916, 24, 135, "Code",ExpressionUUID->"26f0320f-846b-4b97-8b6b-c27aa4a4c4c7"],
Cell[306986, 6759, 297, 8, 70, "Code",ExpressionUUID->"83466529-e08a-4e8f-b3e1-0948b70955cc"],
Cell[CellGroupData[{
Cell[307308, 6771, 429, 8, 167, "Code",ExpressionUUID->"4d3a6291-01eb-4b3c-9675-b0848bbab213"],
Cell[307740, 6781, 173, 4, 47, "Output",ExpressionUUID->"9891a84d-431b-4fd5-bf55-efb995e4985d"],
Cell[307916, 6787, 176, 5, 47, "Output",ExpressionUUID->"15f59229-72d7-4620-960c-0e6462bf5dde"],
Cell[308095, 6794, 188, 5, 47, "Output",ExpressionUUID->"9bebe94a-4ff6-436d-bd33-36121a8d2845"],
Cell[308286, 6801, 186, 5, 47, "Output",ExpressionUUID->"b8c4e7c2-ff15-4ac4-8613-43a184224f31"]
}, Open  ]],
Cell[308487, 6809, 8589, 211, 1543, "Code",ExpressionUUID->"bb7f86f9-764f-4ea3-8fa5-b288447dba02"]
}, Open  ]],
Cell[CellGroupData[{
Cell[317113, 7025, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"2cd1c07b-f9e4-4ff7-af7d-1af10775c5e2",
 CellTags->"SlideShowHeader"],
Cell[317238, 7029, 581, 8, 207, "Text",ExpressionUUID->"f094a076-f02e-40b7-b903-dfecc015133d"],
Cell[317822, 7039, 145, 2, 55, "Text",ExpressionUUID->"53c9ba75-68ee-4351-9994-2172aef434ae"],
Cell[317970, 7043, 1342, 41, 359, "Text",ExpressionUUID->"3df5bec8-2175-4102-97e8-c0ba0cc19f6a"]
}, Open  ]]
}
]
*)


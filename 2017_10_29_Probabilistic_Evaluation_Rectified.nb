(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    302674,       6567]
NotebookOptionsPosition[    291480,       6376]
NotebookOutlinePosition[    293442,       6418]
CellTagsIndexPosition[    293362,       6413]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 TogglerBox[1, {1->
  OverlayBox[{
   TagBox[GridBox[{
      {
       GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAKiEGSLED8//9/gvjRo0fsN27cELp69arY+fPnpZExPn137tzhBqrRBGJ/
ID4CxMfRMTZ9L168YL5w4YIaUD4AiC8C8Qcg/gvE/9AxFreC7PQD4gtA/BGq
7j8ujKz3+fPnLFC9b6H24dSHTf/FixfVofYSpRdZPzSsAqBuJkovsn5oOF8k
5F9s+h88eMBBjt0w/devXxcGso+S4m9k/ZcuXRKHpgeS3A7TD0wrkpToPw9J
ywOmn1L3Uxp+lMYfpemH0vRLjfwDjQey8y9a+fGOWDPwlF+gsPhEKDywlZ8g
d0D9EniexPITGd++fZv3PBnlN6764zxa3QHCAIDESDs=
         "], {{0, 26}, {16, 
         0}}, {0, 255},
         ColorFunction->RGBColor],
        BaseStyle->"ImageGraphics",
        ImageSize->Magnification[1],
        ImageSizeRaw->{16, 26},
        PlotRange->{{0, 16}, {0, 26}}], 
       GraphicsBox[RasterBox[CompressedData["
1:eJzt2V1vVFUUBuBGTfTSSygthYYKNHyVinrrpbcYfwBEJN5gUkyMfw9KKaVw
KCkQKCW1RNIQKg1gEE3QtdN10pMRZCaBzNQ+kzxt5nzstfeZfbPOu/vkD8e/
e6+vr+/sR/Hn+ImfvpyYOPHz1x/Hl2/OnP3+9JlT33515sdTp09NfHHy/TjY
H6592Nf3QfyvqmpHBwbCYNr5GoMNAw2d1AEAADa3/obtLba1aJ7rb4xR9x1D
YVfYHYbDnjASPgn7wv4wGg6Eg+FQOByOhLEwnj4Nx8Jn6fM21dcfyzHq8cay
xuGseTDnMJpz2pdzHMk5D+caduWa6v6p+czafU71s6p1+/cGAADYqt52/9va
++6tXt331j3v0TTeoj5e966v6lv3Vv/uWfWr9LJm9tzMpN+UW3eaVV9s00yY
CzfC7bAQFhvuhjt57maYD9er9c+VcDlcCtMd1AQAADafqXQhTabz6VyL+vhk
Xl/uLX1D6UFmw9VwrVrvL0o/cqta7ztKD3Iv/BLuh1/DSngYHoXfwlp4Ep6F
38Pz8Ed4Ef5Mf71Gff5F3vM8x3iWY65ljUdZcyXncD/ndC/neDvnfCPXcC3X
NJtrnG48r3afU/2s6uc11QO/OwAAwFbzLvrfksWVjK30kSV3KxncUlgOD6qN
vnc1PK42+t7iaaq/r+U1q9VG3/ogx1rKse9krfmsrV+l15R9WDLmkjWXzLl8
yvuVsmdLJl3eu5R9XN7BNLPrhTxX3seUvT3TQc2Xbfr7LWq3JgAAwH95m33K
u9Dt5wMAAMDmp2dlK+vGnu/2+yQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYPN42aZu
1AQAAAAAAICtrNsZIXRTN/b8xTbNhLlwI9wOC2Gx4W64k+duhvlwvVr/XAmX
w6Uw3UFNAAAAAAAA6EVT6UKaTOfTuRb18cm8vtxbcrOSwc2Gq9V6FlcytlvV
eu5WMrilsBwehJXwMKyGx2EtPElPU/19La9ZzXtWcozlHHMxa9zKmnM5h9mc
03Rjfe2uq15bvb6pHvid2NzKPiwZc8maS+ZcPiWDLnu2ZNIlmy77uGTVzex6
Ic+VbLvs7ZkOau7owEAYTDtfY7BhoKGTOgAAAAAAANDr+hu2t9jWonmuvzFG
nbsNhd1hOOwJI2Fv2B9Gw4FwMBwKR8JYOJrGW9THx/LaQ3nvgRxrf449krWG
s/ZQtZH3NdfY7rrqtdW6/fvw/9LMnpuZ9Jty646y6n8AhCP7tg==
         "], {{0, 26}, {
         2000, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BaseStyle->"ImageGraphics",
        ImageSize->Magnification[1],
        ImageSizeRaw->{2000, 26},
        PlotRange->{{0, 2000}, {0, 26}}], 
       GraphicsBox[RasterBox[CompressedData["
1:eJy9lktLQkEUxyVdCBIELaxctYq+QduWbcKMPoCSRRsDC6JPp+Lj4vuq+EBc
iBtFfIYrpU7nPzQiN++9vmrgp/dx5j8z55w5c099z56HPYvF8mLnH4/37TIY
9L7fHvDNXeDl6THgv78KvPof/cELn5UfnjBHjI3J5/OudVBV9bhUKjmbzaad
iCxmcB9lAxKMmzmv1+v7JvpfG/DJjJkic8NrOut0OlYdfdoCjPXBqMx1q9Vy
7FhfgvX0MUa73bYZ6edyuTnrvPsZQ4Wv9PTRL5vNroTOGIiJu9FoOLT6UjuT
yVAqlaJkMin+0+m0YPEZbHTGQDwKyKtl+ugHjdFoRIVCgeLxOCUSCQGua7Ua
9Xo9YQNbozXI/aHVZ//RcDik2WxG5XKZwuGwANdo0JfrNIhDvFqtHi7zD+YW
i8VoMBgIvWKxKEDrdrtiHbAxiAF8pHAf5zJ9+Bca0WiUxuMxydbv98U64CvY
wNZgTyioI9r8QR/EEvrQUhRlrh8Kheb6sDHTZ1xG84ePMP/pdPpr/tvoL/of
Mcb9Jv7X+mcxP2X+QCMSiYh5VyoVMQbXMbP81I2vzM/JZCLyX+a+BPmPvbFN
fmr36pr713B/rVp7THy/tD6Y1cjF5zrahvVtB5jW5y21B/kVzpc1kecjfK53
Pu7kfNfO+x+/T/70++ob7NUEtQ==
         "], {{0, 26}, {24, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BaseStyle->"ImageGraphics",
        ImageSize->Magnification[1],
        ImageSizeRaw->{24, 26},
        PlotRange->{{0, 24}, {0, 26}}]}
     },
     AutoDelete->False,
     GridBoxItemSize->{"Columns" -> {Automatic, 
         Scaled[0.6], Automatic}},
     GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}],
    "Grid"], 
   PaneBox[
    StyleBox[
     RowBox[{
     "Background", " ", "images", " ", "and", " ", "text", " ", "colors", " ",
       "have", " ", "been", " ", "adjusted", " ", "for", " ", "editing", " ", 
      
      RowBox[{"purposes", "."}]}],
     LineBreakWithin->False,
     FontFamily->"Helvetica",
     FontSize->12,
     FontColor->GrayLevel[0.4]],
    Alignment->Center,
    ImageSize->Scaled[0.5],
    ScrollPosition->{0., 0.}]},
   Alignment->{Center, Center}], 2->""}, "1"]], "SlideShowNavigationBar", \
"FirstSlide",
 CellMargins->{{0, 0}, {0, 0}},
 CellFrameLabelMargins->2,
 CellSize->{Inherited, 30},
 TextAlignment->Center,
 CellTags->
  "SlideShowHeader",ExpressionUUID->"25e0900b-5d64-4ab0-8e07-fe9f0504c0e6"],

Cell["Deterministic Evaluation", "Title",
 CellChangeTimes->{
  3.559948400406288*^9, {3.715625686969005*^9, 3.715625699758637*^9}, {
   3.715625737415258*^9, 3.715625768804536*^9}, {3.71562739405276*^9, 
   3.7156274161535273`*^9}, {3.716645145686738*^9, 3.716645178834663*^9}, {
   3.7169164422947483`*^9, 3.716916444651846*^9}, {3.717334028736842*^9, 
   3.717334032468775*^9}},
 TextAlignment->Center,
 TextJustification->0.,ExpressionUUID->"8b59354f-01b7-4454-91fb-db15d64cd7df"],

Cell["\<\
BX Pan
2017.9.28\
\>", "Text",
 CellChangeTimes->{{3.7156257090317698`*^9, 3.7156257243000107`*^9}},
 TextAlignment->Right,
 TextJustification->0.,ExpressionUUID->"1248c6d1-c1ac-4a11-9621-02549bb28186"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"2656db73-78b7-4018-a8ef-9da22dae5d85"],

Cell[CellGroupData[{

Cell["Environment Setting", "Section",
 CellChangeTimes->{{3.717252598904813*^9, 
  3.7172526053432713`*^9}},ExpressionUUID->"1183ddb6-51fe-442c-ab1e-\
39170e3b5831"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "main", "=", "\"\</Users/lambda/Documents/Research/3_S2SEvaluation/\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"models", "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{
      "SetDirectory", "[", 
       "\"\</Users/lambda/Documents/Research/3_S2SEvaluation/Data\>\"", "]"}],
       ";", "\n", "\t", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"FileNames", "[", "]"}], ",", 
        RowBox[{
         RowBox[{"StringFreeQ", "[", 
          RowBox[{"#", ",", "\"\<.\>\""}], "]"}], "&"}]}], "]"}]}]}], "]"}]}],
   ";"}]}], "Code",
 CellChangeTimes->{{3.7172526583188953`*^9, 3.717252670309132*^9}, {
   3.717252718885466*^9, 3.717252782218659*^9}, 
   3.7172530720948057`*^9},ExpressionUUID->"69f9e5e5-95b7-44ab-bd12-\
c3ef3933c724"],

Cell[BoxData[
 RowBox[{
  RowBox[{"datasets", "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"models", ",", "primary", ",", "size", ",", "frequency"}], 
      "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{
      "SetDirectory", "[", 
       "\"\</Users/lambda/Documents/Research/3_S2SEvaluation/Data\>\"", "]"}],
       ";", "\n", "\t", 
      RowBox[{"models", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"FileNames", "[", "]"}], ",", 
         RowBox[{
          RowBox[{"StringFreeQ", "[", 
           RowBox[{"#", ",", "\"\<.\>\""}], "]"}], "&"}]}], "]"}]}], ";", 
      "\n", "\t", 
      RowBox[{"primary", "=", 
       RowBox[{"{", "\n", "\t\t", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Green", ",", "\"\<BoM\>\"", ",", 
           NamespaceBox["LinguisticAssistant",
            
            DynamicModuleBox[{Typeset`query$$ = "\"Australia\"", 
             Typeset`boxes$$ = TemplateBox[{"\"Australia\"", 
               RowBox[{"Entity", "[", 
                 RowBox[{"\"Country\"", ",", "\"Australia\""}], "]"}], 
               "\"Entity[\\\"Country\\\", \\\"Australia\\\"]\"", 
               "\"country\""}, "Entity"], 
             Typeset`allassumptions$$ = {{
              "type" -> "Clash", "word" -> "Australia", "template" -> 
               "Assuming \"${word}\" is ${desc1}. Use as ${desc2} instead", 
               "count" -> "2", 
               "Values" -> {{
                 "name" -> "Country", "desc" -> "a country", "input" -> 
                  "*C.Australia-_*Country-"}, {
                 "name" -> "GeographicRegion", "desc" -> "a continent", 
                  "input" -> "*C.Australia-_*GeographicRegion-"}}}}, 
             Typeset`assumptions$$ = {}, Typeset`open$$ = {1, 2}, 
             Typeset`querystate$$ = {
             "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
              0.424041`6.078952843515372, "Messages" -> {}}}, 
             DynamicBox[ToBoxes[
               AlphaIntegration`LinguisticAssistantBoxes[
               "\"Australia\"", 4, Automatic, 
                Dynamic[Typeset`query$$], 
                Dynamic[Typeset`boxes$$], 
                Dynamic[Typeset`allassumptions$$], 
                Dynamic[Typeset`assumptions$$], 
                Dynamic[Typeset`open$$], 
                Dynamic[Typeset`querystate$$]], StandardForm],
              ImageSizeCache->{208., {10., 23.}},
              
              TrackedSymbols:>{
               Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
                Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
             
             DynamicModuleValues:>{},
             UndoTrackedVariables:>{Typeset`open$$}],
            BaseStyle->{"Deploy"},
            DeleteWithContents->True,
            Editable->False,
            SelectWithContents->True]}], "}"}], ",", "    ", "\n", "\t\t", 
         RowBox[{"{", 
          RowBox[{"Red", ",", "\"\<CMA\>\"", ",", 
           NamespaceBox["LinguisticAssistant",
            
            DynamicModuleBox[{Typeset`query$$ = "\"China\"", Typeset`boxes$$ =
              TemplateBox[{"\"China\"", 
               RowBox[{"Entity", "[", 
                 RowBox[{"\"Country\"", ",", "\"China\""}], "]"}], 
               "\"Entity[\\\"Country\\\", \\\"China\\\"]\"", "\"country\""}, 
              "Entity"], 
             Typeset`allassumptions$$ = {{
              "type" -> "Clash", "word" -> "China", "template" -> 
               "Assuming \"${word}\" is ${desc1}. Use as ${desc2} instead", 
               "count" -> "4", 
               "Values" -> {{
                 "name" -> "Country", "desc" -> "a country", "input" -> 
                  "*C.China-_*Country-"}, {
                 "name" -> "Species", "desc" -> "a species specification", 
                  "input" -> "*C.China-_*Species-"}, {
                 "name" -> "GivenName", "desc" -> "a given name", "input" -> 
                  "*C.China-_*GivenName-"}, {
                 "name" -> "AdministrativeDivision", "desc" -> 
                  "an administrative division", "input" -> 
                  "*C.China-_*AdministrativeDivision-"}}}}, 
             Typeset`assumptions$$ = {}, Typeset`open$$ = {1, 2}, 
             Typeset`querystate$$ = {
             "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
              0.354964`6.001729303187288, "Messages" -> {}}}, 
             DynamicBox[ToBoxes[
               AlphaIntegration`LinguisticAssistantBoxes[
               "\"China\"", 4, Automatic, 
                Dynamic[Typeset`query$$], 
                Dynamic[Typeset`boxes$$], 
                Dynamic[Typeset`allassumptions$$], 
                Dynamic[Typeset`assumptions$$], 
                Dynamic[Typeset`open$$], 
                Dynamic[Typeset`querystate$$]], StandardForm],
              ImageSizeCache->{178., {10., 23.}},
              
              TrackedSymbols:>{
               Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
                Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
             
             DynamicModuleValues:>{},
             UndoTrackedVariables:>{Typeset`open$$}],
            BaseStyle->{"Deploy"},
            DeleteWithContents->True,
            Editable->False,
            SelectWithContents->True]}], "}"}], ",", "  ", "\n", "\t\t", 
         RowBox[{"{", 
          RowBox[{
          "Purple", ",", 
           "\"\<\!\(\*StyleBox[\"ECCC\",FontWeight->\"Bold\"]\)\>\"", ",", 
           NamespaceBox["LinguisticAssistant",
            
            DynamicModuleBox[{Typeset`query$$ = "\"Canada\"", 
             Typeset`boxes$$ = TemplateBox[{"\"Canada\"", 
               RowBox[{"Entity", "[", 
                 RowBox[{"\"Country\"", ",", "\"Canada\""}], "]"}], 
               "\"Entity[\\\"Country\\\", \\\"Canada\\\"]\"", "\"country\""}, 
              "Entity"], Typeset`allassumptions$$ = {}, 
             Typeset`assumptions$$ = {}, Typeset`open$$ = {1, 2}, 
             Typeset`querystate$$ = {
             "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
              0.345488`5.989977960910129, "Messages" -> {}}}, 
             DynamicBox[ToBoxes[
               AlphaIntegration`LinguisticAssistantBoxes[
               "\"Canada\"", 4, Automatic, 
                Dynamic[Typeset`query$$], 
                Dynamic[Typeset`boxes$$], 
                Dynamic[Typeset`allassumptions$$], 
                Dynamic[Typeset`assumptions$$], 
                Dynamic[Typeset`open$$], 
                Dynamic[Typeset`querystate$$]], StandardForm],
              ImageSizeCache->{166., {10., 23.}},
              
              TrackedSymbols:>{
               Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
                Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
             
             DynamicModuleValues:>{},
             UndoTrackedVariables:>{Typeset`open$$}],
            BaseStyle->{"Deploy"},
            DeleteWithContents->True,
            Editable->False,
            SelectWithContents->True]}], "}"}], ",", " ", "\n", "\t\t", 
         RowBox[{"{", 
          RowBox[{
          "Gray", ",", 
           "\"\<\!\(\*StyleBox[\"ECMWF\",FontWeight->\"Bold\"]\)\>\"", ",", 
           NamespaceBox["LinguisticAssistant",
            
            DynamicModuleBox[{Typeset`query$$ = "\"Europe\"", 
             Typeset`boxes$$ = TemplateBox[{"\"Europe\"", 
               RowBox[{"Entity", "[", 
                 RowBox[{"\"GeographicRegion\"", ",", "\"Europe\""}], "]"}], 
               "\"Entity[\\\"GeographicRegion\\\", \\\"Europe\\\"]\"", 
               "\"geographic region\""}, "Entity"], 
             Typeset`allassumptions$$ = {{
              "type" -> "Clash", "word" -> "Europe", "template" -> 
               "Assuming \"${word}\" is ${desc1}. Use as ${desc2} instead", 
               "count" -> "3", 
               "Values" -> {{
                 "name" -> "GeographicRegion", "desc" -> "a continent", 
                  "input" -> "*C.Europe-_*GeographicRegion-"}, {
                 "name" -> "CountryClass", "desc" -> "a class of countries", 
                  "input" -> "*C.Europe-_*CountryClass-"}, {
                 "name" -> "Word", "desc" -> "a word", "input" -> 
                  "*C.Europe-_*Word-"}}}}, Typeset`assumptions$$ = {}, 
             Typeset`open$$ = {1, 2}, Typeset`querystate$$ = {
             "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
              0.36468`6.013456939623542, "Messages" -> {}}}, 
             DynamicBox[ToBoxes[
               AlphaIntegration`LinguisticAssistantBoxes[
               "\"Europe\"", 4, Automatic, 
                Dynamic[Typeset`query$$], 
                Dynamic[Typeset`boxes$$], 
                Dynamic[Typeset`allassumptions$$], 
                Dynamic[Typeset`assumptions$$], 
                Dynamic[Typeset`open$$], 
                Dynamic[Typeset`querystate$$]], StandardForm],
              ImageSizeCache->{247., {10., 23.}},
              
              TrackedSymbols:>{
               Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
                Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
             
             DynamicModuleValues:>{},
             UndoTrackedVariables:>{Typeset`open$$}],
            BaseStyle->{"Deploy"},
            DeleteWithContents->True,
            Editable->False,
            SelectWithContents->True]}], "}"}], ",", "\n", "\t\t", 
         RowBox[{"{", 
          RowBox[{
          "Magenta", ",", 
           "\"\<\!\(\*StyleBox[\"HMCR\",FontWeight->\"Bold\"]\)\>\"", ",", 
           NamespaceBox["LinguisticAssistant",
            
            DynamicModuleBox[{Typeset`query$$ = "\"Russia\"", 
             Typeset`boxes$$ = TemplateBox[{"\"Russia\"", 
               RowBox[{"Entity", "[", 
                 RowBox[{"\"Country\"", ",", "\"Russia\""}], "]"}], 
               "\"Entity[\\\"Country\\\", \\\"Russia\\\"]\"", "\"country\""}, 
              "Entity"], Typeset`allassumptions$$ = {}, 
             Typeset`assumptions$$ = {}, Typeset`open$$ = {1, 2}, 
             Typeset`querystate$$ = {
             "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
              0.309507`5.942215469233356, "Messages" -> {}}}, 
             DynamicBox[ToBoxes[
               AlphaIntegration`LinguisticAssistantBoxes[
               "\"Russia\"", 4, Automatic, 
                Dynamic[Typeset`query$$], 
                Dynamic[Typeset`boxes$$], 
                Dynamic[Typeset`allassumptions$$], 
                Dynamic[Typeset`assumptions$$], 
                Dynamic[Typeset`open$$], 
                Dynamic[Typeset`querystate$$]], StandardForm],
              ImageSizeCache->{160., {10., 23.}},
              
              TrackedSymbols:>{
               Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
                Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
             
             DynamicModuleValues:>{},
             UndoTrackedVariables:>{Typeset`open$$}],
            BaseStyle->{"Deploy"},
            DeleteWithContents->True,
            Editable->False,
            SelectWithContents->True]}], "}"}], ",", "   ", "\n", "\t\t", 
         RowBox[{"{", 
          RowBox[{"Yellow", ",", " ", "\"\<ISAC-CNR\>\"", ",", 
           NamespaceBox["LinguisticAssistant",
            
            DynamicModuleBox[{Typeset`query$$ = "\"Italy\"", Typeset`boxes$$ =
              TemplateBox[{"\"Italy\"", 
               RowBox[{"Entity", "[", 
                 RowBox[{"\"Country\"", ",", "\"Italy\""}], "]"}], 
               "\"Entity[\\\"Country\\\", \\\"Italy\\\"]\"", "\"country\""}, 
              "Entity"], Typeset`allassumptions$$ = {}, 
             Typeset`assumptions$$ = {}, Typeset`open$$ = {1, 2}, 
             Typeset`querystate$$ = {
             "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
              0.321578`5.958831323356535, "Messages" -> {}}}, 
             DynamicBox[ToBoxes[
               AlphaIntegration`LinguisticAssistantBoxes[
               "\"Italy\"", 4, Automatic, 
                Dynamic[Typeset`query$$], 
                Dynamic[Typeset`boxes$$], 
                Dynamic[Typeset`allassumptions$$], 
                Dynamic[Typeset`assumptions$$], 
                Dynamic[Typeset`open$$], 
                Dynamic[Typeset`querystate$$]], StandardForm],
              ImageSizeCache->{134., {10., 23.}},
              
              TrackedSymbols:>{
               Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
                Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
             
             DynamicModuleValues:>{},
             UndoTrackedVariables:>{Typeset`open$$}],
            BaseStyle->{"Deploy"},
            DeleteWithContents->True,
            Editable->False,
            SelectWithContents->True]}], "}"}], ",", " ", "\n", "\t\t", 
         RowBox[{"{", 
          RowBox[{"LightPurple", ",", "\"\<JMA\>\"", ",", " ", 
           NamespaceBox["LinguisticAssistant",
            
            DynamicModuleBox[{Typeset`query$$ = "\"Japan\"", Typeset`boxes$$ =
              TemplateBox[{"\"Japan\"", 
               RowBox[{"Entity", "[", 
                 RowBox[{"\"Country\"", ",", "\"Japan\""}], "]"}], 
               "\"Entity[\\\"Country\\\", \\\"Japan\\\"]\"", "\"country\""}, 
              "Entity"], Typeset`allassumptions$$ = {}, 
             Typeset`assumptions$$ = {}, Typeset`open$$ = {1, 2}, 
             Typeset`querystate$$ = {
             "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
              0.353139`5.999490676364898, "Messages" -> {}}}, 
             DynamicBox[ToBoxes[
               AlphaIntegration`LinguisticAssistantBoxes[
               "\"Japan\"", 4, Automatic, 
                Dynamic[Typeset`query$$], 
                Dynamic[Typeset`boxes$$], 
                Dynamic[Typeset`allassumptions$$], 
                Dynamic[Typeset`assumptions$$], 
                Dynamic[Typeset`open$$], 
                Dynamic[Typeset`querystate$$]], StandardForm],
              ImageSizeCache->{152., {10., 23.}},
              
              TrackedSymbols:>{
               Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
                Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
             
             DynamicModuleValues:>{},
             UndoTrackedVariables:>{Typeset`open$$}],
            BaseStyle->{"Deploy"},
            DeleteWithContents->True,
            Editable->False,
            SelectWithContents->True]}], "}"}], ",", "\n", "\t\t", 
         RowBox[{"{", 
          RowBox[{
          "Brown", ",", " ", 
           "\"\<\!\(\*StyleBox[\"KMA\",FontWeight->\"Bold\"]\)\>\"", ",", 
           NamespaceBox["LinguisticAssistant",
            
            DynamicModuleBox[{Typeset`query$$ = "\"United Kingdom\"", 
             Typeset`boxes$$ = TemplateBox[{"\"United Kingdom\"", 
               RowBox[{"Entity", "[", 
                 RowBox[{"\"Country\"", ",", "\"UnitedKingdom\""}], "]"}], 
               "\"Entity[\\\"Country\\\", \\\"UnitedKingdom\\\"]\"", 
               "\"country\""}, "Entity"], 
             Typeset`allassumptions$$ = {{
              "type" -> "Clash", "word" -> "United Kingdom", "template" -> 
               "Assuming \"${word}\" is ${desc1}. Use as ${desc2} instead", 
               "count" -> "2", 
               "Values" -> {{
                 "name" -> "Country", "desc" -> "a country", "input" -> 
                  "*C.United+Kingdom-_*Country-"}, {
                 "name" -> "MusicWork", "desc" -> "a music work", "input" -> 
                  "*C.United+Kingdom-_*MusicWork-"}}}}, 
             Typeset`assumptions$$ = {}, Typeset`open$$ = {1, 2}, 
             Typeset`querystate$$ = {
             "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
              0.389332`6.041865094240275, "Messages" -> {}}}, 
             DynamicBox[ToBoxes[
               AlphaIntegration`LinguisticAssistantBoxes[
               "\"United Kingdom\"", 4, Automatic, 
                Dynamic[Typeset`query$$], 
                Dynamic[Typeset`boxes$$], 
                Dynamic[Typeset`allassumptions$$], 
                Dynamic[Typeset`assumptions$$], 
                Dynamic[Typeset`open$$], 
                Dynamic[Typeset`querystate$$]], StandardForm],
              ImageSizeCache->{277., {10., 23.}},
              
              TrackedSymbols:>{
               Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
                Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
             
             DynamicModuleValues:>{},
             UndoTrackedVariables:>{Typeset`open$$}],
            BaseStyle->{"Deploy"},
            DeleteWithContents->True,
            Editable->False,
            SelectWithContents->True]}], "}"}], ",", "  ", "\n", "\t\t", 
         RowBox[{"{", 
          RowBox[{"Cyan", ",", "\"\<M\[EAcute]t\[EAcute]o-France\>\"", ",", 
           NamespaceBox["LinguisticAssistant",
            
            DynamicModuleBox[{Typeset`query$$ = "\"France\"", 
             Typeset`boxes$$ = TemplateBox[{"\"France\"", 
               RowBox[{"Entity", "[", 
                 RowBox[{"\"Country\"", ",", "\"France\""}], "]"}], 
               "\"Entity[\\\"Country\\\", \\\"France\\\"]\"", "\"country\""}, 
              "Entity"], 
             Typeset`allassumptions$$ = {{
              "type" -> "Clash", "word" -> "France", "template" -> 
               "Assuming \"${word}\" is ${desc1}. Use as ${desc2} instead", 
               "count" -> "2", 
               "Values" -> {{
                 "name" -> "Country", "desc" -> "a country", "input" -> 
                  "*C.France-_*Country-"}, {
                 "name" -> "GivenName", "desc" -> "a given name", "input" -> 
                  "*C.France-_*GivenName-"}}}}, Typeset`assumptions$$ = {}, 
             Typeset`open$$ = {1, 2}, Typeset`querystate$$ = {
             "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
              0.333746`5.974961062809918, "Messages" -> {}}}, 
             DynamicBox[ToBoxes[
               AlphaIntegration`LinguisticAssistantBoxes[
               "\"France\"", 4, Automatic, 
                Dynamic[Typeset`query$$], 
                Dynamic[Typeset`boxes$$], 
                Dynamic[Typeset`allassumptions$$], 
                Dynamic[Typeset`assumptions$$], 
                Dynamic[Typeset`open$$], 
                Dynamic[Typeset`querystate$$]], StandardForm],
              ImageSizeCache->{188., {10., 23.}},
              
              TrackedSymbols:>{
               Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
                Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
             
             DynamicModuleValues:>{},
             UndoTrackedVariables:>{Typeset`open$$}],
            BaseStyle->{"Deploy"},
            DeleteWithContents->True,
            Editable->False,
            SelectWithContents->True]}], "}"}], ",", "  ", "\n", "\t\t", 
         RowBox[{"{", 
          RowBox[{"Blue", ",", "\"\<NCEP\>\"", ",", 
           NamespaceBox["LinguisticAssistant",
            
            DynamicModuleBox[{Typeset`query$$ = "\"United States\"", 
             Typeset`boxes$$ = TemplateBox[{"\"United States\"", 
               RowBox[{"Entity", "[", 
                 RowBox[{"\"Country\"", ",", "\"UnitedStates\""}], "]"}], 
               "\"Entity[\\\"Country\\\", \\\"UnitedStates\\\"]\"", 
               "\"country\""}, "Entity"], Typeset`allassumptions$$ = {}, 
             Typeset`assumptions$$ = {}, Typeset`open$$ = {1, 2}, 
             Typeset`querystate$$ = {
             "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
              1.090617`6.489217256467764, "Messages" -> {}}}, 
             DynamicBox[ToBoxes[
               AlphaIntegration`LinguisticAssistantBoxes[
               "\"United States\"", 4, Automatic, 
                Dynamic[Typeset`query$$], 
                Dynamic[Typeset`boxes$$], 
                Dynamic[Typeset`allassumptions$$], 
                Dynamic[Typeset`assumptions$$], 
                Dynamic[Typeset`open$$], 
                Dynamic[Typeset`querystate$$]], StandardForm],
              ImageSizeCache->{222., {10., 23.}},
              
              TrackedSymbols:>{
               Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
                Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
             
             DynamicModuleValues:>{},
             UndoTrackedVariables:>{Typeset`open$$}],
            BaseStyle->{"Deploy"},
            DeleteWithContents->True,
            Editable->False,
            SelectWithContents->True]}], "}"}], ",", "\n", "\t\t", 
         RowBox[{"{", 
          RowBox[{
          "Orange", ",", " ", 
           "\"\<\!\(\*StyleBox[\"UKMO\",FontWeight->\"Bold\"]\)\>\"", ",", 
           NamespaceBox["LinguisticAssistant",
            
            DynamicModuleBox[{Typeset`query$$ = "\"United Kingdom\"", 
             Typeset`boxes$$ = TemplateBox[{"\"United Kingdom\"", 
               RowBox[{"Entity", "[", 
                 RowBox[{"\"Country\"", ",", "\"UnitedKingdom\""}], "]"}], 
               "\"Entity[\\\"Country\\\", \\\"UnitedKingdom\\\"]\"", 
               "\"country\""}, "Entity"], 
             Typeset`allassumptions$$ = {{
              "type" -> "Clash", "word" -> "United Kingdom", "template" -> 
               "Assuming \"${word}\" is ${desc1}. Use as ${desc2} instead", 
               "count" -> "2", 
               "Values" -> {{
                 "name" -> "Country", "desc" -> "a country", "input" -> 
                  "*C.United+Kingdom-_*Country-"}, {
                 "name" -> "MusicWork", "desc" -> "a music work", "input" -> 
                  "*C.United+Kingdom-_*MusicWork-"}}}}, 
             Typeset`assumptions$$ = {}, Typeset`open$$ = {1, 2}, 
             Typeset`querystate$$ = {
             "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
              0.373719`6.024090171584828, "Messages" -> {}}}, 
             DynamicBox[ToBoxes[
               AlphaIntegration`LinguisticAssistantBoxes[
               "\"United Kingdom\"", 4, Automatic, 
                Dynamic[Typeset`query$$], 
                Dynamic[Typeset`boxes$$], 
                Dynamic[Typeset`allassumptions$$], 
                Dynamic[Typeset`assumptions$$], 
                Dynamic[Typeset`open$$], 
                Dynamic[Typeset`querystate$$]], StandardForm],
              ImageSizeCache->{277., {10., 23.}},
              
              TrackedSymbols:>{
               Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
                Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
             
             DynamicModuleValues:>{},
             UndoTrackedVariables:>{Typeset`open$$}],
            BaseStyle->{"Deploy"},
            DeleteWithContents->True,
            Editable->False,
            SelectWithContents->True]}], "}"}]}], "}"}]}], ";", "\n", "\t", 
      RowBox[{"size", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Block", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"data", "=", 
               RowBox[{"Import", "[", 
                RowBox[{
                "\"\</Users/lambda/Documents/Research/3_S2SEvaluation/Data/\>\
\"", "<>", "#", "<>", "\"\</\>\"", "<>", "#", "<>", "\"\<.mx\>\""}], "]"}]}], 
              "}"}], ",", "\n", "\t\t", 
             RowBox[{"Dimensions", "[", 
              RowBox[{"data", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"{", 
             RowBox[{"1", ",", "3"}], "}"}], "]"}], "]"}], "&"}], ",", 
         "models"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"frequency", "=", 
       RowBox[{"Block", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"time", ",", "f", ",", "e"}], "}"}], ",", "\n", "\t\t", 
         RowBox[{
          RowBox[{"time", "=", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Import", "[", 
               RowBox[{
               "\"\</Users/lambda/Documents/Research/3_S2SEvaluation/Data/\>\"\
", "<>", "#", "<>", "\"\</\>\"", "<>", "#", "<>", 
                "\"\<_control_time.mx\>\""}], "]"}], "&"}], ",", "models"}], 
            "]"}]}], ";", "\n", "\t\t", 
          RowBox[{"f", "=", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Round", "[", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", "0.1"}], "]"}], "&"}], 
             ",", 
             RowBox[{"Map", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"DateDifference", "[", 
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}], ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Length", "[", "#", "]"}], "+", "0.0"}], ")"}]}], 
                "&"}], ",", "time"}], "]"}]}], "]"}]}], ";", "\n", "\t\t", 
          RowBox[{"e", "=", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
                RowBox[{"#", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}]}], "}"}], 
              "&"}], ",", "time"}], "]"}]}], ";", "\n", "\t\t", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "<", "1.01"}], ",", "\n", 
               "\t\t", 
               RowBox[{"\"\<Every day from \>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "1"}], "]"}], "]"}], "]"}], "<>", 
                "\"\< to \>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "2"}], "]"}], "]"}], "]"}]}], ",", "\n", 
               "\t\t", 
               RowBox[{"\"\<Every \>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", 
                "\"\< days from \>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "1"}], "]"}], "]"}], "]"}], "<>", 
                "\"\< to \>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "2"}], "]"}], "]"}], "]"}]}]}], "]"}], 
             "&"}], ",", 
            RowBox[{"Transpose", "[", 
             RowBox[{"{", 
              RowBox[{"f", ",", "e"}], "}"}], "]"}]}], "]"}]}]}], "]"}]}], 
      ";", "\n", "\t", 
      RowBox[{"Map", "[", 
       RowBox[{"Flatten", ",", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{"primary", ",", "size", ",", "frequency"}], "}"}], "]"}]}], 
       "]"}]}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.716659511213806*^9, 3.7166596533294067`*^9}, {
   3.716659683514586*^9, 3.716659917506621*^9}, {3.7166607040557327`*^9, 
   3.7166607228219357`*^9}, 3.7166617562043457`*^9, {3.716729364293775*^9, 
   3.716729432083064*^9}, 3.716729611725114*^9, 3.7167296965405083`*^9, {
   3.7167310070887737`*^9, 3.716731042612667*^9}, {3.716731992101821*^9, 
   3.7167320170670757`*^9}, {3.7167320482351227`*^9, 3.716732139797435*^9}, {
   3.7167322531952267`*^9, 3.7167322663903913`*^9}, {3.71673230171984*^9, 
   3.716732382107645*^9}, {3.7167325040679617`*^9, 3.7167325164877787`*^9}, {
   3.7167326192950277`*^9, 3.716732628428314*^9}, {3.716745731906907*^9, 
   3.716745832438509*^9}, {3.7167458841335783`*^9, 3.716745885676488*^9}, {
   3.716813166161322*^9, 3.7168131688463*^9}, {3.716813212315896*^9, 
   3.716813215694171*^9}, 3.717162236400072*^9, {3.7171625440711823`*^9, 
   3.717162557562458*^9}, {3.7171626009644613`*^9, 3.717162601229452*^9}, {
   3.717252137615142*^9, 
   3.717252151380279*^9}},ExpressionUUID->"143cd342-99b7-4755-9a22-\
6204f5482ece"],

Cell[BoxData[
 RowBox[{
  RowBox[{"label", "=", 
   RowBox[{"TableForm", "[", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "<>", "\"\<(\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", "\"\<)\>\""}], ",", 
           RowBox[{"#", "[", 
            RowBox[{"[", 
             RowBox[{"4", ";;"}], "]"}], "]"}]}], "}"}], "]"}], "&"}], ",", 
       "datasets"}], "]"}], ",", "\n", "\t", 
     RowBox[{"TableHeadings", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<\>\"", ",", "\"\<Model\>\"", ",", "\"\<Ensemble Size\>\"", ",", 
          "\"\<Extension(day)\>\"", ",", "\"\<Hincast Frequency\>\""}], 
         "}"}]}], "}"}]}], ",", "\n", "\t", 
     RowBox[{"TableAlignments", "\[Rule]", "Left"}]}], "]"}]}], ";"}]], "Code",\

 CellChangeTimes->{{3.717252820942787*^9, 
  3.717252823009787*^9}},ExpressionUUID->"4d488475-e3ae-44ef-a155-\
40897f6a8ede"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SCA", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"grid", "=", 
          RowBox[{"Import", "[", 
           RowBox[{
           "main", "<>", "\"\<Data/\>\"", "<>", "#", "<>", "\"\</\>\"", "<>", 
            "#", "<>", "\"\<_grids.mx\>\""}], "]"}]}], "}"}], ",", "\n", "\t", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "&"}], ",", 
          RowBox[{"Position", "[", 
           RowBox[{
            RowBox[{"grid", "[", 
             RowBox[{"[", 
              RowBox[{";;", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"_", "?", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"#", "\[LessEqual]", "38.0"}], "&"}], ")"}]}]}], 
           "]"}]}], "]"}]}], "]"}], "&"}], ",", "models"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"NCA", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"grid", "=", 
          RowBox[{"Import", "[", 
           RowBox[{
           "main", "<>", "\"\<Data/\>\"", "<>", "#", "<>", "\"\</\>\"", "<>", 
            "#", "<>", "\"\<_grids.mx\>\""}], "]"}]}], "}"}], ",", "\n", "\t", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "&"}], ",", 
          RowBox[{"Position", "[", 
           RowBox[{
            RowBox[{"grid", "[", 
             RowBox[{"[", 
              RowBox[{";;", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"_", "?", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"And", "[", 
                RowBox[{
                 RowBox[{"#", ">", "38.0"}], ",", 
                 RowBox[{"#", "<=", "42"}]}], "]"}], "&"}], ")"}]}]}], 
           "]"}]}], "]"}]}], "]"}], "&"}], ",", "models"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"OR", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"grid", "=", 
          RowBox[{"Import", "[", 
           RowBox[{
           "main", "<>", "\"\<Data/\>\"", "<>", "#", "<>", "\"\</\>\"", "<>", 
            "#", "<>", "\"\<_grids.mx\>\""}], "]"}]}], "}"}], ",", "\n", "\t", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "&"}], ",", 
          RowBox[{"Position", "[", 
           RowBox[{
            RowBox[{"grid", "[", 
             RowBox[{"[", 
              RowBox[{";;", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"_", "?", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"And", "[", 
                RowBox[{
                 RowBox[{"#", ">", "42.0"}], ",", 
                 RowBox[{"#", "\[LessEqual]", "45"}]}], "]"}], "&"}], 
              ")"}]}]}], "]"}]}], "]"}]}], "]"}], "&"}], ",", "models"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"WA", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"grid", "=", 
          RowBox[{"Import", "[", 
           RowBox[{
           "main", "<>", "\"\<Data/\>\"", "<>", "#", "<>", "\"\</\>\"", "<>", 
            "#", "<>", "\"\<_grids.mx\>\""}], "]"}]}], "}"}], ",", "\n", "\t", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "&"}], ",", 
          RowBox[{"Position", "[", 
           RowBox[{
            RowBox[{"grid", "[", 
             RowBox[{"[", 
              RowBox[{";;", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"_", "?", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"#", ">", "45"}], "&"}], ")"}]}]}], "]"}]}], "]"}]}], 
       "]"}], "&"}], ",", "models"}], "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.717253104004994*^9, 
  3.717253107611692*^9}},ExpressionUUID->"b5ad0616-316e-4f8f-a449-\
ad813656938d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"48928679-6037-495a-86aa-a3bb83371bec"],

Cell["Skill Metric", "Section",
 CellChangeTimes->{{3.715625787110599*^9, 3.715625788499967*^9}, {
  3.7156282146572943`*^9, 3.715628217953314*^9}, {3.716657826710766*^9, 
  3.71665782875006*^9}},ExpressionUUID->"be3eb40f-eef3-4131-ad02-\
1b1c64c7e79b"],

Cell[CellGroupData[{

Cell["ROC ", "Subchapter",
 CellChangeTimes->{{3.71691673294831*^9, 
  3.716916733706813*^9}},ExpressionUUID->"5022c7c8-ba43-475e-84e7-\
b2776fb8dc6e"],

Cell[BoxData[
 RowBox[{"ClearAll", "[", 
  RowBox[{"ROCPoint", ",", "ROCScore", ",", "ROCDraw"}], "]"}]], "Code",
 CellChangeTimes->{{3.7183153082133503`*^9, 
  3.718315318846106*^9}},ExpressionUUID->"30177a5e-e652-4ec5-9b6e-\
992c8cd589de"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ROCPoint", "[", 
   RowBox[{"simu_", ",", "obser_", ",", "tercile_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "point", ",", "bisimu", ",", "biobser", ",", "FalsePositiveRate", ",", 
      "TruePositiveRate", ",", "result"}], "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"point", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Quantile", "[", 
         RowBox[{"obser", ",", 
          RowBox[{"tercile", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"Quantile", "[", 
         RowBox[{"obser", ",", 
          RowBox[{"tercile", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "}"}]}], ";", "\n", 
     "\t\t", 
     RowBox[{"bisimu", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"Between", "[", 
            RowBox[{"#", ",", "point"}], "]"}], ",", "1", ",", "0"}], "]"}], 
         "&"}], ",", "simu"}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"biobser", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"Between", "[", 
            RowBox[{"#", ",", "point"}], "]"}], ",", "1", ",", "0"}], "]"}], 
         "&"}], ",", "obser"}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"result", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"And", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "1"}], ",", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "0"}]}], "]"}], 
           ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"And", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "1"}], ",", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "1"}]}], "]"}], 
             ",", "1", ",", "0"}], "]"}]}], "]"}], "&"}], ",", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{"bisimu", ",", "biobser"}], "}"}], "]"}]}], "]"}]}], ";", 
     "\n", "\t\t", 
     RowBox[{"FalsePositiveRate", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Length", "[", 
          RowBox[{"Select", "[", 
           RowBox[{"result", ",", 
            RowBox[{
             RowBox[{"#", "\[Equal]", 
              RowBox[{"-", "1"}]}], "&"}]}], "]"}], "]"}], "+", "0.0"}], 
        ")"}], "/", 
       RowBox[{"Length", "[", 
        RowBox[{"Select", "[", 
         RowBox[{"biobser", ",", 
          RowBox[{
           RowBox[{"#", "\[Equal]", "0"}], "&"}]}], "]"}], "]"}]}]}], ";", 
     "\n", "\t\t", 
     RowBox[{"TruePositiveRate", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Length", "[", 
          RowBox[{"Select", "[", 
           RowBox[{"result", ",", 
            RowBox[{
             RowBox[{"#", "\[Equal]", "1"}], "&"}]}], "]"}], "]"}], "+", 
         "0.0"}], ")"}], "/", 
       RowBox[{"Length", "[", 
        RowBox[{"Select", "[", 
         RowBox[{"biobser", ",", 
          RowBox[{
           RowBox[{"#", "\[Equal]", "1"}], "&"}]}], "]"}], "]"}]}]}], ";", 
     "\n", "\t\t", 
     RowBox[{"{", 
      RowBox[{"FalsePositiveRate", ",", "TruePositiveRate"}], "}"}]}]}], 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.716917329368575*^9, 3.716917410079918*^9}, {
   3.716917670125122*^9, 3.716917688737439*^9}, 3.7169177222534313`*^9, {
   3.71691776834295*^9, 3.716917770198345*^9}, {3.716918175793373*^9, 
   3.716918180359756*^9}, {3.716918220694716*^9, 3.716918328296632*^9}, 
   3.7169184722892847`*^9, {3.716918586498473*^9, 3.7169186216593523`*^9}, {
   3.716918701346843*^9, 3.71691871347023*^9}, {3.716918800340975*^9, 
   3.7169188180843763`*^9}, {3.716918856296802*^9, 3.716918901934931*^9}, {
   3.716919100306055*^9, 3.716919226504942*^9}, {3.716919909140963*^9, 
   3.716919929162407*^9}, {3.716919964251376*^9, 3.7169199677128487`*^9}, {
   3.716920203469982*^9, 3.716920204284493*^9}, {3.716920276780294*^9, 
   3.716920293922621*^9}, {3.7169204245847797`*^9, 3.716920450918282*^9}, {
   3.716920630762258*^9, 3.716920636264254*^9}, {3.7169214211192303`*^9, 
   3.716921422468564*^9}, {3.716923619246188*^9, 3.7169236350778112`*^9}, {
   3.7173370233011312`*^9, 3.717337031043146*^9}, {3.718313405314098*^9, 
   3.718313414423966*^9}, {3.71831345184886*^9, 3.718313501742545*^9}, {
   3.718313610824008*^9, 3.718313615176839*^9}, {3.71831495999334*^9, 
   3.718315142748814*^9}, {3.718315180438033*^9, 
   3.718315227682214*^9}},ExpressionUUID->"64a16c9f-48c7-454b-8bd1-\
e238ed639daa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ROCScore", "[", 
   RowBox[{"simu_", ",", "obser_", ",", 
    RowBox[{"interval_:", "0.08"}]}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"origin", ",", "final", ",", "l"}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"origin", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Prepend", "[", 
         RowBox[{
          RowBox[{"ROCPoint", "[", 
           RowBox[{"simu", ",", "obser", ",", 
            RowBox[{"{", 
             RowBox[{"tercile", ",", 
              RowBox[{"tercile", "+", "interval"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"tercile", "+", 
           RowBox[{"interval", "/", "2.0"}]}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"tercile", ",", "0.0", ",", 
          RowBox[{"1", "-", "interval"}], ",", "interval"}], "}"}]}], "]"}]}],
      ";", "\n", "\t", 
     RowBox[{"final", "=", 
      RowBox[{"Sort", "[", 
       RowBox[{
        RowBox[{"Append", "[", 
         RowBox[{
          RowBox[{"Prepend", "[", 
           RowBox[{
            RowBox[{"origin", "[", 
             RowBox[{"[", 
              RowBox[{";;", ",", 
               RowBox[{"2", ";;", "3"}]}], "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}]}], "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"#2", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ">", 
          RowBox[{"#1", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}]}], ";", "\n", 
     "\t", 
     RowBox[{"l", "=", 
      RowBox[{"Length", "[", "final", "]"}]}], ";", "\n", "\t", 
     RowBox[{"Total", "[", 
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"final", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"2", ";;", "l"}], ",", "1"}], "]"}], "]"}], "-", 
          RowBox[{"final", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"1", ";;", 
              RowBox[{"l", "-", "1"}]}], ",", "1"}], "]"}], "]"}]}], ")"}], 
        "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"final", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"2", ";;", "l"}], ",", "2"}], "]"}], "]"}], "+", 
           RowBox[{"final", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"1", ";;", 
               RowBox[{"l", "-", "1"}]}], ",", "2"}], "]"}], "]"}]}], ")"}], 
         "/", "2."}]}], "]"}], "]"}]}]}], "]"}]}]], "Code",
 CellChangeTimes->{{3.716923624244913*^9, 3.716923821429144*^9}, {
   3.716924091963422*^9, 3.7169241132028637`*^9}, {3.716924154772696*^9, 
   3.716924155819018*^9}, {3.7169241924969883`*^9, 3.716924536913549*^9}, {
   3.716924622297467*^9, 3.716924684509676*^9}, {3.7169248164332542`*^9, 
   3.716924847432054*^9}, {3.716924972244879*^9, 3.716925000460414*^9}, {
   3.716925370891469*^9, 3.716925401082692*^9}, {3.716925432193975*^9, 
   3.716925508598096*^9}, {3.716926287059024*^9, 3.716926290209504*^9}, {
   3.716926327207059*^9, 3.716926457234294*^9}, {3.7171624392080603`*^9, 
   3.717162465214031*^9}, {3.71716261744226*^9, 3.717162623017297*^9}, 
   3.7171681765701933`*^9, {3.7173370662670918`*^9, 3.7173371152399406`*^9}, {
   3.717337271035181*^9, 3.717337275001698*^9}, {3.7173373258418293`*^9, 
   3.717337326743484*^9}, {3.717337359895355*^9, 3.717337399397131*^9}, {
   3.717337433132181*^9, 3.717337436866412*^9}, {3.717337521368977*^9, 
   3.7173375395995703`*^9}, {3.7173375921421547`*^9, 
   3.7173375922936983`*^9}, {3.7173378178953667`*^9, 3.717337819030301*^9}, {
   3.717337910907193*^9, 3.717338002638853*^9}, {3.717346442426626*^9, 
   3.7173464455769444`*^9}, {3.718313514070155*^9, 3.718313577528901*^9}, {
   3.7183137875114822`*^9, 3.7183138020782413`*^9}, {3.718314057811257*^9, 
   3.71831408822124*^9}, {3.7183156458213863`*^9, 3.718315649124858*^9}, {
   3.7183157287581787`*^9, 
   3.718315778576984*^9}},ExpressionUUID->"4886183d-f4c3-46a7-ba5b-\
837dd6faa6b6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ROCDraw", "[", 
   RowBox[{"simu_", ",", "obser_", ",", 
    RowBox[{"interval_:", "0.08"}]}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"origin", ",", "final"}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"origin", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Prepend", "[", 
         RowBox[{
          RowBox[{"ROCPoint", "[", 
           RowBox[{"simu", ",", "obser", ",", 
            RowBox[{"{", 
             RowBox[{"tercile", ",", 
              RowBox[{"tercile", "+", "interval"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"tercile", "+", 
           RowBox[{"interval", "/", "2.0"}]}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"tercile", ",", "0.0", ",", 
          RowBox[{"1", "-", "interval"}], ",", "interval"}], "}"}]}], "]"}]}],
      ";", "\n", "\t", 
     RowBox[{"final", "=", 
      RowBox[{"Sort", "[", 
       RowBox[{
        RowBox[{"Append", "[", 
         RowBox[{
          RowBox[{"Prepend", "[", 
           RowBox[{"origin", ",", 
            RowBox[{"{", 
             RowBox[{"None", ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"None", ",", "1", ",", "1"}], "}"}]}], "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"#2", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ">", 
          RowBox[{"#1", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}]}], ";", "\n", 
     "\t", 
     RowBox[{"Labeled", "[", 
      RowBox[{
       RowBox[{"Show", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Plot", "[", 
           RowBox[{"x", ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"Dashed", ",", "Gray"}], "}"}]}], ",", "\n", "\t\t\t\t", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", "\n", "\t\t\t\t", 
            RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", "\n", 
            "\t\t\t\t", 
            RowBox[{"ImageSize", "\[Rule]", "400"}], ",", "\n", "\t\t\t\t", 
            RowBox[{"BaseStyle", "\[Rule]", "15"}], ",", "\n", "\t\t\t\t", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", "\n", 
            "\t\t\t\t", 
            RowBox[{"FrameLabel", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"\"\<False Alarm Ratio\>\"", ",", "\"\<Hit Ratio\>\""}],
               "}"}]}]}], "]"}], ",", "\n", "\t\t\t", 
          RowBox[{"ListLinePlot", "[", 
           RowBox[{
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Labeled", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "&"}], ",", 
              "final"}], "]"}], ",", "\n", "\t\t\t\t", 
            RowBox[{"PlotMarkers", "\[Rule]", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<*\>\"", ",", 
               RowBox[{"FontSize", "\[Rule]", "34"}]}], "]"}]}], ",", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "]"}]}], "}"}], 
        "]"}], ",", "\n", "\t\t\t", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"\"\<ROC Score=\>\"", "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{"Round", "[", 
            RowBox[{
             RowBox[{"ROCScore", "[", 
              RowBox[{"simu", ",", "obser", ",", "interval"}], "]"}], ",", 
             "0.001"}], "]"}], "]"}]}], ",", "\n", "\t\t\t\t", 
         RowBox[{"FontSize", "\[Rule]", "15"}]}], "]"}], ",", "Top"}], 
      "]"}]}]}], "]"}]}]], "Code",
 CellChangeTimes->{{3.716923624244913*^9, 3.716923821429144*^9}, {
   3.716924091963422*^9, 3.7169241132028637`*^9}, {3.716924154772696*^9, 
   3.716924155819018*^9}, {3.7169241924969883`*^9, 3.716924536913549*^9}, {
   3.716924622297467*^9, 3.716924684509676*^9}, {3.7169248164332542`*^9, 
   3.716924847432054*^9}, {3.716924972244879*^9, 3.716925000460414*^9}, {
   3.716925370891469*^9, 3.716925401082692*^9}, {3.716925432193975*^9, 
   3.716925508598096*^9}, {3.716926287059024*^9, 3.716926290209504*^9}, {
   3.716926327207059*^9, 3.716926457234294*^9}, {3.7171624392080603`*^9, 
   3.717162465214031*^9}, {3.71716261744226*^9, 3.717162623017297*^9}, 
   3.7171681765701933`*^9, {3.7173370662670918`*^9, 3.717337067156619*^9}, {
   3.7173371225212097`*^9, 3.7173371523917427`*^9}, {3.718312880684668*^9, 
   3.718312882391953*^9}, {3.7183136000868683`*^9, 3.718313606433104*^9}, {
   3.71831414679429*^9, 3.718314155252746*^9}, {3.718314195381282*^9, 
   3.718314196880052*^9}, {3.718314271267166*^9, 3.7183143091307898`*^9}, {
   3.71831434696108*^9, 3.718314370265717*^9}, {3.718314427746461*^9, 
   3.718314432780321*^9}, {3.718315636608514*^9, 
   3.718315639055007*^9}},ExpressionUUID->"aac5cafd-cc6a-42cb-894d-\
38cef250a5f7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"simu", ",", "obser"}], "}"}], "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"RandomVariate", "[", 
     RowBox[{
      RowBox[{"MultinormalDistribution", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"100", ",", " ", "99"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"3", ",", " ", 
            RowBox[{"0.7", "*", "3"}]}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"0.7", "*", "3"}], ",", " ", "3"}], "}"}]}], "}"}]}], 
       "]"}], ",", "5000"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"simu", ",", "obser"}], "}"}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]}], "Code",
 CellChangeTimes->{{3.7183144954953003`*^9, 3.7183145841818666`*^9}, {
  3.718314638209836*^9, 3.718314641286384*^9}, {3.718315338103489*^9, 
  3.718315350464217*^9}, {3.7183154028288097`*^9, 3.7183154047782307`*^9}, {
  3.718315454467091*^9, 3.7183154565927877`*^9}, {3.718315490987862*^9, 
  3.71831558859511*^9}, {3.7183158080899887`*^9, 3.7183158139904613`*^9}, {
  3.71831590502782*^9, 
  3.718315907053403*^9}},ExpressionUUID->"39018a4d-d82b-4377-9dc1-\
415af405acc6"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.65, 0., 0.], PointSize[0.002777777777777778], 
     AbsoluteThickness[1.6], 
     StyleBox[PointBox[CompressedData["
1:eJwcnHc8le8fxiUpZGRlFloyMiqjyG2ksso8z0MUoqwoipCkqGSPKCKhQnZW
kkpR0iIpKUSkviqbSL/r/P7yUuc8z31/7s/nut7XGaSdvC1cWFlYWM4LsLAw
fy4WXOT/eDtFeiN0jifupUid5emGxMcUWXY3etO6SxS5kvrvlAQnTSrfdRxO
9MHvjj2JPF9osoY+46twgyYhxvcP3DhLk5/7j3s4j1Ck/kPn7XI876nHmKrr
QYpkZied/bOeJt/u/nb3/48iifSQ4tArigjGzf8sUKaIqbu3a+gVity7sW+j
WCZFUnLZA/X30sTRM7vj9zeKFL3IGmu4QJFKqeaqX4kUOfxEovhsEUXsnxnX
3X5LkXeFCs1yETTZKXjSxDyOIoZ723NXadHErFbxjZkCRYQr0ldOnqCJX5MT
a+E8RSQVxyMKu2gSl+v/N1GIJjwXlMx276bJB0bMoUp/ivCsyMoKHqXIud3X
epeL02T9oMDY8e8UEY8/NsLSRRGbgmCJE70U2bjgmES1C0WaGY5nRR7QxPXu
cHVnFU3YF2Tv99CmiW3988NH8LibjOIb5YdpcmSjY98xfZqsUzlz+8Ra3H/b
qRTDrxQ5Y3d/28BPBlF5xGg9FUqRKS+T5xXmNBnk+rWoUpAm9Rw1X84tpknV
n8chixMo8lxxul/nGUX4ZxQ1l6VSRPfBfv5LuI+1U+Fw+xRFCuUnWLybsH7B
c011vhTJ8bcd822hycHkX921PjRpt21IuxtAkw3ffix0U6LJAf2QvrnnFLn7
fplKuDdNrKTk05N5aXIoY/XFDw8p0vltZVyUDU0Or5SWP4rHbxn+u2RPG0Ui
4k5r/b5IEZ1/dc8solEflWk3rlKKpB8+mCvgRhPp5kjWLBmajHre41J9gMd5
/B3/iH6o1P7AVR1IESu6RHzNNEWqpesTwscp8h/n5PJCE5p4JFwKu9xOkc2h
GrXixyli2+FwzsiKIs+SN7cP4dwbIpdNBeAc8/K78k+gjwp+x2ol43nr+Bv3
JqJP+tmOejbK0cS4KHL9anWayL6sbrZ6TZOKy0aP5+LRr9HTmQqoj1FmpHJb
LkVSBR7fOpFPkSDxeUH7KooEBtwOPTJMkVH2A4XrB7COxe1B8xtxntc1Iu8t
pkj5xOw1OzeKnE7+8tH4MEUWPz8SHoZ6Vbn5GJb8wb6+bch1xvO5PokPPUih
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
tHLMLwYpLcw4fwH6HV/yvpkaQx+VyU63Qs8kbud63q2hiIpHpskP7Huna/p9
O/hQQIRRdP0v+PaNtTEe4LXTtUlFpVI0KTiQcdsR8/znP5eVOujn11qbNjTi
339OGr4zmaFIk6n3/HXsI6zR4LoLfENr4Um3ReDNmmMmb8rAf+nqOysfoe6h
XkmsW+C/KrwL9j/FXMZtdWQfAk9tPf14fwDm83ZNf/q/KzTZU2x9wC6IJjm7
WXfrYu4X57+82lkJLkiK51qHOrzYKaTP7EtplVuOB3lowrdbqSIJfZxVfMhr
PfzO+/uM69p6mni+u5tXDH770ZPzdyWef+Bzxeaj5RRRcLsate4udGuu5/oS
9F16s5+MKvTb/kjTl2417O/asfzl8POvEx28c+9xDjPeyTVZFGFffj2v6Cq4
UJDN6jb6vGqZDU+aGU0WGk9aLrbDHJUeY1mBPnM2F1l1RR7nvNn9iBX8rtau
VzBrC02Eyts/fgdvnL/2NvZuJ/j0aUdOI9bH9uf9MlPU7YCNy/5BnIvSwynT
4f3ID2V0lTnOX+BwQ2girte1ZKukMOa5MLy7iR/1ip4SeFqDuvOcifDdiNxj
Umj+ejd0kPec+6NJ6HAql9k9NsxxxtlrqzXhp45d724rwk8hMUmncL7tQ+um
dXGeah+Cz6mx0GTeqKqA3gFOaQ6LG1+E+bxZ4G2ZSpPSiDWKp6Vp0m16w7ET
cxkyNrDAGH7VXTV7SR4cJX7h2O0e5JnN3rsTE+Dr1M+aE7moazn7zdflWG+O
flnpFuje8itjO37g/FvVdQy5VtFEwaLvTqc79PGkMf0D863YeDToHXzm0NHw
qWycU0nBYIVpDZO3o1OSd1LkRAk//35L+Mt2V884+ETVv7dSTujfuV0rtept
KdKSr/F0K/hvjc9bGTXwf5WI364HP8GJtYc7P0OXSxILfdci74UK9F48WkyT
1YyoL6Hw1cfHmpY3oY4fnhzpaIWunZwKsZYBT6fMcCbb4d9fsqtkL7bAuZdU
el/B9aZPLy31KgM/XTFjdcH6VvRm2bLhvOzCOj2/f2YQtuu/Zf/Ewrf3rr+8
EDwQPpyUZt/DIJEBJxtCeSkysPua66mHDLLf+B5jHuemltt7854uRU5lU4pf
4cOvODY7LPrNIEes8j9V4jwKMs8MUfCZwo83qA3geSn1Ep2ecxTxSwpfnII+
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
+MMgjj0jFI28XJY0d7raiiZZ5IitGvp88r1nQA3ywoo07gQu+MXHoc4vnzA/
12WP6B/G/tjkRvnj3mBudJODnHD9ydKN5ptRx7MVsRxHyxhk6EZRtye4Zb2d
2GiuEq5/h+d1PlO3AnnG14OrF0QIPegCpz8aaeUswjz96JgyOQIuHOZ2mlgB
32G151kt7AU/qz76pRB6zlfb6JAqhH10hFZF+dDELWzk2+7V8Ntv4tYd8AfO
wrSSGlzvj1GJQF4Y+Gxsafkv5IIKceEPCeCH07+t13omMYjVx0M1iqUMsjvn
0ZgGONk61Zs6D369amPwPAx9WxdY3uWE8zW7qOb7Fnqw1kpahh+PM1Hy9k2F
Xw8kredNwjl8/HfihCz48zO1refzFwZpE0tboYTHBYa9UCtFXa7NBCkYYb2J
c27/BjEvh+9wz2+Aj86wPdp0H331/c3+7V3o077rb8YHcF39vAoXe3CuY02A
l64p9KbmrOUi9G17pMHLCcyF+dI9YcWO4Ps+RR0T7P9rN6W7DzpKxXR0huG6
b+6mPl2Hftj85XNDH/g0dddqriOon4ZrAv/GCzR52/bmnlgV6hYd5T4Cva0z
+mj0eIoijatzZm1wTmqftEVfgafENfiAEejP0ltdJ3bZktBL9sbV3LYkw29Y
6Rbm+0HV8Yoi+ES4LP+lQ9C3a6Yet1yQzx9zRbytvEiRoclkcQHky+t8a31D
rtMkSME00AHcq5wkHJGBuv6rG50cgb4Y3IqpaoYuRd2j7w+A0wdyjGx8wA0n
RmnCijoqRPvVKS6wJZFW/XKPFWjCVsdYk36JIlJ756avEvCp20s6AfNrsGvl
8HFw47rtp3XaMZ+ZEaXND7CvJ0s7TJfj/O5UbX0yLYs++/roGC/qzcce0Zuz
DfMuFOEY6UmTMxxKsTRyUmpsQ8oc8h9feH0YG/ha217dYRiPn3cP3BaK81sc
WugizXz9hDvFOBY6oe53su0jzkEyPbVl6W+KTPqfDC3BeUQmNXDO3WMQvo3P
0p+Cf1LrL9X8gP+a/tXtsAKHzE6Nv40Fh9v7FRYYIfcc+Ke2dxX2laR048Ys
9Knk1aGSGHD7ZtHYO4mYK7VXqV414LaIjbuiVjHzWltM1AJcZ+6HetzUO9Sl
WDv9CfJs18uGRVbox3drNp78jvNZvldX4Sf6KqR+9JU37qP7Ji1kFvVtfuMv
+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
7xlPib87sV4ZHx4f6Mf6VhnfWqdmCz796Z7wGsfrlQtun4OeLhJyVPqMer4+
2HHZG/puzbdqpTz83qL6ilFUB8Z7JV0tKQP9++qw20ccN2hq7qIIfDPO/7Wi
kTJ00K+QczP87pZ8+HNr5Gbjiwd75zBv3kP9Z4cWWZHGj1qn5FDnwspK2tyj
4M2u9JW96OtN7U+2bcV8fD7jeP9DMfjp9dC1aqzXoqWjh6tQ7/qxm6TpfKt2
hL+Rvi9tm5GIwp9h5JOnToa64PzfQrYKIrcoIt4ablcIvjvCOL6Oczfy0pE3
qXHwx+8e2bmz5tADk6s7BoQo4hNdUhn3i9b7TS0z6Ndcnoy3g9CrHKWlqz9f
ZpJrKxSfBEKvVsyQU33IC/kFY/uaocs1e6vH3uH3zA8tN1kvUWS/Q9fdjjbM
E0ty0SnoSGHQTQNucJ3ytg0a+dCJm825z7Qxn58DVVevZQfftmuWjYNnPVp+
3x1EvRp+4Fl9FrrU/FC48QD6Q8yk4jJ/En09tUzXUkl6Pwtlpxbk75ajR7dt
Re7+sUJHfzU4qsNaRdsVx9UXJL4jyJ+6Vl1cgeAKzsyr6i1Yr9Tt49d0waXL
R3IY9D5K84U5dbVYB8O/OicXIo9KP0oftUV+D1EsoYaQ+41cxU8Igbu4G3RS
HuA8PjQIszadZpLKO8Zi/wTg32GHXwSiHsSWnds5wIZx815oEIGOjnj1doWA
hw2Ya3f1lFHk0x3VsFbodeK1v8cC0D9hbI/iFZF/hk/MbBAFX+TMnNkej1wi
LpC/c5i+f3/NSW7D40ziFbp2SdhbimiHxp7iPUGRb9nVe2bBZ5vXT3Q8A8fp
N9vq/czDcU2NbEZQ34rjG35fRm7oe3Hwbh/45Mi713oLr8Mvd+xj58b81ujt
Sk9cjDrm8GtvwtfeMzuXhmdBz2PWW0yi739VaDreRD0oPukOG0eu7tf6sGlz
HNZr6796er+tbmUTqz3o5zVpPR8LwZ3Dn/XXJ6Cfvk7dePoGOdD6ZoX+QehT
efHqW/T9E0vbdobkIz8nFoWcf12B+rH7ZJew0Iq0NxLzqKfIHZ5HNVZB56Qm
pf2TRSniO+YU6r0N/iMhOVkKPYyoOhX5C/UwuufYID90q2w0+Pz9CPB0+5GS
98spcq+sVV4f9e17IORiaDx0sVRt5xT0W1iar+PAAXDapQjXafTjsewnrKwL
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
r+yMohHSj9b+yYY+Ru9NvleEflzlW/8qAH1aEiA8cgF6Gep/Vl4YfV/958NP
AwXM+61vRn/BB4/desPE4W+82SaZE+eReyZzZDWpdeaaywanwUkWLo7N67bC
57au8xmF7g16SFQT0P0R7oZXfoWYl+kw90e8dMKicr02Dx36tr1Q5Bb4cpDr
/noZXLeFiuRiAXLRieHEldQ+wKeefNnx8CTqJdbylxP8Rk3h+4UecBx96dQP
TYxfy8fy28q76USASv9Od0nkDa1ffYeR65R++NrnpYNrCv48qLFBDq6aKKGe
j+1XOSukK0ASdhxHxPsxPnliQiMm4Mny3Zvu30NdfrPROy76jEbQBD6X/MN1
DiX8q88boxF287xWBd0kERd1yYBa1zFSqPiH3iB048VpEQPUnavOIOO7X3RC
++8bTUvo9yqbm09/IE9IXTNO70WdtG2XuHgN/aWwedcRNer5n0Psg9P14J+5
UB8JjKO1f+l36j7eMKZqYRp4ZyLVNvsbdCVxrwKrIernuyRj4Xp8fpx9ibIE
dKYiTbvyJLhfsr7zQ18l8r935eFBvO/m+3IvG9SNBLdND3cbnVhp+Y8r6RHq
UGyPScY2jHeCNd8s/NXrs7/RdAhJeFS+YSv7THHFZNyMK/qJ4YGLvRBJbHt3
pf6aJ/ywbE1Oz1fq+WntlVvBD3k/rJ0jwDPsmXeUXcD1N0/1OK14Ric8lF43
SUIPpDp5bG9AdzoeZlzee4UkTM7QO+tzwM8/9g7Ngf9Oe2vxdiBv55MepYW4
Pn+X4YTqD3TCpM0reEsHSdz1etLXh3w226Sryn0Y/Mt3ofcn5rfFc7NTuTJ4
c8Qr9yXG3a3s8dwv8JVUb7atEvwrIO3GJa5q8Fr7miFXbpJQMAosNO1AHuMh
+jzkUQ9tQyS1LvU/b6VaPszPa/XmYDo4ZPaSAWfDPzpxUHjaZd6but/+m+wx
O/CU+8gMO/Uco/vN/eoz8AGW9nJP+JtpQoJNAK47jzwz24d62zQ/lFiM+mFj
jDmwFXr8ZSz/HhPG98CNhaNR6E9FhudTXNBrftvVYueo/SUkenlcoceq+gdb
RjXg54oyaY2vaISF8O2dCtB3k3Q1Z8dN8KmU6ejOTlzH5w1BMcj5MWonvNxs
SCJqXwZzD+anOOBkVDMbzsOqQH81tX/nGcNT/NCHH36tQsLg0hnWVduF4KNh
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
bS6d+B8v/c/F
       "]],
      FontFamily->"Baskerville"]}, {}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{92.73735132537675, 92.35708490467057},
  BaseStyle->{FontFamily -> "Baskerville"},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->{FontFamily -> "Baskerville"},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{92.94715367218073, 106.37450386763587`}, {93.01989783476093, 
   106.27615643656814`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.718315347155675*^9, 3.7183153510161123`*^9}, 
   3.718315405794755*^9, {3.7183154571009903`*^9, 3.718315514091658*^9}, {
   3.718315546923882*^9, 3.718315589246231*^9}, 3.718315653738064*^9, 
   3.718315707271721*^9, 3.718315814569501*^9, 
   3.7183159075768623`*^9},ExpressionUUID->"4c778bd9-48ff-4fac-876c-\
4c7c6b4bc57e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ROCDraw", "[", 
  RowBox[{"simu", ",", "obser", ",", "0.2"}], "]"}]], "Code",
 CellChangeTimes->{{3.718314117308259*^9, 3.718314124320921*^9}, {
  3.7183143772682943`*^9, 3.7183143794606943`*^9}, {3.718315366042397*^9, 
  3.718315414385277*^9}, {3.7183154447951927`*^9, 3.7183154449567823`*^9}, {
  3.7183155770264893`*^9, 3.718315601405777*^9}, {3.718315675541494*^9, 
  3.718315681410507*^9}, {3.7183157855778017`*^9, 3.718315791042014*^9}, {
  3.718315822079961*^9, 
  3.7183158236931877`*^9}},ExpressionUUID->"a45c174c-52eb-4e45-949f-\
fde91b68867e"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}], 
           GrayLevel[0.5]], 
          LineBox[CompressedData["
1:eJxFxW0w03EcAPCNdZRrjMr9adxE5SlOUlKpuMhDneHk8nRCWk/InXR1WrdJ
nua6nZTnh5R2jGyuMnHsdDnPo1GzMUtj83RndnRZ9cL39+JzH0r8XWqiHg6H
C/7n/wGJypGu+fAz2xN8LFJkmLv39kcrS8paMV84cED8vhwLgyMStB3PsQR4
yuWpTwGWDlftvZydizFgumHroWcYG74SWc1dWa2DjXT0KD8rLmwXsqTsyePB
GYOe3iVrH2FzHkmKx3fCbXKf/qFT3XA3rdwyUi2ENQdPGzfe/gLrbXBMLO36
YA9dXFtoUz/cz3Af7HUYgq2LVBsNS8OwSiuTjruOwnUL7X3EQhFMJL9ZVijG
4Pwb/KQq22/w+lmOIjlLDKe7CXn7eiZgWZMwb4TyHf5NGyu1f/ADdjxnsJXU
LoH9aijXW8ylcAY51mYmSgY7qcONxMHTsJnxiqFwE03oLOUeKJuBb7q3T+4M
lMOci/FVn9fRGpWFyVzxLMwP9dNn+yrgLH9mJW8OTZkKmKhl/oRPHmewMbc5
OMpqaAMvQmv6CuQp9F9wCSEmnWqrhM2k/Bo9IXrHI3qYZ+o8jGuI4cpNF+C0
V9wC0250h2OOIemOCiYFpDk9IaphifOwKFOAbq7wtlXELMLRXA8SeQv9mFlN
l7xbghuV5FJi0DKcU86Mk15CJ1AX7ZpC0PsFgubgCHQu62pvfjw62ePl6q5M
tA1jj79BPXrrxMPd4rfoycXZ0XoOuiiiNfpCC1rnQL3HFKAlI6wKfRH6Q7b2
mmgczfaKta+dQAe+PsI7L0V/uj/wlT6PLnY+xgpRo1PlZWGUZfThoFuyrjU0
AT9WV6RFT/O9aHGbaAGt1sX1D/qFtZFGp0P/BaO4ekM=
           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$2768326#1"]& ]}}, {}, {}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.019444444444444445`], 
          RGBColor[0.65, 0., 0.], 
          AbsoluteThickness[1.6], FontFamily -> "Baskerville"], 
         LineBox[{{0., 0.}, {0.0245, 0.28400000000000003`}, {
          0.09702425606401602, 0.15184815184815184`}, {0.16608304152076037`, 
          0.23153692614770457`}, {0.23125, 0.276}, {0.28732183045761445`, 
          0.8261738261738262}, {1., 1.}}]}}, {{
         Directive[
          PointSize[0.019444444444444445`], 
          RGBColor[0.65, 0., 0.], 
          AbsoluteThickness[1.6], FontFamily -> "Baskerville"], 
         GeometricTransformationBox[
          InsetBox[
           BoxData[
            FormBox[
             StyleBox["\"*\"", FontSize -> 34, StripOnInput -> False], 
             TraditionalForm]], {0., 0.}], {{{0., 0.}}, {{0.0245, 
          0.28400000000000003`}}, {{0.09702425606401602, 
          0.15184815184815184`}}, {{0.16608304152076037`, 
          0.23153692614770457`}}, {{0.23125, 0.276}}, {{0.28732183045761445`, 
          0.8261738261738262}}, {{1., 1.}}}]}, {}}, {
        TagBox[{
          Opacity[0.], {
           PointBox[{0., 0.}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$2768506, {1}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.0245, 0.28400000000000003`}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$2768506, {2}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.09702425606401602, 0.15184815184815184`}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$2768506, {3}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.16608304152076037`, 0.23153692614770457`}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$2768506, {4}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.23125, 0.276}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$2768506, {5}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.28732183045761445`, 0.8261738261738262}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$2768506, {6}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{1., 1.}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$2768506, {
           7}}]& ]}}, {{{{}, {}}, {{}, {
          InsetBox[
           FormBox[
            PaneBox[
             StyleBox[
             "0.1`", {FontFamily -> "Baskerville"}, StripOnInput -> False]], 
            TraditionalForm], 
           
           Offset[{2, -2}, {0.0245, 
            0.28400000000000003`}], {-0.9620000000000001, \
-0.9620000000000001}], 
          InsetBox[
           FormBox[
            PaneBox[
             StyleBox[
             "0.30000000000000004`", {FontFamily -> "Baskerville"}, 
              StripOnInput -> False]], TraditionalForm], 
           Offset[{-2, 0}, {0.09702425606401602, 0.15184815184815184`}], {
           0.9620000000000001, 0.9620000000000001}], 
          InsetBox[
           FormBox[
            PaneBox[
             StyleBox[
             "0.5`", {FontFamily -> "Baskerville"}, StripOnInput -> False]], 
            TraditionalForm], 
           Offset[{-2, -2}, {0.16608304152076037`, 0.23153692614770457`}], {
           0.9620000000000001, -0.9620000000000001}], 
          InsetBox[
           FormBox[
            PaneBox[
             StyleBox[
             "0.7000000000000001`", {FontFamily -> "Baskerville"}, 
              StripOnInput -> False]], TraditionalForm], 
           Offset[{-2, -2}, {0.23125, 0.276}], {
           0.9620000000000001, -0.9620000000000001}], 
          InsetBox[
           FormBox[
            PaneBox[
             StyleBox[
             "0.9`", {FontFamily -> "Baskerville"}, StripOnInput -> False]], 
            TraditionalForm], 
           Offset[{-2, -2}, {0.28732183045761445`, 0.8261738261738262}], {
           0.9620000000000001, -0.9620000000000001}]}}}, {{{}}, {{}}}}, {}, \
{}, {}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, BaseStyle -> 15, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox["\"Hit Ratio\"", TraditionalForm], None}, {
        FormBox["\"False Alarm Ratio\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     LabelStyle -> {FontFamily -> "Baskerville"}, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 1}, {0, 1}}, 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],StyleBox[
   "\"ROC Score=0.731\"", FontSize -> 15, StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {2, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Top"}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7183141252472982`*^9, 3.718314160226245*^9, 3.7183142011183357`*^9, {
   3.718314294334567*^9, 3.718314338178673*^9}, {3.718314380304003*^9, 
   3.718314393625288*^9}, {3.718314436463874*^9, 3.718314442240838*^9}, {
   3.718314573230918*^9, 3.7183146450836782`*^9}, 3.718315253454014*^9, {
   3.7183153584972897`*^9, 3.718315466685392*^9}, {3.71831550057158*^9, 
   3.718315518600614*^9}, {3.718315550116898*^9, 3.718315602070258*^9}, {
   3.7183156569343767`*^9, 3.718315709099813*^9}, {3.7183157841733913`*^9, 
   3.718315791945979*^9}, 3.718315824600115*^9, 
   3.718315897623288*^9},ExpressionUUID->"a4455b62-fbe1-4dd4-82e9-\
9af96ba39750"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"5b65c0a3-4613-4854-9f07-ddc24a73137c"],

Cell[CellGroupData[{

Cell["Evaluation", "Subchapter",
 CellChangeTimes->{{3.716927238743927*^9, 3.716927245559847*^9}, {
  3.717272724935122*^9, 
  3.717272726494026*^9}},ExpressionUUID->"97fd9862-bf6a-4fd5-8181-\
93e44d826362"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ROCEvaluation", "[", "dataset_", "]"}], ":=", "\n", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "result", ",", "\n", "\t   ", "SCAsimu", ",", "NCAsimu", ",", "ORsimu", 
       ",", "WAsimu", ",", "\n", "\t   ", "SCAobser", ",", "NCAobser", ",", 
       "ORobser", ",", "WAobser", ",", "\n", "\t   ", "mSCAsimu", ",", 
       "mNCAsimu", ",", "mORsimu", ",", "mWAsimu", ",", "\n", "\t   ", 
       "mSCAobser", ",", "mNCAobser", ",", "mORobser", ",", "mWAobser", ",", 
       "\n", "\t   ", "iSCAsimu", ",", "iSCAobser", ",", "iNCAsimu", ",", 
       "iNCAobser", ",", "\n", "\t   ", "imSCAsimu", ",", "imNCAsimu", ",", 
       "imORsimu", ",", "imWAsimu", ",", "\n", "\t   ", "iORsimu", ",", 
       "iORobser", ",", "iWAsimu", ",", "iWAobser", ",", "\n", "\t   ", 
       "imSCAobser", ",", "imNCAobser", ",", "imORobser", ",", "imWAobser", 
       ",", "\n", "\t   ", "GridDaily", ",", "GridInterval", ",", 
       "RegionalDaily", ",", "RegionalInterval", ",", "\n", "\t   ", "int"}], 
      "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"SCAsimu", ",", "NCAsimu", ",", "ORsimu", ",", "WAsimu"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "SCAobser", ",", "NCAobser", ",", "ORobser", ",", "WAobser"}], 
            "}"}]}], "}"}], ",", "\n", "\t ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "iSCAsimu", ",", "iNCAsimu", ",", "iORsimu", ",", "iWAsimu"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "iSCAobser", ",", "iNCAobser", ",", "iORobser", ",", "iWAobser"}],
             "}"}]}], "}"}]}], "}"}], "=", "\n", "\t ", 
       RowBox[{"Import", "[", 
        RowBox[{
        "main", "<>", "\"\<Data/\>\"", "<>", "dataset", "<>", "\"\</\>\"", "<>",
          "dataset", "<>", "\"\<_dg.mx\>\""}], "]"}]}], ";", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"mSCAsimu", ",", "mNCAsimu", ",", "mORsimu", ",", "mWAsimu"}],
         "}"}], "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"#", ",", "1"}], "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"SCAsimu", ",", "NCAsimu", ",", "ORsimu", ",", "WAsimu"}], 
          "}"}]}], "]"}]}], ";", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "mSCAobser", ",", "mNCAobser", ",", "mORobser", ",", "mWAobser"}], 
        "}"}], "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{"#", ",", 
              RowBox[{
               RowBox[{"Dimensions", "[", "SCAsimu", "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", "1"}], "]"}], 
          "&"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "SCAobser", ",", "NCAobser", ",", "ORobser", ",", "WAobser"}], 
          "}"}]}], "]"}]}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "imSCAsimu", ",", "imNCAsimu", ",", "imORsimu", ",", "imWAsimu"}], 
        "}"}], "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "#", "]"}], "\[Equal]", "0"}], ",", 
               "0", ",", 
               RowBox[{"Flatten", "[", 
                RowBox[{"#", ",", "1"}], "]"}]}], "]"}], "&"}], ",", "#"}], 
           "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "iSCAsimu", ",", "iNCAsimu", ",", "iORsimu", ",", "iWAsimu"}], 
          "}"}]}], "]"}]}], ";", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "imSCAobser", ",", "imNCAobser", ",", "imORobser", ",", "imWAobser"}],
         "}"}], "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "#", "]"}], "\[Equal]", "0"}], ",", 
               "0", ",", 
               RowBox[{"Flatten", "[", 
                RowBox[{
                 RowBox[{"Table", "[", 
                  RowBox[{"#", ",", 
                   RowBox[{
                    RowBox[{"Dimensions", "[", 
                    RowBox[{"iSCAsimu", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", "1"}], 
                "]"}]}], "]"}], "&"}], ",", "#"}], "]"}], "&"}], ",", "\n", 
         "\t", 
         RowBox[{"{", 
          RowBox[{
          "iSCAobser", ",", "iNCAobser", ",", "iORobser", ",", "iWAobser"}], 
          "}"}]}], "]"}]}], ";", "\n", "\t", "\n", 
      RowBox[{"GridDaily", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"ROCScore", "[", 
              RowBox[{
               RowBox[{"mSCAsimu", "[", 
                RowBox[{"[", 
                 RowBox[{";;", ",", "day", ",", "grid"}], "]"}], "]"}], ",", 
               RowBox[{"mSCAobser", "[", 
                RowBox[{"[", 
                 RowBox[{";;", ",", "day", ",", "grid"}], "]"}], "]"}]}], 
              "]"}], ",", "\n", "\t\t\t", 
             RowBox[{"{", 
              RowBox[{"grid", ",", 
               RowBox[{
                RowBox[{"Dimensions", "[", "mSCAsimu", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
           "\n", "\t\t    ", 
           RowBox[{"{", 
            RowBox[{"day", ",", 
             RowBox[{
              RowBox[{"Dimensions", "[", "mSCAsimu", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"-", "2"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", "\n", 
         "\t\t   ", 
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"ROCScore", "[", 
              RowBox[{
               RowBox[{"mNCAsimu", "[", 
                RowBox[{"[", 
                 RowBox[{";;", ",", "day", ",", "grid"}], "]"}], "]"}], ",", 
               RowBox[{"mNCAobser", "[", 
                RowBox[{"[", 
                 RowBox[{";;", ",", "day", ",", "grid"}], "]"}], "]"}]}], 
              "]"}], ",", "\n", "\t\t\t", 
             RowBox[{"{", 
              RowBox[{"grid", ",", 
               RowBox[{
                RowBox[{"Dimensions", "[", "mNCAsimu", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
           "\n", "\t\t    ", 
           RowBox[{"{", 
            RowBox[{"day", ",", 
             RowBox[{
              RowBox[{"Dimensions", "[", "mNCAsimu", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"-", "2"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", "\n", 
         "\t\t   ", 
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"ROCScore", "[", 
              RowBox[{
               RowBox[{"mORsimu", "[", 
                RowBox[{"[", 
                 RowBox[{";;", ",", "day", ",", "grid"}], "]"}], "]"}], ",", 
               RowBox[{"mORobser", "[", 
                RowBox[{"[", 
                 RowBox[{";;", ",", "day", ",", "grid"}], "]"}], "]"}]}], 
              "]"}], ",", "\n", "\t\t\t", 
             RowBox[{"{", 
              RowBox[{"grid", ",", 
               RowBox[{
                RowBox[{"Dimensions", "[", "mORsimu", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
           "\n", "\t\t    ", 
           RowBox[{"{", 
            RowBox[{"day", ",", 
             RowBox[{
              RowBox[{"Dimensions", "[", "mORsimu", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"-", "2"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", "\n", 
         "\t\t   ", 
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"ROCScore", "[", 
              RowBox[{
               RowBox[{"mWAsimu", "[", 
                RowBox[{"[", 
                 RowBox[{";;", ",", "day", ",", "grid"}], "]"}], "]"}], ",", 
               RowBox[{"mWAobser", "[", 
                RowBox[{"[", 
                 RowBox[{";;", ",", "day", ",", "grid"}], "]"}], "]"}]}], 
              "]"}], ",", "\n", "\t\t\t", 
             RowBox[{"{", 
              RowBox[{"grid", ",", 
               RowBox[{
                RowBox[{"Dimensions", "[", "mWAsimu", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
           "\n", "\t\t    ", 
           RowBox[{"{", 
            RowBox[{"day", ",", 
             RowBox[{
              RowBox[{"Dimensions", "[", "mWAsimu", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"-", "2"}], "]"}], "]"}]}], "}"}]}], "]"}]}], "}"}]}], 
      ";", "\n", "\n", 
      RowBox[{"RegionalDaily", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"ROCScore", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Mean", "[", 
               RowBox[{"Transpose", "[", 
                RowBox[{"Map", "[", 
                 RowBox[{"Transpose", ",", "mSCAsimu"}], "]"}], "]"}], "]"}], 
              "[", 
              RowBox[{"[", 
               RowBox[{";;", ",", "day"}], "]"}], "]"}], ",", "\n", 
             "\t\t\t\t", 
             RowBox[{
              RowBox[{"Mean", "[", 
               RowBox[{"Transpose", "[", 
                RowBox[{"Map", "[", 
                 RowBox[{"Transpose", ",", "mSCAobser"}], "]"}], "]"}], "]"}],
               "[", 
              RowBox[{"[", 
               RowBox[{";;", ",", "day"}], "]"}], "]"}]}], "]"}], ",", "\n", 
           "\t\t\t\t", 
           RowBox[{"{", 
            RowBox[{"day", ",", 
             RowBox[{
              RowBox[{"Dimensions", "[", "mSCAsimu", "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], ",", "\n", 
         "\t\t\t  ", 
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"ROCScore", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Mean", "[", 
               RowBox[{"Transpose", "[", 
                RowBox[{"Map", "[", 
                 RowBox[{"Transpose", ",", "mNCAsimu"}], "]"}], "]"}], "]"}], 
              "[", 
              RowBox[{"[", 
               RowBox[{";;", ",", "day"}], "]"}], "]"}], ",", "\n", 
             "\t\t\t\t", 
             RowBox[{
              RowBox[{"Mean", "[", 
               RowBox[{"Transpose", "[", 
                RowBox[{"Map", "[", 
                 RowBox[{"Transpose", ",", "mNCAobser"}], "]"}], "]"}], "]"}],
               "[", 
              RowBox[{"[", 
               RowBox[{";;", ",", "day"}], "]"}], "]"}]}], "]"}], ",", "\n", 
           "\t\t\t\t", 
           RowBox[{"{", 
            RowBox[{"day", ",", 
             RowBox[{
              RowBox[{"Dimensions", "[", "mNCAsimu", "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], ",", "\n", 
         "              ", 
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"ROCScore", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Mean", "[", 
               RowBox[{"Transpose", "[", 
                RowBox[{"Map", "[", 
                 RowBox[{"Transpose", ",", "mORsimu"}], "]"}], "]"}], "]"}], 
              "[", 
              RowBox[{"[", 
               RowBox[{";;", ",", "day"}], "]"}], "]"}], ",", "\n", 
             "\t\t\t\t", 
             RowBox[{
              RowBox[{"Mean", "[", 
               RowBox[{"Transpose", "[", 
                RowBox[{"Map", "[", 
                 RowBox[{"Transpose", ",", "mORobser"}], "]"}], "]"}], "]"}], 
              "[", 
              RowBox[{"[", 
               RowBox[{";;", ",", "day"}], "]"}], "]"}]}], "]"}], ",", "\n", 
           "\t            ", 
           RowBox[{"{", 
            RowBox[{"day", ",", 
             RowBox[{
              RowBox[{"Dimensions", "[", "mORsimu", "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], ",", "\n", 
         "              ", 
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"ROCScore", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Mean", "[", 
               RowBox[{"Transpose", "[", 
                RowBox[{"Map", "[", 
                 RowBox[{"Transpose", ",", "mWAsimu"}], "]"}], "]"}], "]"}], 
              "[", 
              RowBox[{"[", 
               RowBox[{";;", ",", "day"}], "]"}], "]"}], ",", "\n", 
             "\t\t\t\t", 
             RowBox[{
              RowBox[{"Mean", "[", 
               RowBox[{"Transpose", "[", 
                RowBox[{"Map", "[", 
                 RowBox[{"Transpose", ",", "mWAobser"}], "]"}], "]"}], "]"}], 
              "[", 
              RowBox[{"[", 
               RowBox[{";;", ",", "day"}], "]"}], "]"}]}], "]"}], ",", "\n", 
           "\t            ", 
           RowBox[{"{", 
            RowBox[{"day", ",", 
             RowBox[{
              RowBox[{"Dimensions", "[", "mWAsimu", "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}]}], "}"}]}], 
      ";", "\n", "\t", "\n", 
      RowBox[{"GridInterval", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"imSCAsimu", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}], "\[Equal]", "0"}], ",",
              "0", ",", "\n", "\t\t\t\t", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"ROCScore", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"imSCAsimu", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{";;", ",", "grid"}], "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"imSCAobser", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{";;", ",", "grid"}], "]"}], "]"}]}], "]"}], ",", 
               "\n", "\t\t\t\t\t", 
               RowBox[{"{", 
                RowBox[{"grid", ",", 
                 RowBox[{
                  RowBox[{"Dimensions", "[", 
                   RowBox[{"imSCAobser", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
            "]"}], ",", "\n", "\t\t\t   ", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "imSCAobser", "]"}]}], "}"}]}], "]"}], 
         ",", "\n", "\t\t\t  ", 
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"imNCAsimu", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}], "\[Equal]", "0"}], ",",
              "0", ",", "\n", "\t\t\t\t", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"ROCScore", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"imNCAsimu", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{";;", ",", "grid"}], "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"imNCAobser", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{";;", ",", "grid"}], "]"}], "]"}]}], "]"}], ",", 
               "\n", "\t\t\t\t\t", 
               RowBox[{"{", 
                RowBox[{"grid", ",", 
                 RowBox[{
                  RowBox[{"Dimensions", "[", 
                   RowBox[{"imNCAobser", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
            "]"}], ",", "\n", "\t\t\t   ", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "imNCAobser", "]"}]}], "}"}]}], "]"}], 
         ",", "\n", "\t\t\t  ", 
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"imORsimu", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}], "\[Equal]", "0"}], ",",
              "0", ",", "\n", "\t\t\t\t", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"ROCScore", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"imORsimu", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{";;", ",", "grid"}], "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"imORobser", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{";;", ",", "grid"}], "]"}], "]"}]}], "]"}], ",", 
               "\n", "\t\t\t\t\t", 
               RowBox[{"{", 
                RowBox[{"grid", ",", 
                 RowBox[{
                  RowBox[{"Dimensions", "[", 
                   RowBox[{"imORobser", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
            "]"}], ",", "\n", "\t\t\t   ", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "imORobser", "]"}]}], "}"}]}], "]"}], ",",
          "\n", "\t\t\t  ", 
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"imWAsimu", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}], "\[Equal]", "0"}], ",",
              "0", ",", "\n", "\t\t\t\t", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"ROCScore", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"imWAsimu", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{";;", ",", "grid"}], "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"imWAobser", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{";;", ",", "grid"}], "]"}], "]"}]}], "]"}], ",", 
               "\n", "\t\t\t\t\t", 
               RowBox[{"{", 
                RowBox[{"grid", ",", 
                 RowBox[{
                  RowBox[{"Dimensions", "[", 
                   RowBox[{"imWAobser", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
            "]"}], ",", "\n", "\t\t\t   ", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "imWAobser", "]"}]}], "}"}]}], "]"}]}], 
        "}"}]}], ";", "\n", "\n", 
      RowBox[{"RegionalInterval", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"imSCAsimu", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}], "\[Equal]", "0"}], ",",
              "0", ",", "\n", "\t\t\t\t", 
             RowBox[{"ROCScore", "[", 
              RowBox[{
               RowBox[{"Mean", "[", 
                RowBox[{"Transpose", "[", 
                 RowBox[{"imSCAsimu", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
               RowBox[{"Mean", "[", 
                RowBox[{"Transpose", "[", 
                 RowBox[{"imSCAobser", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], "]"}]}], 
            "]"}], ",", "\n", "\t\t\t   ", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "imSCAobser", "]"}]}], "}"}]}], "]"}], 
         ",", "\n", "\t\t\t  ", 
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"imNCAsimu", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}], "\[Equal]", "0"}], ",",
              "0", ",", "\n", "\t\t\t\t", 
             RowBox[{"ROCScore", "[", 
              RowBox[{
               RowBox[{"Mean", "[", 
                RowBox[{"Transpose", "[", 
                 RowBox[{"imNCAsimu", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
               RowBox[{"Mean", "[", 
                RowBox[{"Transpose", "[", 
                 RowBox[{"imNCAobser", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], "]"}]}], 
            "]"}], ",", "\n", "\t\t\t   ", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "imNCAobser", "]"}]}], "}"}]}], "]"}], 
         ",", "\n", "\t\t\t  ", 
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"imORsimu", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}], "\[Equal]", "0"}], ",",
              "0", ",", "\n", "\t\t\t\t", 
             RowBox[{"ROCScore", "[", 
              RowBox[{
               RowBox[{"Mean", "[", 
                RowBox[{"Transpose", "[", 
                 RowBox[{"imORsimu", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
               RowBox[{"Mean", "[", 
                RowBox[{"Transpose", "[", 
                 RowBox[{"imORobser", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], "]"}]}], 
            "]"}], ",", "\n", "\t\t\t   ", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "imORobser", "]"}]}], "}"}]}], "]"}], ",",
          "\n", "\t\t\t  ", 
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"imWAsimu", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}], "\[Equal]", "0"}], ",",
              "0", ",", "\n", "\t\t\t\t", 
             RowBox[{"ROCScore", "[", 
              RowBox[{
               RowBox[{"Mean", "[", 
                RowBox[{"Transpose", "[", 
                 RowBox[{"imWAsimu", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
               RowBox[{"Mean", "[", 
                RowBox[{"Transpose", "[", 
                 RowBox[{"imWAobser", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], "]"}]}], 
            "]"}], ",", "\n", "\t\t\t   ", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "imWAobser", "]"}]}], "}"}]}], "]"}]}], 
        "}"}]}], ";", "\n", "\t\t\t   ", "\n", 
      RowBox[{"result", "=", 
       RowBox[{"{", 
        RowBox[{
        "GridDaily", ",", "RegionalDaily", ",", "GridInterval", ",", 
         "RegionalInterval"}], "}"}]}], ";", "\n", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{
        "\"\</Users/lambda/Documents/Research/3_S2SEvaluation/Results/ROC/\>\"\
", "<>", "dataset", "<>", "\"\<_ROC.mx\>\""}], ",", "result"}], "]"}]}]}], 
    "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.7172610952541113`*^9, 3.7172611223449802`*^9}, {
   3.717261571506278*^9, 3.717261657245943*^9}, {3.717261696147327*^9, 
   3.7172617813345003`*^9}, {3.717261908438643*^9, 3.717261934236375*^9}, {
   3.717262111535325*^9, 3.7172621576994953`*^9}, 3.717262189706666*^9, {
   3.717264079360442*^9, 3.7172641082928677`*^9}, {3.717264142516197*^9, 
   3.71726422216073*^9}, {3.717264317939464*^9, 3.717264342934778*^9}, {
   3.71726441096797*^9, 3.717264413805118*^9}, {3.717264478491213*^9, 
   3.7172645878396606`*^9}, {3.7172650191838913`*^9, 3.717265038392861*^9}, {
   3.717265764602108*^9, 3.717265771056772*^9}, {3.717271066510188*^9, 
   3.717271069758582*^9}, 3.717271935397588*^9, 3.717272277160787*^9, {
   3.717272690565714*^9, 3.717272713454351*^9}, 3.7173390188372498`*^9, {
   3.7173390683630533`*^9, 3.7173390983387117`*^9}, {3.7173391438236027`*^9, 
   3.71733921847579*^9}, {3.717339544915206*^9, 3.717339547153029*^9}, 
   3.717339815160405*^9, {3.71733986830217*^9, 3.717339868620483*^9}, {
   3.71734013178694*^9, 3.717340143938252*^9}, {3.71734018493043*^9, 
   3.717340244072968*^9}, {3.717340279230398*^9, 3.717340281780361*^9}, {
   3.717340640401989*^9, 3.717340702636799*^9}, {3.7173422161521187`*^9, 
   3.717342216570899*^9}, {3.717342419106058*^9, 3.717342419443102*^9}, 
   3.7173426845658293`*^9, {3.717342729532435*^9, 3.717342839033535*^9}, {
   3.717347820275064*^9, 3.7173478525872297`*^9}, {3.7183158419165697`*^9, 
   3.7183158428276567`*^9}},ExpressionUUID->"219fa6df-7556-4985-a935-\
1add5468b2f1"],

Cell[CellGroupData[{

Cell[BoxData["models"], "Code",
 CellChangeTimes->{{3.717342716683272*^9, 
  3.717342717426085*^9}},ExpressionUUID->"628e86cf-2ca0-4f0a-b714-\
8b0322441c92"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"BoM\"\>", ",", "\<\"CMA\"\>", ",", "\<\"ECCC\"\>", 
   ",", "\<\"ECMWF\"\>", ",", "\<\"HCMR\"\>", ",", "\<\"ISACCNR\"\>", 
   ",", "\<\"JMA\"\>", ",", "\<\"KMA\"\>", ",", "\<\"MeteoFrance\"\>", 
   ",", "\<\"NCEP\"\>", ",", "\<\"UKMO\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.7173427177287693`*^9, 3.717346477221767*^9, 
  3.7173478745087423`*^9, 
  3.7183158483948812`*^9},ExpressionUUID->"4bb9b226-ddf0-47fa-8ca1-\
d18274b8fc23"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"ROCEvaluation", ",", "models"}], "]"}]], "Code",
 CellChangeTimes->{3.71734885699559*^9, 
  3.717348978067802*^9},ExpressionUUID->"1fc26376-dc6b-42fe-92e0-\
4765e8fa3bf9"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{
  3.718315875853956*^9},ExpressionUUID->"7e441749-2a7c-4189-9bf0-\
9685f722e9c1"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"450c0950-1961-475d-983c-ddd02ad2bdbd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GridDaily", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Block", "[", 
        RowBox[{
         RowBox[{"{", "data", "}"}], ",", "\n", "\t", 
         RowBox[{
          RowBox[{"data", "=", 
           RowBox[{"Import", "[", 
            RowBox[{
            "\"\</Users/lambda/Documents/Research/3_S2SEvaluation/Results/ROC/\
\>\"", "<>", "#", "<>", "\"\<_ROC.mx\>\""}], "]"}]}], ";", "\n", "\t", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Mean", "[", 
              RowBox[{"Transpose", "[", "#", "]"}], "]"}], "&"}], ",", 
            RowBox[{"data", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], "]"}], "&"}], ",", 
      "models"}], "]"}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.717346319158333*^9, 3.7173463259965963`*^9}, {
  3.717349863350075*^9, 3.717349884932309*^9}, {3.7173503207435017`*^9, 
  3.717350322268359*^9}, {3.7173503810115833`*^9, 3.717350446026781*^9}, {
  3.7173511871692266`*^9, 
  3.71735118997561*^9}},ExpressionUUID->"4da69e09-9978-4a90-8903-\
325e1eaf3788"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RegionalDaily", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Block", "[", 
        RowBox[{
         RowBox[{"{", "data", "}"}], ",", "\n", "\t", 
         RowBox[{
          RowBox[{"data", "=", 
           RowBox[{"Import", "[", 
            RowBox[{
            "\"\</Users/lambda/Documents/Research/3_S2SEvaluation/Results/ROC/\
\>\"", "<>", "#", "<>", "\"\<_ROC.mx\>\""}], "]"}]}], ";", "\n", "\t", 
          RowBox[{"data", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], "&"}], ",", "models"}], 
     "]"}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.7173505783655853`*^9, 3.717350642931798*^9}, {
  3.717351191495824*^9, 
  3.717351194967174*^9}},ExpressionUUID->"8ce7e1ea-a74b-4974-81d0-\
3350e3e97299"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GridInterval", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"Transpose", ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Block", "[", 
          RowBox[{
           RowBox[{"{", "data", "}"}], ",", "\n", "\t", 
           RowBox[{
            RowBox[{"data", "=", 
             RowBox[{"Import", "[", 
              RowBox[{
              "\"\</Users/lambda/Documents/Research/3_S2SEvaluation/Results/\
ROC/\>\"", "<>", "#", "<>", "\"\<_ROC.mx\>\""}], "]"}]}], ";", "\n", "\t", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Map", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Length", "[", "#", "]"}], ">", "0"}], ",", 
                   RowBox[{"Mean", "[", "#", "]"}], ",", "0"}], "]"}], "&"}], 
                ",", 
                RowBox[{"data", "[", 
                 RowBox[{"[", 
                  RowBox[{"3", ",", "i"}], "]"}], "]"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", 
                RowBox[{
                 RowBox[{"Dimensions", "[", "data", "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}]}]}], "]"}], 
         "&"}], ",", "models"}], "]"}], "]"}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.717350796413657*^9, 3.717350817306245*^9}, {
  3.717350895190755*^9, 3.717350914584928*^9}, {3.7173509790164747`*^9, 
  3.717351050004692*^9}},ExpressionUUID->"c67bc7e3-4fbe-48f3-b431-\
0df30a977802"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RegionalInterval", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"Transpose", ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Block", "[", 
          RowBox[{
           RowBox[{"{", "data", "}"}], ",", "\n", "\t", 
           RowBox[{
            RowBox[{"data", "=", 
             RowBox[{"Import", "[", 
              RowBox[{
              "\"\</Users/lambda/Documents/Research/3_S2SEvaluation/Results/\
ROC/\>\"", "<>", "#", "<>", "\"\<_ROC.mx\>\""}], "]"}]}], ";", "\n", "\t", 
            RowBox[{"data", "[", 
             RowBox[{"[", "4", "]"}], "]"}]}]}], "]"}], "&"}], ",", 
        "models"}], "]"}], "]"}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.717351085644451*^9, 
  3.717351144154241*^9}},ExpressionUUID->"75384e34-d2b3-4537-a1ea-\
f6dfa23b870f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"range", "=", 
   RowBox[{"{", 
    RowBox[{"0.5", ",", "1"}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.7173514616468163`*^9, 3.717351469045656*^9}, {
  3.71735172760618*^9, 
  3.717351727884647*^9}},ExpressionUUID->"3a83eddf-bf4d-4e28-871e-\
13fc1e0acb2e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Dimensions", "[", "GridDaily", "]"}], "\n", 
 RowBox[{"Dimensions", "[", "RegionalDaily", "]"}], "\n", 
 RowBox[{"Dimensions", "[", "GridInterval", "]"}], "\n", 
 RowBox[{"Dimensions", "[", "RegionalInterval", "]"}]}], "Code",
 CellChangeTimes->{{3.7173506447956657`*^9, 3.7173506617947493`*^9}, {
  3.71735117145753*^9, 
  3.717351178248756*^9}},ExpressionUUID->"030065b9-c922-42e2-86dd-\
5aa59acb9b59"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "11"}], "}"}]], "Output",
 CellChangeTimes->{{3.717350649546967*^9, 3.717350662096137*^9}, {
  3.717351178572802*^9, 
  3.717351202111589*^9}},ExpressionUUID->"7c3f7576-3c7d-49c4-9824-\
55f6af1c9a13"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "11"}], "}"}]], "Output",
 CellChangeTimes->{{3.717350649546967*^9, 3.717350662096137*^9}, {
  3.717351178572802*^9, 
  3.717351202145726*^9}},ExpressionUUID->"834bccdf-4643-4cbc-8669-\
7a8eaee9a2d1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "7", ",", "11"}], "}"}]], "Output",
 CellChangeTimes->{{3.717350649546967*^9, 3.717350662096137*^9}, {
  3.717351178572802*^9, 
  3.7173512021781*^9}},ExpressionUUID->"e1e1ab32-4106-4150-9b8c-86c0c7cc8e0b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "7", ",", "11"}], "}"}]], "Output",
 CellChangeTimes->{{3.717350649546967*^9, 3.717350662096137*^9}, {
  3.717351178572802*^9, 
  3.717351202211145*^9}},ExpressionUUID->"0c9babe1-c597-4759-9310-\
363ed2162df9"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"GridDailyDraw", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"GridDaily", "[", 
        RowBox[{"[", "region", "]"}], "]"}], ",", "\n", "\t\t", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"Thickness", "[", "0.005", "]"}]}], "}"}], "&"}], ",", 
          "datasets"}], "]"}]}], ",", "\n", "\t\t", 
       RowBox[{"PlotRange", "\[Rule]", "range"}], ",", "\n", "\t\t", 
       RowBox[{"BaseStyle", "\[Rule]", "40"}], ",", "\n", "\t\t", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", "\n", "\t\t", 
       RowBox[{"ImageSize", "\[Rule]", "800"}], ",", "\n", "\t\t", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Forecast Leading Day\>\"", ",", "\"\<ROC\>\""}], 
         "}"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"region", ",", "4"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"RegionalDailyDraw", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"RegionalDaily", "[", 
        RowBox[{"[", "region", "]"}], "]"}], ",", "\n", "\t\t", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"Thickness", "[", "0.005", "]"}]}], "}"}], "&"}], ",", 
          "datasets"}], "]"}]}], ",", "\n", "\t\t", 
       RowBox[{"PlotRange", "\[Rule]", "range"}], ",", "\n", "\t\t", 
       RowBox[{"BaseStyle", "\[Rule]", "40"}], ",", "\n", "\t\t", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", "\n", "\t\t", 
       RowBox[{"ImageSize", "\[Rule]", "800"}], ",", "\n", "\t\t", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Forecast Leading Day\>\"", ",", "\"\<ROC\>\""}], 
         "}"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"region", ",", "4"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"GridIntervalDraw", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"BarChart", "[", 
      RowBox[{
       RowBox[{"GridInterval", "[", 
        RowBox[{"[", "region", "]"}], "]"}], ",", "\n", "\t", 
       RowBox[{"BaseStyle", "\[Rule]", "40"}], ",", "\n", "\t", 
       RowBox[{"BarSpacing", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "4."}], "}"}]}], ",", "\n", "\t", 
       RowBox[{"ChartStyle", "\[Rule]", 
        RowBox[{"datasets", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "1"}], "]"}], "]"}]}], ",", "\n", "\t", 
       RowBox[{"ChartLabels", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<1d1d\>\"", ",", "\"\<2d2d\>\"", ",", "\"\<4d4d\>\"", ",", 
            "\"\<1w1w\>\"", ",", "\"\<2w2w\>\"", ",", "\"\<3w3w\>\"", ",", 
            "\"\<4w4w\>\""}], "}"}], ",", "None"}], "}"}]}], ",", "\n", "\t", 
       
       RowBox[{"Frame", "\[Rule]", "True"}], ",", "\n", "\t", 
       RowBox[{"PlotRange", " ", "->", " ", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", " ", "range"}], "}"}]}], ",", "\n", "    ", 
       RowBox[{"PlotRangePadding", " ", "->", " ", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", " ", "0"}], "}"}]}], ",", "\n", "    ", 
       RowBox[{"PlotRangeClipping", " ", "->", " ", "True"}], ",", "\n", "\t", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Forecast Interval\>\"", ",", "\"\<ROC\>\""}], "}"}]}], 
       ",", "\n", "\t", 
       RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"region", ",", "4"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"RegionalIntervalDraw", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"BarChart", "[", 
      RowBox[{
       RowBox[{"RegionalInterval", "[", 
        RowBox[{"[", "region", "]"}], "]"}], ",", "\n", "\t", 
       RowBox[{"BaseStyle", "\[Rule]", "40"}], ",", "\n", "\t", 
       RowBox[{"BarSpacing", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "4."}], "}"}]}], ",", "\n", "\t", 
       RowBox[{"ChartStyle", "\[Rule]", 
        RowBox[{"datasets", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "1"}], "]"}], "]"}]}], ",", "\n", "\t", 
       RowBox[{"ChartLabels", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<1d1d\>\"", ",", "\"\<2d2d\>\"", ",", "\"\<4d4d\>\"", ",", 
            "\"\<1w1w\>\"", ",", "\"\<2w2w\>\"", ",", "\"\<3w3w\>\"", ",", 
            "\"\<4w4w\>\""}], "}"}], ",", "None"}], "}"}]}], ",", "\n", "\t", 
       
       RowBox[{"Frame", "\[Rule]", "True"}], ",", "\n", "\t", 
       RowBox[{"PlotRange", " ", "->", " ", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", " ", "range"}], "}"}]}], ",", "\n", "    ", 
       RowBox[{"PlotRangePadding", " ", "->", " ", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", " ", "0"}], "}"}]}], ",", "\n", "    ", 
       RowBox[{"PlotRangeClipping", " ", "->", " ", "True"}], ",", "\n", "\t", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Forecast Interval\>\"", ",", "\"\<ROC\>\""}], "}"}]}], 
       ",", "\n", "\t", 
       RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"region", ",", "4"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"label", "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{
       RowBox[{"table", "[", "pairs_", "]"}], " ", ":=", 
       RowBox[{"TableForm", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", "pairs", "]"}], ",", 
         RowBox[{"TableAlignments", "\[Rule]", "Center"}]}], "]"}]}], ";", 
      "\n", "\t", 
      RowBox[{"SwatchLegend", "[", 
       RowBox[{
        RowBox[{"datasets", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"datasets", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "2"}], "]"}], "]"}], ",", "\n", "\t", 
        RowBox[{"LegendLayout", "\[Rule]", "table"}], ",", "\n", "\t", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"FontSize", "\[Rule]", "50"}], "}"}]}], ",", "\n", "\t", 
        RowBox[{"LegendMarkerSize", "\[Rule]", "50"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"fig", "=", 
   RowBox[{"Labeled", "[", 
    RowBox[{
     RowBox[{"TableForm", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
         "GridDailyDraw", ",", "RegionalDailyDraw", ",", "GridIntervalDraw", 
          ",", "RegionalIntervalDraw"}], "}"}], "]"}], ",", "\n", "\t", 
       RowBox[{"TableHeadings", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"#", ",", 
               RowBox[{"FontSize", "\[Rule]", "50"}]}], "]"}], "&"}], ",", 
            RowBox[{"{", 
             RowBox[{
             "\"\<SCA\>\"", ",", "\"\<NCA\>\"", ",", "\"\<OR\>\"", ",", 
              "\"\<WA\>\""}], "}"}]}], "]"}], ",", "\n", "\t\t", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"#", ",", 
               RowBox[{"FontSize", "\[Rule]", "50"}]}], "]"}], "&"}], ",", 
            RowBox[{"{", 
             RowBox[{
             "\"\<Grid Daily Scale\>\"", ",", "\"\<Regional Daily Scale\>\"", 
              ",", "\"\<Grid Interval Scale\>\"", ",", 
              "\"\<Regional Interval Scale\>\""}], "}"}]}], "]"}]}], "}"}]}], 
       ",", "\n", "\t", 
       RowBox[{"TableAlignments", "\[Rule]", "Center"}]}], "]"}], ",", 
     "label", ",", "Bottom"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\</Users/lambda/Documents/Research/3_S2SEvaluation/Results/fig_ROC.pdf\>\
\"", ",", "fig"}], "]"}], ";"}]}], "Code",
 CellChangeTimes->{{3.717351281517667*^9, 3.7173512911519117`*^9}, {
  3.717351451850397*^9, 3.7173515924115677`*^9}, {3.71735168135942*^9, 
  3.717351709493843*^9}},ExpressionUUID->"bfe9048a-544f-4e34-bc4e-\
bd1a9ed81e6f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"5f25a7db-1617-4725-a408-b3acf3e77fd9"],

Cell["\<\
For a fair comparison across a seamless range of time scales, the \
verification is performed using data averaged over time windows equal in \
length to the forecast lead time. At a lead time of one day, skill is \
greatest in the extratropics around 40-60o latitude, lowest around 20o, and \
has a secondary local maximum close to the equator. The extratropical skill \
at this short range is highest in the winter hemisphere presumably due to the \
higher predictability of winter baroclinic systems.\
\>", "Text",ExpressionUUID->"8cd5e2e9-a800-45da-927b-bd35120f6155"],

Cell["\<\
 defining a consistent and useful distance metric on these aspects\
\>", "Text",ExpressionUUID->"0fcca257-3472-4583-b9ab-c7705cfd2ceb"],

Cell[TextData[{
 "The essence of our approach is as follows. We compute the prediction skill \
at\n",
 StyleBox[" ",
  FontFamily->"Helvetica",
  FontSize->11],
 "a range of lead times, from one day to one month. As the lead time \
increases, we also\n",
 StyleBox[" ",
  FontFamily->"Helvetica",
  FontSize->11],
 "increase the length of the time window over which the data are averaged for\
\n",
 StyleBox[" ",
  FontFamily->"Helvetica",
  FontSize->11],
 "verification. This is intended to capture the fact that we are \
transitioning from\n",
 StyleBox[" ",
  FontFamily->"Helvetica",
  FontSize->11],
 "weather to climate prediction as the lead time increases, and to allow the \
transition to\n",
 StyleBox[" ",
  FontFamily->"Helvetica",
  FontSize->11],
 "occur smoothly. The skill is computed for both total precipitation and \
anomalies, and\n",
 StyleBox[" ",
  FontFamily->"Helvetica",
  FontSize->11],
 "comparison is made with the skill achievable by a persistence forecast of \
the\n",
 StyleBox[" ",
  FontFamily->"Helvetica",
  FontSize->11],
 "precipitation anomalies. For comparison we also evaluate the forecasts at \
varying lead\ntime but with a fixed verification window of 1 day."
}], "Text",
 CellChangeTimes->{{3.716214090409994*^9, 
  3.716214101039338*^9}},ExpressionUUID->"6dd152ab-94f9-4ab3-ac92-\
2c412be69ac5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"/Users/lambda/Documents/Research/3_S2SEvaluation/Results/ROC/\
BoM_ROC.mx\"\>", 
   ",", "\<\"/Users/lambda/Documents/Research/3_S2SEvaluation/Results/ROC/CMA_\
ROC.mx\"\>", 
   ",", "\<\"/Users/lambda/Documents/Research/3_S2SEvaluation/Results/ROC/\
ECCC_ROC.mx\"\>", 
   ",", "\<\"/Users/lambda/Documents/Research/3_S2SEvaluation/Results/ROC/\
ECMWF_ROC.mx\"\>", 
   ",", "\<\"/Users/lambda/Documents/Research/3_S2SEvaluation/Results/ROC/\
HCMR_ROC.mx\"\>", 
   ",", "\<\"/Users/lambda/Documents/Research/3_S2SEvaluation/Results/ROC/\
ISACCNR_ROC.mx\"\>", 
   ",", "\<\"/Users/lambda/Documents/Research/3_S2SEvaluation/Results/ROC/JMA_\
ROC.mx\"\>", 
   ",", "\<\"/Users/lambda/Documents/Research/3_S2SEvaluation/Results/ROC/KMA_\
ROC.mx\"\>", 
   ",", "\<\"/Users/lambda/Documents/Research/3_S2SEvaluation/Results/ROC/\
MeteoFrance_ROC.mx\"\>", 
   ",", "\<\"/Users/lambda/Documents/Research/3_S2SEvaluation/Results/ROC/\
NCEP_ROC.mx\"\>", 
   ",", "\<\"/Users/lambda/Documents/Research/3_S2SEvaluation/Results/ROC/\
UKMO_ROC.mx\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.717346299777079*^9, 3.7173478671577187`*^9, 
  3.717349524463719*^9},ExpressionUUID->"ca261aaa-f37a-4d71-af33-\
1859322c3a01"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"54fa6fea-71e5-42c7-97e8-ea60454954ff"],

Cell["LinearROC", "Section",
 CellChangeTimes->{{3.715625787110599*^9, 3.715625788499967*^9}, {
  3.7156282146572943`*^9, 3.715628217953314*^9}, {3.716657826710766*^9, 
  3.71665782875006*^9}, {3.717352087161462*^9, 
  3.7173520908315887`*^9}},ExpressionUUID->"1331d563-2efa-45c6-9177-\
60bc723ac2e7"],

Cell[CellGroupData[{

Cell["ROC ", "Subchapter",
 CellChangeTimes->{{3.71691673294831*^9, 
  3.716916733706813*^9}},ExpressionUUID->"a7155f44-dfb4-45be-8baa-\
0567d849ffcc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ROCPoint", "[", 
   RowBox[{"simu_", ",", "obser_", ",", "tercile_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "point", ",", "bisimu", ",", "biobser", ",", "FalsePositiveRate", ",", 
      "TruePositiveRate"}], "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"point", "=", 
      RowBox[{"Quantile", "[", 
       RowBox[{"obser", ",", "tercile"}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"bisimu", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"#", ">", "point"}], ",", "1", ",", "0"}], "]"}], "&"}], 
        ",", "simu"}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"biobser", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"#", ">", "point"}], ",", "1", ",", "0"}], "]"}], "&"}], 
        ",", "obser"}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"FalsePositiveRate", "=", 
      RowBox[{
       RowBox[{"Total", "[", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"And", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "1"}], ",", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "0"}]}], "]"}], 
             ",", "1.", ",", "0."}], "]"}], "&"}], ",", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{"bisimu", ",", "biobser"}], "}"}], "]"}]}], "]"}], "]"}], 
       "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Length", "[", "biobser", "]"}], "-", 
         RowBox[{"Total", "[", "biobser", "]"}]}], ")"}]}]}], ";", "\n", 
     "\t\t", 
     RowBox[{"TruePositiveRate", "=", 
      RowBox[{
       RowBox[{"Total", "[", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"And", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "1"}], ",", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "1"}]}], "]"}], 
             ",", "1.", ",", "0."}], "]"}], "&"}], ",", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{"bisimu", ",", "biobser"}], "}"}], "]"}]}], "]"}], "]"}], 
       "/", 
       RowBox[{"Total", "[", "biobser", "]"}]}]}], ";", "\n", "\t\t", 
     RowBox[{"{", 
      RowBox[{"FalsePositiveRate", ",", "TruePositiveRate"}], "}"}]}]}], 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.716917329368575*^9, 3.716917410079918*^9}, {
   3.716917670125122*^9, 3.716917688737439*^9}, 3.7169177222534313`*^9, {
   3.71691776834295*^9, 3.716917770198345*^9}, {3.716918175793373*^9, 
   3.716918180359756*^9}, {3.716918220694716*^9, 3.716918328296632*^9}, 
   3.7169184722892847`*^9, {3.716918586498473*^9, 3.7169186216593523`*^9}, {
   3.716918701346843*^9, 3.71691871347023*^9}, {3.716918800340975*^9, 
   3.7169188180843763`*^9}, {3.716918856296802*^9, 3.716918901934931*^9}, {
   3.716919100306055*^9, 3.716919226504942*^9}, {3.716919909140963*^9, 
   3.716919929162407*^9}, {3.716919964251376*^9, 3.7169199677128487`*^9}, {
   3.716920203469982*^9, 3.716920204284493*^9}, {3.716920276780294*^9, 
   3.716920293922621*^9}, {3.7169204245847797`*^9, 3.716920450918282*^9}, {
   3.716920630762258*^9, 3.716920636264254*^9}, {3.7169214211192303`*^9, 
   3.716921422468564*^9}, {3.716923619246188*^9, 3.7169236350778112`*^9}, {
   3.7173370233011312`*^9, 
   3.717337031043146*^9}},ExpressionUUID->"764965d5-0c79-4478-8726-\
056f31309434"],

Cell[BoxData[
 RowBox[{
  RowBox[{"LinearROCScore", "[", 
   RowBox[{"simu_", ",", "obser_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"origin", ",", "final", ",", "l", ",", "model", ",", "nsimu"}], 
     "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"model", "=", 
      RowBox[{"LinearModelFit", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{"simu", ",", "obser"}], "}"}], "]"}], ",", "xx", ",", 
        "xx"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"nsimu", "=", 
      RowBox[{"Map", "[", 
       RowBox[{"model", ",", "simu"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"origin", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Prepend", "[", 
         RowBox[{
          RowBox[{"ROCPoint", "[", 
           RowBox[{"nsimu", ",", "obser", ",", "tercile"}], "]"}], ",", 
          "tercile"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"tercile", ",", "0.01", ",", "0.99", ",", "0.02"}], "}"}]}], 
       "]"}]}], ";", "\n", "\t", 
     RowBox[{"final", "=", 
      RowBox[{"Prepend", "[", 
       RowBox[{
        RowBox[{"Append", "[", 
         RowBox[{
          RowBox[{"Sort", "[", 
           RowBox[{
            RowBox[{"DeleteDuplicates", "[", 
             RowBox[{"origin", "[", 
              RowBox[{"[", 
               RowBox[{";;", ",", 
                RowBox[{"2", ";;", "3"}]}], "]"}], "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"#2", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ">", 
              RowBox[{"#1", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"l", "=", 
      RowBox[{"Length", "[", "final", "]"}]}], ";", "\n", "\t", 
     RowBox[{"Total", "[", 
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"final", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"2", ";;", "l"}], ",", "1"}], "]"}], "]"}], "-", 
          RowBox[{"final", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"1", ";;", 
              RowBox[{"l", "-", "1"}]}], ",", "1"}], "]"}], "]"}]}], ")"}], 
        "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"final", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"2", ";;", "l"}], ",", "2"}], "]"}], "]"}], "+", 
           RowBox[{"final", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"1", ";;", 
               RowBox[{"l", "-", "1"}]}], ",", "2"}], "]"}], "]"}]}], ")"}], 
         "/", "2."}]}], "]"}], "]"}]}]}], "]"}]}]], "Code",
 CellChangeTimes->{{3.716923624244913*^9, 3.716923821429144*^9}, {
   3.716924091963422*^9, 3.7169241132028637`*^9}, {3.716924154772696*^9, 
   3.716924155819018*^9}, {3.7169241924969883`*^9, 3.716924536913549*^9}, {
   3.716924622297467*^9, 3.716924684509676*^9}, {3.7169248164332542`*^9, 
   3.716924847432054*^9}, {3.716924972244879*^9, 3.716925000460414*^9}, {
   3.716925370891469*^9, 3.716925401082692*^9}, {3.716925432193975*^9, 
   3.716925508598096*^9}, {3.716926287059024*^9, 3.716926290209504*^9}, {
   3.716926327207059*^9, 3.716926457234294*^9}, {3.7171624392080603`*^9, 
   3.717162465214031*^9}, {3.71716261744226*^9, 3.717162623017297*^9}, 
   3.7171681765701933`*^9, {3.7173370662670918`*^9, 3.7173371152399406`*^9}, {
   3.717337271035181*^9, 3.717337275001698*^9}, {3.7173373258418293`*^9, 
   3.717337326743484*^9}, {3.717337359895355*^9, 3.717337399397131*^9}, {
   3.717337433132181*^9, 3.717337436866412*^9}, {3.717337521368977*^9, 
   3.7173375395995703`*^9}, {3.7173375921421547`*^9, 
   3.7173375922936983`*^9}, {3.7173378178953667`*^9, 3.717337819030301*^9}, {
   3.717337910907193*^9, 3.717338002638853*^9}, {3.717346442426626*^9, 
   3.7173464455769444`*^9}, {3.717351960942821*^9, 3.717351985854113*^9}, {
   3.717352024805337*^9, 3.7173520316987963`*^9}, {3.717352079681095*^9, 
   3.717352095448783*^9}},ExpressionUUID->"2d5983d9-16d7-46d0-a54c-\
e667cdf8f2e7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ROCDraw", "[", 
   RowBox[{"simu_", ",", "obser_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"origin", ",", "final"}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"origin", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Prepend", "[", 
         RowBox[{
          RowBox[{"ROCPoint", "[", 
           RowBox[{"simu", ",", "obser", ",", "tercile"}], "]"}], ",", 
          "tercile"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"tercile", ",", "0.01", ",", "0.99", ",", "0.05"}], "}"}]}], 
       "]"}]}], ";", "\n", "\t", 
     RowBox[{"final", "=", 
      RowBox[{"Sort", "[", 
       RowBox[{
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"Append", "[", 
          RowBox[{
           RowBox[{"Prepend", "[", 
            RowBox[{"origin", ",", 
             RowBox[{"{", 
              RowBox[{"0.", ",", "0.", ",", "0."}], "}"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.", ",", "1.", ",", "1."}], "}"}]}], "]"}], "]"}], ",", 
        
        RowBox[{
         RowBox[{
          RowBox[{"#2", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ">", 
          RowBox[{"#1", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}]}], ";", "\n", 
     "\t", 
     RowBox[{"Labeled", "[", 
      RowBox[{
       RowBox[{"Show", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Plot", "[", 
           RowBox[{"x", ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"Dashed", ",", "Gray"}], "}"}]}], ",", "\n", "\t\t\t\t", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", "\n", "\t\t\t\t", 
            RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", "\n", 
            "\t\t\t\t", 
            RowBox[{"ImageSize", "\[Rule]", "400"}], ",", "\n", "\t\t\t\t", 
            RowBox[{"BaseStyle", "\[Rule]", "15"}], ",", "\n", "\t\t\t\t", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", "\n", 
            "\t\t\t\t", 
            RowBox[{"FrameLabel", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<False Alarm Ratio\>\"", ",", 
               "\"\<Probability of Detection\>\""}], "}"}]}]}], "]"}], ",", 
          "\n", "\t\t\t", 
          RowBox[{"ListLinePlot", "[", 
           RowBox[{
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Labeled", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "&"}], ",", 
              "final"}], "]"}], ",", "\n", "\t\t\t\t", 
            RowBox[{"PlotMarkers", "\[Rule]", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<*\>\"", ",", 
               RowBox[{"FontSize", "\[Rule]", "34"}]}], "]"}]}]}], "]"}]}], 
         "}"}], "]"}], ",", "\n", "\t\t\t", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"\"\<ROC Score=\>\"", "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{"Round", "[", 
            RowBox[{
             RowBox[{"LinearROCScore", "[", 
              RowBox[{"simu", ",", "obser"}], "]"}], ",", "0.001"}], "]"}], 
           "]"}]}], ",", "\n", "\t\t\t\t", 
         RowBox[{"FontSize", "\[Rule]", "15"}]}], "]"}], ",", "Top"}], 
      "]"}]}]}], "]"}]}]], "Code",
 CellChangeTimes->{{3.716923624244913*^9, 3.716923821429144*^9}, {
   3.716924091963422*^9, 3.7169241132028637`*^9}, {3.716924154772696*^9, 
   3.716924155819018*^9}, {3.7169241924969883`*^9, 3.716924536913549*^9}, {
   3.716924622297467*^9, 3.716924684509676*^9}, {3.7169248164332542`*^9, 
   3.716924847432054*^9}, {3.716924972244879*^9, 3.716925000460414*^9}, {
   3.716925370891469*^9, 3.716925401082692*^9}, {3.716925432193975*^9, 
   3.716925508598096*^9}, {3.716926287059024*^9, 3.716926290209504*^9}, {
   3.716926327207059*^9, 3.716926457234294*^9}, {3.7171624392080603`*^9, 
   3.717162465214031*^9}, {3.71716261744226*^9, 3.717162623017297*^9}, 
   3.7171681765701933`*^9, {3.7173370662670918`*^9, 3.717337067156619*^9}, {
   3.7173371225212097`*^9, 3.7173371523917427`*^9}, {3.7173521028186693`*^9, 
   3.7173521064041862`*^9}},ExpressionUUID->"42fc1842-333b-48c7-9120-\
ffbdbbe2d11d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ROCDraw", "[", 
  RowBox[{
   RowBox[{"RandomReal", "[", 
    RowBox[{"0.5", ",", "3000"}], "]"}], ",", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"0.5", ",", "3000"}], "]"}]}], "]"}]], "Code",
 CellChangeTimes->{{3.7173372186040773`*^9, 3.7173372316025677`*^9}, {
  3.717337279115757*^9, 3.717337279890092*^9}, {3.717337313821084*^9, 
  3.717337314095693*^9}, {3.717337408215464*^9, 3.71733750416109*^9}, {
  3.7173380781215277`*^9, 3.717338083155036*^9}, {3.7173381250795393`*^9, 
  3.717338126569426*^9}, {3.7173384086608763`*^9, 3.717338442093378*^9}, {
  3.7173385708382177`*^9, 
  3.7173385722010508`*^9}},ExpressionUUID->"5e2f08ba-3702-4b19-ab88-\
d600c658f075"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}], 
           GrayLevel[0.5]], 
          LineBox[CompressedData["
1:eJxFxW0w03EcAPCNdZRrjMr9adxE5SlOUlKpuMhDneHk8nRCWk/InXR1WrdJ
nua6nZTnh5R2jGyuMnHsdDnPo1GzMUtj83RndnRZ9cL39+JzH0r8XWqiHg6H
C/7n/wGJypGu+fAz2xN8LFJkmLv39kcrS8paMV84cED8vhwLgyMStB3PsQR4
yuWpTwGWDlftvZydizFgumHroWcYG74SWc1dWa2DjXT0KD8rLmwXsqTsyePB
GYOe3iVrH2FzHkmKx3fCbXKf/qFT3XA3rdwyUi2ENQdPGzfe/gLrbXBMLO36
YA9dXFtoUz/cz3Af7HUYgq2LVBsNS8OwSiuTjruOwnUL7X3EQhFMJL9ZVijG
4Pwb/KQq22/w+lmOIjlLDKe7CXn7eiZgWZMwb4TyHf5NGyu1f/ADdjxnsJXU
LoH9aijXW8ylcAY51mYmSgY7qcONxMHTsJnxiqFwE03oLOUeKJuBb7q3T+4M
lMOci/FVn9fRGpWFyVzxLMwP9dNn+yrgLH9mJW8OTZkKmKhl/oRPHmewMbc5
OMpqaAMvQmv6CuQp9F9wCSEmnWqrhM2k/Bo9IXrHI3qYZ+o8jGuI4cpNF+C0
V9wC0250h2OOIemOCiYFpDk9IaphifOwKFOAbq7wtlXELMLRXA8SeQv9mFlN
l7xbghuV5FJi0DKcU86Mk15CJ1AX7ZpC0PsFgubgCHQu62pvfjw62ePl6q5M
tA1jj79BPXrrxMPd4rfoycXZ0XoOuiiiNfpCC1rnQL3HFKAlI6wKfRH6Q7b2
mmgczfaKta+dQAe+PsI7L0V/uj/wlT6PLnY+xgpRo1PlZWGUZfThoFuyrjU0
AT9WV6RFT/O9aHGbaAGt1sX1D/qFtZFGp0P/BaO4ekM=
           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$9878#1"]& ]}}, {}, {}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.019444444444444445`], 
          RGBColor[0.65, 0., 0.], 
          AbsoluteThickness[1.6], FontFamily -> "Baskerville"], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQjQ7Ecw6K5RxcZn/vLgistZ81EwR22ldzvlXdMv2A
ff/0F9YiKYftxTPnMHw9esT+0/7zUe8LTtgbzT1aInb5pL3f33nRj66ctw/4
tcT/15Lz9tunHd0lL3PZ3hgMLtu3MHzctOvmVftpYHDNfvWa7v2vlt+0V7C+
5BAhe8t+wW6DA5/S7ti3BLokFFTfsZ/v9RWI7ttn5s11UeV+YC+33iTx6LOH
9rnuk39rnXloH8LsYdoQ8tj+/elk7aa2x/a/Xroc3b7jib3zj6Nn6vc9sQ+M
c67kffrU/h/P73bF3Gf20/N/Tsv/+cyeoXnNvB/6L+zP8E7ScMl4ab9S2czb
Y/FLe6n1050XfnxlX/m06cTaf6/sxWNLLrqKv7U/LRTkI7fujb39y8l2Lye/
s1/+/dqGSM939pBQ+4BBbw/Tvftx5nt7AKO8q1Q=
          "]]}}, {{
         Directive[
          PointSize[0.019444444444444445`], 
          RGBColor[0.65, 0., 0.], 
          AbsoluteThickness[1.6], FontFamily -> "Baskerville"], 
         GeometricTransformationBox[
          InsetBox[
           BoxData[
            FormBox[
             StyleBox["\"*\"", FontSize -> 34, StripOnInput -> False], 
             TraditionalForm]], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGAQA2JGIGZiwATiOQfFcg4us793FwTW2s+aCQI77as536pu
mX7Avn/6C2uRlMP24plzGL4ePWL/af/5qPcFJ+yN5h4tEbt80t7v77zoR1fO
2wf8WuL/a8l5++3Tju6Sl7lsbwwGl+1bGD5u2nXzqv00MLhmv3pN9/5Xy2/a
K1hfcoiQvWW/YLfBgU9pd+xbAl0SCqrv2M/3+gpE9+0z8+a6qHI/sJdbb5J4
9NlD+1z3yb+1zjy0D2H2MG0IeWz//nSydlPbY/tfL12Obt/xxN75x9Ez9fue
2AfGOVfyPn1q/4/nd7ti7jP76fk/p+X/fGbP0Lxm3g/9F/ZneCdpuGS8tF+p
bObtsfilvdT66c4LP76yr3zadGLtv1f24rElF13F39qfFgrykVv3xt7+5WS7
l5Pf2S//fm1DpOc7e0iofcCgt4fp3v048709AK2cq1Y=
          "]]}, {}}, {
        TagBox[{
          Opacity[0.], {
           PointBox[{0., 0.}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$10503, {1}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.044444444444444446`, 0.058333333333333334`}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$10503, {2}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.1, 0.12962962962962962`}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$10503, {3}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.1514916698953894, 0.162291169451074}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$10503, {4}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.19094650205761315`, 0.2017543859649123}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$10503, {5}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.24868421052631579`, 0.24722222222222223`}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$10503, {6}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.29859154929577464`, 0.3}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$10503, {7}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.3414141414141414, 0.3529411764705882}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$10503, {8}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.40087383943200433`, 0.4080410607356715}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$10503, {9}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.4437834622248662, 0.4450341167551175}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$10503, {10}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.4993464052287581, 0.501360544217687}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$10503, {11}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.5594202898550724, 0.5561728395061728}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$10503, {12}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.6040650406504064, 0.6101694915254238}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$10503, {13}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.6475485661424607, 0.6482542991141219}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$10503, {14}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.6842105263157895, 0.7008216529724505}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$10503, {15}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.717948717948718, 0.7558558558558559}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$10503, {16}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.7939778129952457, 0.801181933305192}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$10503, {17}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.841995841995842, 0.8435887256847955}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$10503, {18}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.9090909090909091, 0.8962546816479401}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$10503, {19}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{0.9555555555555556, 0.94645390070922}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$10503, {20}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{1., 1.}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$10503, {21}}]& ], 
        TagBox[{
          Opacity[0.], {
           PointBox[{1., 0.9875420875420876}]}}, 
         Annotation[#, {{Labeled}, Charting`Private`Tag$10503, {
           22}}]& ]}}, {{{{}, {}}, {{}, {{
           Opacity[0], 
           TagBox[
            TooltipBox[
             PointBox[{0., 0.}], 
             PaneBox[
              StyleBox[
              "0.`", {FontFamily -> "Baskerville"}, StripOnInput -> False]]], 
            Annotation[#, 
             Pane[
              Style[0., {FontFamily -> "Baskerville"}]], "Tooltip"]& ]}, 
          InsetBox[
           FormBox[
            PaneBox[
             StyleBox[
             "0.9600000000000001`", {FontFamily -> "Baskerville"}, 
              StripOnInput -> False]], TraditionalForm], 
           
           Offset[{2, 0}, {0.044444444444444446`, 
            0.058333333333333334`}], {-0.9620000000000001, 
           0.9620000000000001}], 
          InsetBox[
           FormBox[
            PaneBox[
             StyleBox[
             "0.91`", {FontFamily -> "Baskerville"}, StripOnInput -> False]], 
            TraditionalForm], 
           Offset[{2, 0}, {0.1, 0.12962962962962962`}], {-0.9620000000000001, 
           0.9620000000000001}], 
          InsetBox[
           FormBox[
            PaneBox[
             StyleBox[
             "0.8600000000000001`", {FontFamily -> "Baskerville"}, 
              StripOnInput -> False]], TraditionalForm], 
           Offset[{-2, -2}, {0.1514916698953894, 0.162291169451074}], {
           0.9620000000000001, -0.9620000000000001}], 
          InsetBox[
           FormBox[
            PaneBox[
             StyleBox[
             "0.81`", {FontFamily -> "Baskerville"}, StripOnInput -> False]], 
            TraditionalForm], 
           
           Offset[{2, 0}, {0.19094650205761315`, 
            0.2017543859649123}], {-0.9620000000000001, 0.9620000000000001}], 
          
          InsetBox[
           FormBox[
            PaneBox[
             StyleBox[
             "0.76`", {FontFamily -> "Baskerville"}, StripOnInput -> False]], 
            TraditionalForm], 
           Offset[{-2, -2}, {0.24868421052631579`, 0.24722222222222223`}], {
           0.9620000000000001, -0.9620000000000001}], 
          InsetBox[
           FormBox[
            PaneBox[
             StyleBox[
             "0.7100000000000001`", {FontFamily -> "Baskerville"}, 
              StripOnInput -> False]], TraditionalForm], 
           Offset[{-2, -2}, {0.29859154929577464`, 0.3}], {
           0.9620000000000001, -0.9620000000000001}], 
          InsetBox[
           FormBox[
            PaneBox[
             StyleBox[
             "0.66`", {FontFamily -> "Baskerville"}, StripOnInput -> False]], 
            TraditionalForm], 
           Offset[{-2, -2}, {0.3414141414141414, 0.3529411764705882}], {
           0.9620000000000001, -0.9620000000000001}], 
          InsetBox[
           FormBox[
            PaneBox[
             StyleBox[
             "0.6100000000000001`", {FontFamily -> "Baskerville"}, 
              StripOnInput -> False]], TraditionalForm], 
           Offset[{-2, -2}, {0.40087383943200433`, 0.4080410607356715}], {
           0.9620000000000001, -0.9620000000000001}], 
          InsetBox[
           FormBox[
            PaneBox[
             StyleBox[
             "0.56`", {FontFamily -> "Baskerville"}, StripOnInput -> False]], 
            TraditionalForm], 
           
           Offset[{2, 0}, {0.4437834622248662, 
            0.4450341167551175}], {-0.9620000000000001, 0.9620000000000001}], 
          
          InsetBox[
           FormBox[
            PaneBox[
             StyleBox[
             "0.51`", {FontFamily -> "Baskerville"}, StripOnInput -> False]], 
            TraditionalForm], 
           Offset[{-2, -2}, {0.4993464052287581, 0.501360544217687}], {
           0.9620000000000001, -0.9620000000000001}], 
          InsetBox[
           FormBox[
            PaneBox[
             StyleBox[
             "0.46`", {FontFamily -> "Baskerville"}, StripOnInput -> False]], 
            TraditionalForm], 
           Offset[{-2, -2}, {0.5594202898550724, 0.5561728395061728}], {
           0.9620000000000001, -0.9620000000000001}], 
          InsetBox[
           FormBox[
            PaneBox[
             StyleBox[
             "0.41000000000000003`", {FontFamily -> "Baskerville"}, 
              StripOnInput -> False]], TraditionalForm], 
           Offset[{-2, -2}, {0.6040650406504064, 0.6101694915254238}], {
           0.9620000000000001, -0.9620000000000001}], 
          InsetBox[
           FormBox[
            PaneBox[
             StyleBox[
             "0.36000000000000004`", {FontFamily -> "Baskerville"}, 
              StripOnInput -> False]], TraditionalForm], 
           
           Offset[{2, 0}, {0.6475485661424607, 
            0.6482542991141219}], {-0.9620000000000001, 0.9620000000000001}], 
          
          InsetBox[
           FormBox[
            PaneBox[
             StyleBox[
             "0.31000000000000005`", {FontFamily -> "Baskerville"}, 
              StripOnInput -> False]], TraditionalForm], 
           Offset[{-2, -2}, {0.6842105263157895, 0.7008216529724505}], {
           0.9620000000000001, -0.9620000000000001}], 
          InsetBox[
           FormBox[
            PaneBox[
             StyleBox[
             "0.26`", {FontFamily -> "Baskerville"}, StripOnInput -> False]], 
            TraditionalForm], 
           Offset[{-2, -2}, {0.717948717948718, 0.7558558558558559}], {
           0.9620000000000001, -0.9620000000000001}], 
          InsetBox[
           FormBox[
            PaneBox[
             StyleBox[
             "0.21000000000000002`", {FontFamily -> "Baskerville"}, 
              StripOnInput -> False]], TraditionalForm], 
           Offset[{-2, -2}, {0.7939778129952457, 0.801181933305192}], {
           0.9620000000000001, -0.9620000000000001}], 
          InsetBox[
           FormBox[
            PaneBox[
             StyleBox[
             "0.16000000000000003`", {FontFamily -> "Baskerville"}, 
              StripOnInput -> False]], TraditionalForm], 
           Offset[{-2, -2}, {0.841995841995842, 0.8435887256847955}], {
           0.9620000000000001, -0.9620000000000001}], 
          InsetBox[
           FormBox[
            PaneBox[
             StyleBox[
             "0.11`", {FontFamily -> "Baskerville"}, StripOnInput -> False]], 
            TraditionalForm], 
           Offset[{-2, -2}, {0.9090909090909091, 0.8962546816479401}], {
           0.9620000000000001, -0.9620000000000001}], 
          InsetBox[
           FormBox[
            PaneBox[
             StyleBox[
             "0.060000000000000005`", {FontFamily -> "Baskerville"}, 
              StripOnInput -> False]], TraditionalForm], 
           Offset[{-2, -2}, {0.9555555555555556, 0.94645390070922}], {
           0.9620000000000001, -0.9620000000000001}], 
          InsetBox[
           FormBox[
            PaneBox[
             StyleBox[
             "1.`", {FontFamily -> "Baskerville"}, StripOnInput -> False]], 
            TraditionalForm], 
           
           Offset[{2, -2}, {1., 
            1.}], {-0.9620000000000001, -0.9620000000000001}], 
          InsetBox[
           FormBox[
            PaneBox[
             StyleBox[
             "0.01`", {FontFamily -> "Baskerville"}, StripOnInput -> False]], 
            TraditionalForm], 
           Offset[{2, 0}, {1., 0.9875420875420876}], {-0.9620000000000001, 
           0.9620000000000001}]}}}, {{{}}, {{}}}}, {}, {}, {}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, BaseStyle -> 15, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox["\"Probability of Detection\"", TraditionalForm], None}, {
        FormBox["\"False Alarm Ratio\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     LabelStyle -> {FontFamily -> "Baskerville"}, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 1}, {0, 1}}, 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],StyleBox[
   "\"ROC Score=0.5\"", FontSize -> 15, StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {2, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Top"}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.71733723255298*^9, 3.717337280209193*^9, {3.7173373143123817`*^9, 
   3.717337330786834*^9}, {3.7173374034320107`*^9, 3.7173375044621468`*^9}, 
   3.7173375433037663`*^9, {3.7173380838534317`*^9, 3.7173381345047913`*^9}, {
   3.7173382553988867`*^9, 3.717338259238995*^9}, {3.717338368441325*^9, 
   3.7173383750968437`*^9}, {3.717338406991797*^9, 3.717338445858108*^9}, {
   3.717338569543133*^9, 3.7173385810238323`*^9}, 3.717346455061668*^9, {
   3.717351225145499*^9, 3.7173512337989902`*^9}, {3.7173520117069607`*^9, 
   3.717352051539875*^9}, {3.71735210976271*^9, 3.717352131392416*^9}, 
   3.7173715168191833`*^9},ExpressionUUID->"1249fce4-ef66-4ff2-b6b0-\
5ca52d977ebe"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"435b5f0c-3dec-471d-87dd-9054bcabd60e"],

Cell[CellGroupData[{

Cell["Evaluation", "Subchapter",
 CellChangeTimes->{{3.716927238743927*^9, 3.716927245559847*^9}, {
  3.717272724935122*^9, 
  3.717272726494026*^9}},ExpressionUUID->"f1dd7c75-ed12-4c06-abb3-\
8180c26dcf7e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"LinearROCEvaluation", "[", "dataset_", "]"}], ":=", "\n", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "result", ",", "\n", "\t   ", "SCAsimu", ",", "NCAsimu", ",", "ORsimu", 
       ",", "WAsimu", ",", "\n", "\t   ", "SCAobser", ",", "NCAobser", ",", 
       "ORobser", ",", "WAobser", ",", "\n", "\t   ", "mSCAsimu", ",", 
       "mNCAsimu", ",", "mORsimu", ",", "mWAsimu", ",", "\n", "\t   ", 
       "mSCAobser", ",", "mNCAobser", ",", "mORobser", ",", "mWAobser", ",", 
       "\n", "\t   ", "iSCAsimu", ",", "iSCAobser", ",", "iNCAsimu", ",", 
       "iNCAobser", ",", "\n", "\t   ", "imSCAsimu", ",", "imNCAsimu", ",", 
       "imORsimu", ",", "imWAsimu", ",", "\n", "\t   ", "imSCAobser", ",", 
       "imNCAobser", ",", "imORobser", ",", "imWAobser", ",", "\n", "\t   ", 
       "iORsimu", ",", "iORobser", ",", "iWAsimu", ",", "iWAobser", ",", "\n",
        "\t   ", "GridDaily", ",", "GridInterval", ",", "RegionalDaily", ",", 
       "RegionalInterval", ",", "\n", "\t   ", "int"}], "}"}], ",", "\n", 
     "\t", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"SCAsimu", ",", "NCAsimu", ",", "ORsimu", ",", "WAsimu"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "SCAobser", ",", "NCAobser", ",", "ORobser", ",", "WAobser"}], 
            "}"}]}], "}"}], ",", "\n", "\t ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "iSCAsimu", ",", "iNCAsimu", ",", "iORsimu", ",", "iWAsimu"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "iSCAobser", ",", "iNCAobser", ",", "iORobser", ",", "iWAobser"}],
             "}"}]}], "}"}]}], "}"}], "=", "\n", "\t ", 
       RowBox[{"Import", "[", 
        RowBox[{
        "main", "<>", "\"\<Data/\>\"", "<>", "dataset", "<>", "\"\</\>\"", "<>",
          "dataset", "<>", "\"\<_dg.mx\>\""}], "]"}]}], ";", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"mSCAsimu", ",", "mNCAsimu", ",", "mORsimu", ",", "mWAsimu"}],
         "}"}], "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"#", ",", "1"}], "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"SCAsimu", ",", "NCAsimu", ",", "ORsimu", ",", "WAsimu"}], 
          "}"}]}], "]"}]}], ";", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "mSCAobser", ",", "mNCAobser", ",", "mORobser", ",", "mWAobser"}], 
        "}"}], "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{"#", ",", 
              RowBox[{
               RowBox[{"Dimensions", "[", "SCAsimu", "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", "1"}], "]"}], 
          "&"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "SCAobser", ",", "NCAobser", ",", "ORobser", ",", "WAobser"}], 
          "}"}]}], "]"}]}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "imSCAsimu", ",", "imNCAsimu", ",", "imORsimu", ",", "imWAsimu"}], 
        "}"}], "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "#", "]"}], "\[Equal]", "0"}], ",", 
               "0", ",", 
               RowBox[{"Flatten", "[", 
                RowBox[{"#", ",", "1"}], "]"}]}], "]"}], "&"}], ",", "#"}], 
           "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "iSCAsimu", ",", "iNCAsimu", ",", "iORsimu", ",", "iWAsimu"}], 
          "}"}]}], "]"}]}], ";", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "imSCAobser", ",", "imNCAobser", ",", "imORobser", ",", "imWAobser"}],
         "}"}], "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "#", "]"}], "\[Equal]", "0"}], ",", 
               "0", ",", 
               RowBox[{"Flatten", "[", 
                RowBox[{
                 RowBox[{"Table", "[", 
                  RowBox[{"#", ",", 
                   RowBox[{
                    RowBox[{"Dimensions", "[", 
                    RowBox[{"iSCAsimu", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", "1"}], 
                "]"}]}], "]"}], "&"}], ",", "#"}], "]"}], "&"}], ",", "\n", 
         "\t", 
         RowBox[{"{", 
          RowBox[{
          "iSCAobser", ",", "iNCAobser", ",", "iORobser", ",", "iWAobser"}], 
          "}"}]}], "]"}]}], ";", "\n", "\t", "\n", 
      RowBox[{"GridDaily", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"LinearROCScore", "[", 
              RowBox[{
               RowBox[{"mSCAsimu", "[", 
                RowBox[{"[", 
                 RowBox[{";;", ",", "day", ",", "grid"}], "]"}], "]"}], ",", 
               RowBox[{"mSCAobser", "[", 
                RowBox[{"[", 
                 RowBox[{";;", ",", "day", ",", "grid"}], "]"}], "]"}]}], 
              "]"}], ",", "\n", "\t\t\t", 
             RowBox[{"{", 
              RowBox[{"grid", ",", 
               RowBox[{
                RowBox[{"Dimensions", "[", "mSCAsimu", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
           "\n", "\t\t    ", 
           RowBox[{"{", 
            RowBox[{"day", ",", 
             RowBox[{
              RowBox[{"Dimensions", "[", "mSCAsimu", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"-", "2"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", "\n", 
         "\t\t   ", 
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"LinearROCScore", "[", 
              RowBox[{
               RowBox[{"mNCAsimu", "[", 
                RowBox[{"[", 
                 RowBox[{";;", ",", "day", ",", "grid"}], "]"}], "]"}], ",", 
               RowBox[{"mNCAobser", "[", 
                RowBox[{"[", 
                 RowBox[{";;", ",", "day", ",", "grid"}], "]"}], "]"}]}], 
              "]"}], ",", "\n", "\t\t\t", 
             RowBox[{"{", 
              RowBox[{"grid", ",", 
               RowBox[{
                RowBox[{"Dimensions", "[", "mNCAsimu", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
           "\n", "\t\t    ", 
           RowBox[{"{", 
            RowBox[{"day", ",", 
             RowBox[{
              RowBox[{"Dimensions", "[", "mNCAsimu", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"-", "2"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", "\n", 
         "\t\t   ", 
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"LinearROCScore", "[", 
              RowBox[{
               RowBox[{"mORsimu", "[", 
                RowBox[{"[", 
                 RowBox[{";;", ",", "day", ",", "grid"}], "]"}], "]"}], ",", 
               RowBox[{"mORobser", "[", 
                RowBox[{"[", 
                 RowBox[{";;", ",", "day", ",", "grid"}], "]"}], "]"}]}], 
              "]"}], ",", "\n", "\t\t\t", 
             RowBox[{"{", 
              RowBox[{"grid", ",", 
               RowBox[{
                RowBox[{"Dimensions", "[", "mORsimu", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
           "\n", "\t\t    ", 
           RowBox[{"{", 
            RowBox[{"day", ",", 
             RowBox[{
              RowBox[{"Dimensions", "[", "mORsimu", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"-", "2"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", "\n", 
         "\t\t   ", 
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"LinearROCScore", "[", 
              RowBox[{
               RowBox[{"mWAsimu", "[", 
                RowBox[{"[", 
                 RowBox[{";;", ",", "day", ",", "grid"}], "]"}], "]"}], ",", 
               RowBox[{"mWAobser", "[", 
                RowBox[{"[", 
                 RowBox[{";;", ",", "day", ",", "grid"}], "]"}], "]"}]}], 
              "]"}], ",", "\n", "\t\t\t", 
             RowBox[{"{", 
              RowBox[{"grid", ",", 
               RowBox[{
                RowBox[{"Dimensions", "[", "mWAsimu", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
           "\n", "\t\t    ", 
           RowBox[{"{", 
            RowBox[{"day", ",", 
             RowBox[{
              RowBox[{"Dimensions", "[", "mWAsimu", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"-", "2"}], "]"}], "]"}]}], "}"}]}], "]"}]}], "}"}]}], 
      ";", "\n", "\n", 
      RowBox[{"RegionalDaily", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"LinearROCScore", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Mean", "[", 
               RowBox[{"Transpose", "[", 
                RowBox[{"Map", "[", 
                 RowBox[{"Transpose", ",", "mSCAsimu"}], "]"}], "]"}], "]"}], 
              "[", 
              RowBox[{"[", 
               RowBox[{";;", ",", "day"}], "]"}], "]"}], ",", "\n", 
             "\t\t\t\t", 
             RowBox[{
              RowBox[{"Mean", "[", 
               RowBox[{"Transpose", "[", 
                RowBox[{"Map", "[", 
                 RowBox[{"Transpose", ",", "mSCAobser"}], "]"}], "]"}], "]"}],
               "[", 
              RowBox[{"[", 
               RowBox[{";;", ",", "day"}], "]"}], "]"}]}], "]"}], ",", "\n", 
           "\t\t\t\t", 
           RowBox[{"{", 
            RowBox[{"day", ",", 
             RowBox[{
              RowBox[{"Dimensions", "[", "mSCAsimu", "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], ",", "\n", 
         "\t\t\t  ", 
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"LinearROCScore", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Mean", "[", 
               RowBox[{"Transpose", "[", 
                RowBox[{"Map", "[", 
                 RowBox[{"Transpose", ",", "mNCAsimu"}], "]"}], "]"}], "]"}], 
              "[", 
              RowBox[{"[", 
               RowBox[{";;", ",", "day"}], "]"}], "]"}], ",", "\n", 
             "\t\t\t\t", 
             RowBox[{
              RowBox[{"Mean", "[", 
               RowBox[{"Transpose", "[", 
                RowBox[{"Map", "[", 
                 RowBox[{"Transpose", ",", "mNCAobser"}], "]"}], "]"}], "]"}],
               "[", 
              RowBox[{"[", 
               RowBox[{";;", ",", "day"}], "]"}], "]"}]}], "]"}], ",", "\n", 
           "\t\t\t\t", 
           RowBox[{"{", 
            RowBox[{"day", ",", 
             RowBox[{
              RowBox[{"Dimensions", "[", "mNCAsimu", "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], ",", "\n", 
         "              ", 
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"LinearROCScore", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Mean", "[", 
               RowBox[{"Transpose", "[", 
                RowBox[{"Map", "[", 
                 RowBox[{"Transpose", ",", "mORsimu"}], "]"}], "]"}], "]"}], 
              "[", 
              RowBox[{"[", 
               RowBox[{";;", ",", "day"}], "]"}], "]"}], ",", "\n", 
             "\t\t\t\t", 
             RowBox[{
              RowBox[{"Mean", "[", 
               RowBox[{"Transpose", "[", 
                RowBox[{"Map", "[", 
                 RowBox[{"Transpose", ",", "mORobser"}], "]"}], "]"}], "]"}], 
              "[", 
              RowBox[{"[", 
               RowBox[{";;", ",", "day"}], "]"}], "]"}]}], "]"}], ",", "\n", 
           "\t            ", 
           RowBox[{"{", 
            RowBox[{"day", ",", 
             RowBox[{
              RowBox[{"Dimensions", "[", "mORsimu", "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], ",", "\n", 
         "              ", 
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"LinearROCScore", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Mean", "[", 
               RowBox[{"Transpose", "[", 
                RowBox[{"Map", "[", 
                 RowBox[{"Transpose", ",", "mWAsimu"}], "]"}], "]"}], "]"}], 
              "[", 
              RowBox[{"[", 
               RowBox[{";;", ",", "day"}], "]"}], "]"}], ",", "\n", 
             "\t\t\t\t", 
             RowBox[{
              RowBox[{"Mean", "[", 
               RowBox[{"Transpose", "[", 
                RowBox[{"Map", "[", 
                 RowBox[{"Transpose", ",", "mWAobser"}], "]"}], "]"}], "]"}], 
              "[", 
              RowBox[{"[", 
               RowBox[{";;", ",", "day"}], "]"}], "]"}]}], "]"}], ",", "\n", 
           "\t            ", 
           RowBox[{"{", 
            RowBox[{"day", ",", 
             RowBox[{
              RowBox[{"Dimensions", "[", "mWAsimu", "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}]}], "}"}]}], 
      ";", "\n", "\t", "\n", 
      RowBox[{"GridInterval", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"imSCAsimu", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}], "\[Equal]", "0"}], ",",
              "0", ",", "\n", "\t\t\t\t", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"LinearROCScore", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"imSCAsimu", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{";;", ",", "grid"}], "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"imSCAobser", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{";;", ",", "grid"}], "]"}], "]"}]}], "]"}], ",", 
               "\n", "\t\t\t\t\t", 
               RowBox[{"{", 
                RowBox[{"grid", ",", 
                 RowBox[{
                  RowBox[{"Dimensions", "[", 
                   RowBox[{"imSCAobser", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
            "]"}], ",", "\n", "\t\t\t   ", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "imSCAobser", "]"}]}], "}"}]}], "]"}], 
         ",", "\n", "\t\t\t  ", 
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"imNCAsimu", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}], "\[Equal]", "0"}], ",",
              "0", ",", "\n", "\t\t\t\t", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"LinearROCScore", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"imNCAsimu", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{";;", ",", "grid"}], "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"imNCAobser", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{";;", ",", "grid"}], "]"}], "]"}]}], "]"}], ",", 
               "\n", "\t\t\t\t\t", 
               RowBox[{"{", 
                RowBox[{"grid", ",", 
                 RowBox[{
                  RowBox[{"Dimensions", "[", 
                   RowBox[{"imNCAobser", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
            "]"}], ",", "\n", "\t\t\t   ", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "imNCAobser", "]"}]}], "}"}]}], "]"}], 
         ",", "\n", "\t\t\t  ", 
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"imORsimu", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}], "\[Equal]", "0"}], ",",
              "0", ",", "\n", "\t\t\t\t", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"LinearROCScore", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"imORsimu", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{";;", ",", "grid"}], "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"imORobser", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{";;", ",", "grid"}], "]"}], "]"}]}], "]"}], ",", 
               "\n", "\t\t\t\t\t", 
               RowBox[{"{", 
                RowBox[{"grid", ",", 
                 RowBox[{
                  RowBox[{"Dimensions", "[", 
                   RowBox[{"imORobser", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
            "]"}], ",", "\n", "\t\t\t   ", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "imORobser", "]"}]}], "}"}]}], "]"}], ",",
          "\n", "\t\t\t  ", 
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"imWAsimu", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}], "\[Equal]", "0"}], ",",
              "0", ",", "\n", "\t\t\t\t", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"LinearROCScore", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"imWAsimu", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{";;", ",", "grid"}], "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"imWAobser", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{";;", ",", "grid"}], "]"}], "]"}]}], "]"}], ",", 
               "\n", "\t\t\t\t\t", 
               RowBox[{"{", 
                RowBox[{"grid", ",", 
                 RowBox[{
                  RowBox[{"Dimensions", "[", 
                   RowBox[{"imWAobser", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
            "]"}], ",", "\n", "\t\t\t   ", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "imWAobser", "]"}]}], "}"}]}], "]"}]}], 
        "}"}]}], ";", "\n", "\n", 
      RowBox[{"RegionalInterval", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"imSCAsimu", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}], "\[Equal]", "0"}], ",",
              "0", ",", "\n", "\t\t\t\t", 
             RowBox[{"LinearROCScore", "[", 
              RowBox[{
               RowBox[{"Mean", "[", 
                RowBox[{"Transpose", "[", 
                 RowBox[{"imSCAsimu", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
               RowBox[{"Mean", "[", 
                RowBox[{"Transpose", "[", 
                 RowBox[{"imSCAobser", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], "]"}]}], 
            "]"}], ",", "\n", "\t\t\t   ", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "imSCAobser", "]"}]}], "}"}]}], "]"}], 
         ",", "\n", "\t\t\t  ", 
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"imNCAsimu", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}], "\[Equal]", "0"}], ",",
              "0", ",", "\n", "\t\t\t\t", 
             RowBox[{"LinearROCScore", "[", 
              RowBox[{
               RowBox[{"Mean", "[", 
                RowBox[{"Transpose", "[", 
                 RowBox[{"imNCAsimu", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
               RowBox[{"Mean", "[", 
                RowBox[{"Transpose", "[", 
                 RowBox[{"imNCAobser", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], "]"}]}], 
            "]"}], ",", "\n", "\t\t\t   ", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "imNCAobser", "]"}]}], "}"}]}], "]"}], 
         ",", "\n", "\t\t\t  ", 
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"imORsimu", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}], "\[Equal]", "0"}], ",",
              "0", ",", "\n", "\t\t\t\t", 
             RowBox[{"LinearROCScore", "[", 
              RowBox[{
               RowBox[{"Mean", "[", 
                RowBox[{"Transpose", "[", 
                 RowBox[{"imORsimu", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
               RowBox[{"Mean", "[", 
                RowBox[{"Transpose", "[", 
                 RowBox[{"imORobser", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], "]"}]}], 
            "]"}], ",", "\n", "\t\t\t   ", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "imORobser", "]"}]}], "}"}]}], "]"}], ",",
          "\n", "\t\t\t  ", 
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"imWAsimu", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}], "\[Equal]", "0"}], ",",
              "0", ",", "\n", "\t\t\t\t", 
             RowBox[{"LinearROCScore", "[", 
              RowBox[{
               RowBox[{"Mean", "[", 
                RowBox[{"Transpose", "[", 
                 RowBox[{"imWAsimu", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
               RowBox[{"Mean", "[", 
                RowBox[{"Transpose", "[", 
                 RowBox[{"imWAobser", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], "]"}]}], 
            "]"}], ",", "\n", "\t\t\t   ", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "imWAobser", "]"}]}], "}"}]}], "]"}]}], 
        "}"}]}], ";", "\n", "\t\t\t   ", "\n", 
      RowBox[{"result", "=", 
       RowBox[{"{", 
        RowBox[{
        "GridDaily", ",", "RegionalDaily", ",", "GridInterval", ",", 
         "RegionalInterval"}], "}"}]}], ";", "\n", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{
        "\"\</Users/lambda/Documents/Research/3_S2SEvaluation/Results/ROC/\>\"\
", "<>", "dataset", "<>", "\"\<_LinearROC.mx\>\""}], ",", "result"}], 
       "]"}]}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.7172610952541113`*^9, 3.7172611223449802`*^9}, {
   3.717261571506278*^9, 3.717261657245943*^9}, {3.717261696147327*^9, 
   3.7172617813345003`*^9}, {3.717261908438643*^9, 3.717261934236375*^9}, {
   3.717262111535325*^9, 3.7172621576994953`*^9}, 3.717262189706666*^9, {
   3.717264079360442*^9, 3.7172641082928677`*^9}, {3.717264142516197*^9, 
   3.71726422216073*^9}, {3.717264317939464*^9, 3.717264342934778*^9}, {
   3.71726441096797*^9, 3.717264413805118*^9}, {3.717264478491213*^9, 
   3.7172645878396606`*^9}, {3.7172650191838913`*^9, 3.717265038392861*^9}, {
   3.717265764602108*^9, 3.717265771056772*^9}, {3.717271066510188*^9, 
   3.717271069758582*^9}, 3.717271935397588*^9, 3.717272277160787*^9, {
   3.717272690565714*^9, 3.717272713454351*^9}, 3.7173390188372498`*^9, {
   3.7173390683630533`*^9, 3.7173390983387117`*^9}, {3.7173391438236027`*^9, 
   3.71733921847579*^9}, {3.717339544915206*^9, 3.717339547153029*^9}, 
   3.717339815160405*^9, {3.71733986830217*^9, 3.717339868620483*^9}, {
   3.71734013178694*^9, 3.717340143938252*^9}, {3.71734018493043*^9, 
   3.717340244072968*^9}, {3.717340279230398*^9, 3.717340281780361*^9}, {
   3.717340640401989*^9, 3.717340702636799*^9}, {3.7173422161521187`*^9, 
   3.717342216570899*^9}, {3.717342419106058*^9, 3.717342419443102*^9}, 
   3.7173426845658293`*^9, {3.717342729532435*^9, 3.717342839033535*^9}, {
   3.717347820275064*^9, 3.7173478525872297`*^9}, {3.717352063421818*^9, 
   3.717352064439156*^9}, {3.717352138606052*^9, 3.717352189911706*^9}, {
   3.717371526073822*^9, 
   3.717371527313517*^9}},ExpressionUUID->"df204dc7-e664-454f-a321-\
404caf808030"],

Cell[CellGroupData[{

Cell[BoxData["models"], "Code",
 CellChangeTimes->{{3.717342716683272*^9, 
  3.717342717426085*^9}},ExpressionUUID->"e40dc23f-2648-49eb-ab36-\
9c19dfe8195e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"BoM\"\>", ",", "\<\"CMA\"\>", ",", "\<\"ECCC\"\>", 
   ",", "\<\"ECMWF\"\>", ",", "\<\"HCMR\"\>", ",", "\<\"ISACCNR\"\>", 
   ",", "\<\"JMA\"\>", ",", "\<\"KMA\"\>", ",", "\<\"MeteoFrance\"\>", 
   ",", "\<\"NCEP\"\>", ",", "\<\"UKMO\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.7173427177287693`*^9, 3.717346477221767*^9, 
  3.7173478745087423`*^9, 3.717352069178466*^9, 3.717352180043357*^9, 
  3.717371534419303*^9},ExpressionUUID->"6521d5f9-4eaf-441f-97bd-\
736709883f6b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"models", "[", 
  RowBox[{"[", 
   RowBox[{
    RowBox[{"-", "3"}], ";;", 
    RowBox[{"-", "1"}]}], "]"}], "]"}]], "Code",
 CellChangeTimes->{{3.7173712997584667`*^9, 3.7173713037152557`*^9}, {
  3.717371540809936*^9, 
  3.717371542172144*^9}},ExpressionUUID->"be03b9b3-f6d4-4e07-a98b-\
57ce687afac7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"MeteoFrance\"\>", ",", "\<\"NCEP\"\>", ",", "\<\"UKMO\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.717371535822104*^9, 
  3.717371542422967*^9}},ExpressionUUID->"3ff0f839-f54e-4433-9ddb-\
c4295e1318a1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LinearROCEvaluation", "[", "\"\<NCEP\>\"", "]"}]], "Code",
 CellChangeTimes->{
  3.71734885699559*^9, 3.717348978067802*^9, {3.7173521953007174`*^9, 
   3.717352196299427*^9}, {3.717371546804991*^9, 
   3.71737155723555*^9}},ExpressionUUID->"d48fcd9c-ca38-4aa0-aaf5-\
125cf80bb797"],

Cell[BoxData["\<\"/Users/lambda/Documents/Research/3_S2SEvaluation/Results/\
ROC/NCEP_LinearROC.mx\"\>"], "Output",
 CellChangeTimes->{
  3.717372239408361*^9},ExpressionUUID->"a9523da5-ab07-4fbe-8107-\
10660c3f6fb9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LinearROCEvaluation", "[", "\"\<UKMO\>\"", "]"}]], "Code",
 CellChangeTimes->{
  3.71734885699559*^9, 3.717348978067802*^9, {3.7173521953007174`*^9, 
   3.717352196299427*^9}, {3.717371546804991*^9, 
   3.717371567179455*^9}},ExpressionUUID->"cdc9a184-9994-49bb-9df0-\
1461699f8a34"],

Cell[BoxData["\<\"/Users/lambda/Documents/Research/3_S2SEvaluation/Results/\
ROC/UKMO_LinearROC.mx\"\>"], "Output",
 CellChangeTimes->{
  3.717372425563602*^9},ExpressionUUID->"1c6946aa-16b1-4d4e-9707-\
5077b6c7db90"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LinearROCEvaluation", "[", "\"\<MeteoFrance\>\"", "]"}]], "Code",
 CellChangeTimes->{
  3.71734885699559*^9, 3.717348978067802*^9, {3.7173521953007174`*^9, 
   3.717352196299427*^9}, {3.717371546804991*^9, 
   3.717371573517353*^9}},ExpressionUUID->"e3812ad7-9535-4a0f-96b7-\
df6af547fa5a"],

Cell[BoxData["\<\"/Users/lambda/Documents/Research/3_S2SEvaluation/Results/\
ROC/MeteoFrance_LinearROC.mx\"\>"], "Output",
 CellChangeTimes->{
  3.717372860489662*^9},ExpressionUUID->"ede1ce81-857b-4630-b707-\
7ce2de8e8bf0"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"7d650ffe-7c0a-4bed-959a-0020c9c8d801"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GridDaily", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Block", "[", 
        RowBox[{
         RowBox[{"{", "data", "}"}], ",", "\n", "\t", 
         RowBox[{
          RowBox[{"data", "=", 
           RowBox[{"Import", "[", 
            RowBox[{
            "\"\</Users/lambda/Documents/Research/3_S2SEvaluation/Results/ROC/\
\>\"", "<>", "#", "<>", "\"\<_LinearROC.mx\>\""}], "]"}]}], ";", "\n", "\t", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Mean", "[", 
              RowBox[{"Transpose", "[", "#", "]"}], "]"}], "&"}], ",", 
            RowBox[{"data", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], "]"}], "&"}], ",", 
      "models"}], "]"}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.717346319158333*^9, 3.7173463259965963`*^9}, {
   3.717349863350075*^9, 3.717349884932309*^9}, {3.7173503207435017`*^9, 
   3.717350322268359*^9}, {3.7173503810115833`*^9, 3.717350446026781*^9}, {
   3.7173511871692266`*^9, 3.71735118997561*^9}, 
   3.7173522079983397`*^9},ExpressionUUID->"82b6133e-953b-4e3e-aefb-\
3653647593d3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RegionalDaily", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Block", "[", 
        RowBox[{
         RowBox[{"{", "data", "}"}], ",", "\n", "\t", 
         RowBox[{
          RowBox[{"data", "=", 
           RowBox[{"Import", "[", 
            RowBox[{
            "\"\</Users/lambda/Documents/Research/3_S2SEvaluation/Results/ROC/\
\>\"", "<>", "#", "<>", "\"\<_LinearROC.mx\>\""}], "]"}]}], ";", "\n", "\t", 
          RowBox[{"data", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], "&"}], ",", "models"}], 
     "]"}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.7173505783655853`*^9, 3.717350642931798*^9}, {
   3.717351191495824*^9, 3.717351194967174*^9}, 
   3.717352209190292*^9},ExpressionUUID->"4e57e41e-2816-4dd8-b245-\
54c1bcd6ac76"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GridInterval", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"Transpose", ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Block", "[", 
          RowBox[{
           RowBox[{"{", "data", "}"}], ",", "\n", "\t", 
           RowBox[{
            RowBox[{"data", "=", 
             RowBox[{"Import", "[", 
              RowBox[{
              "\"\</Users/lambda/Documents/Research/3_S2SEvaluation/Results/\
ROC/\>\"", "<>", "#", "<>", "\"\<_LinearROC.mx\>\""}], "]"}]}], ";", "\n", 
            "\t", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Map", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Length", "[", "#", "]"}], ">", "0"}], ",", 
                   RowBox[{"Mean", "[", "#", "]"}], ",", "0"}], "]"}], "&"}], 
                ",", 
                RowBox[{"data", "[", 
                 RowBox[{"[", 
                  RowBox[{"3", ",", "i"}], "]"}], "]"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", 
                RowBox[{
                 RowBox[{"Dimensions", "[", "data", "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}]}]}], "]"}], 
         "&"}], ",", "models"}], "]"}], "]"}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.717350796413657*^9, 3.717350817306245*^9}, {
   3.717350895190755*^9, 3.717350914584928*^9}, {3.7173509790164747`*^9, 
   3.717351050004692*^9}, 
   3.717352211246224*^9},ExpressionUUID->"00821473-d218-457a-905c-\
efc3c45bca7a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RegionalInterval", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"Transpose", ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Block", "[", 
          RowBox[{
           RowBox[{"{", "data", "}"}], ",", "\n", "\t", 
           RowBox[{
            RowBox[{"data", "=", 
             RowBox[{"Import", "[", 
              RowBox[{
              "\"\</Users/lambda/Documents/Research/3_S2SEvaluation/Results/\
ROC/\>\"", "<>", "#", "<>", "\"\<_LinearROC.mx\>\""}], "]"}]}], ";", "\n", 
            "\t", 
            RowBox[{"data", "[", 
             RowBox[{"[", "4", "]"}], "]"}]}]}], "]"}], "&"}], ",", 
        "models"}], "]"}], "]"}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.717351085644451*^9, 3.717351144154241*^9}, 
   3.7173522128540487`*^9},ExpressionUUID->"26f0320f-846b-4b97-8b6b-\
c27aa4a4c4c7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"range", "=", 
   RowBox[{"{", 
    RowBox[{"0.5", ",", "1"}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.7173514616468163`*^9, 3.717351469045656*^9}, {
  3.71735172760618*^9, 
  3.717351727884647*^9}},ExpressionUUID->"83466529-e08a-4e8f-b3e1-\
0948b70955cc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Dimensions", "[", "GridDaily", "]"}], "\n", 
 RowBox[{"Dimensions", "[", "RegionalDaily", "]"}], "\n", 
 RowBox[{"Dimensions", "[", "GridInterval", "]"}], "\n", 
 RowBox[{"Dimensions", "[", "RegionalInterval", "]"}]}], "Code",
 CellChangeTimes->{{3.7173506447956657`*^9, 3.7173506617947493`*^9}, {
  3.71735117145753*^9, 
  3.717351178248756*^9}},ExpressionUUID->"4d3a6291-01eb-4b3c-9675-\
b0848bbab213"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "11"}], "}"}]], "Output",
 CellChangeTimes->{
  3.71737295441645*^9},ExpressionUUID->"9891a84d-431b-4fd5-bf55-efb995e4985d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "11"}], "}"}]], "Output",
 CellChangeTimes->{
  3.717372954435658*^9},ExpressionUUID->"15f59229-72d7-4620-960c-\
0e6462bf5dde"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "7", ",", "11"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7173729544564734`*^9},ExpressionUUID->"9bebe94a-4ff6-436d-bd33-\
36121a8d2845"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "7", ",", "11"}], "}"}]], "Output",
 CellChangeTimes->{
  3.717372954476554*^9},ExpressionUUID->"b8c4e7c2-ff15-4ac4-8613-\
43a184224f31"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"GridDailyDraw", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"GridDaily", "[", 
        RowBox[{"[", "region", "]"}], "]"}], ",", "\n", "\t\t", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"Thickness", "[", "0.005", "]"}]}], "}"}], "&"}], ",", 
          "datasets"}], "]"}]}], ",", "\n", "\t\t", 
       RowBox[{"PlotRange", "\[Rule]", "range"}], ",", "\n", "\t\t", 
       RowBox[{"BaseStyle", "\[Rule]", "40"}], ",", "\n", "\t\t", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", "\n", "\t\t", 
       RowBox[{"ImageSize", "\[Rule]", "800"}], ",", "\n", "\t\t", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Forecast Leading Day\>\"", ",", "\"\<ROC\>\""}], 
         "}"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"region", ",", "4"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"RegionalDailyDraw", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"RegionalDaily", "[", 
        RowBox[{"[", "region", "]"}], "]"}], ",", "\n", "\t\t", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"Thickness", "[", "0.005", "]"}]}], "}"}], "&"}], ",", 
          "datasets"}], "]"}]}], ",", "\n", "\t\t", 
       RowBox[{"PlotRange", "\[Rule]", "range"}], ",", "\n", "\t\t", 
       RowBox[{"BaseStyle", "\[Rule]", "40"}], ",", "\n", "\t\t", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", "\n", "\t\t", 
       RowBox[{"ImageSize", "\[Rule]", "800"}], ",", "\n", "\t\t", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Forecast Leading Day\>\"", ",", "\"\<ROC\>\""}], 
         "}"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"region", ",", "4"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"GridIntervalDraw", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"BarChart", "[", 
      RowBox[{
       RowBox[{"GridInterval", "[", 
        RowBox[{"[", "region", "]"}], "]"}], ",", "\n", "\t", 
       RowBox[{"BaseStyle", "\[Rule]", "40"}], ",", "\n", "\t", 
       RowBox[{"BarSpacing", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "4."}], "}"}]}], ",", "\n", "\t", 
       RowBox[{"ChartStyle", "\[Rule]", 
        RowBox[{"datasets", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "1"}], "]"}], "]"}]}], ",", "\n", "\t", 
       RowBox[{"ChartLabels", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<1d1d\>\"", ",", "\"\<2d2d\>\"", ",", "\"\<4d4d\>\"", ",", 
            "\"\<1w1w\>\"", ",", "\"\<2w2w\>\"", ",", "\"\<3w3w\>\"", ",", 
            "\"\<4w4w\>\""}], "}"}], ",", "None"}], "}"}]}], ",", "\n", "\t", 
       
       RowBox[{"Frame", "\[Rule]", "True"}], ",", "\n", "\t", 
       RowBox[{"PlotRange", " ", "->", " ", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", " ", "range"}], "}"}]}], ",", "\n", "    ", 
       RowBox[{"PlotRangePadding", " ", "->", " ", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", " ", "0"}], "}"}]}], ",", "\n", "    ", 
       RowBox[{"PlotRangeClipping", " ", "->", " ", "True"}], ",", "\n", "\t", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Forecast Interval\>\"", ",", "\"\<ROC\>\""}], "}"}]}], 
       ",", "\n", "\t", 
       RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"region", ",", "4"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"RegionalIntervalDraw", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"BarChart", "[", 
      RowBox[{
       RowBox[{"RegionalInterval", "[", 
        RowBox[{"[", "region", "]"}], "]"}], ",", "\n", "\t", 
       RowBox[{"BaseStyle", "\[Rule]", "40"}], ",", "\n", "\t", 
       RowBox[{"BarSpacing", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "4."}], "}"}]}], ",", "\n", "\t", 
       RowBox[{"ChartStyle", "\[Rule]", 
        RowBox[{"datasets", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "1"}], "]"}], "]"}]}], ",", "\n", "\t", 
       RowBox[{"ChartLabels", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<1d1d\>\"", ",", "\"\<2d2d\>\"", ",", "\"\<4d4d\>\"", ",", 
            "\"\<1w1w\>\"", ",", "\"\<2w2w\>\"", ",", "\"\<3w3w\>\"", ",", 
            "\"\<4w4w\>\""}], "}"}], ",", "None"}], "}"}]}], ",", "\n", "\t", 
       
       RowBox[{"Frame", "\[Rule]", "True"}], ",", "\n", "\t", 
       RowBox[{"PlotRange", " ", "->", " ", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", " ", "range"}], "}"}]}], ",", "\n", "    ", 
       RowBox[{"PlotRangePadding", " ", "->", " ", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", " ", "0"}], "}"}]}], ",", "\n", "    ", 
       RowBox[{"PlotRangeClipping", " ", "->", " ", "True"}], ",", "\n", "\t", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Forecast Interval\>\"", ",", "\"\<ROC\>\""}], "}"}]}], 
       ",", "\n", "\t", 
       RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"region", ",", "4"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"label", "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{
       RowBox[{"table", "[", "pairs_", "]"}], " ", ":=", 
       RowBox[{"TableForm", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", "pairs", "]"}], ",", 
         RowBox[{"TableAlignments", "\[Rule]", "Center"}]}], "]"}]}], ";", 
      "\n", "\t", 
      RowBox[{"SwatchLegend", "[", 
       RowBox[{
        RowBox[{"datasets", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"datasets", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "2"}], "]"}], "]"}], ",", "\n", "\t", 
        RowBox[{"LegendLayout", "\[Rule]", "table"}], ",", "\n", "\t", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"FontSize", "\[Rule]", "50"}], "}"}]}], ",", "\n", "\t", 
        RowBox[{"LegendMarkerSize", "\[Rule]", "50"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"fig", "=", 
   RowBox[{"Labeled", "[", 
    RowBox[{
     RowBox[{"TableForm", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
         "GridDailyDraw", ",", "RegionalDailyDraw", ",", "GridIntervalDraw", 
          ",", "RegionalIntervalDraw"}], "}"}], "]"}], ",", "\n", "\t", 
       RowBox[{"TableHeadings", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"#", ",", 
               RowBox[{"FontSize", "\[Rule]", "50"}]}], "]"}], "&"}], ",", 
            RowBox[{"{", 
             RowBox[{
             "\"\<SCA\>\"", ",", "\"\<NCA\>\"", ",", "\"\<OR\>\"", ",", 
              "\"\<WA\>\""}], "}"}]}], "]"}], ",", "\n", "\t\t", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"#", ",", 
               RowBox[{"FontSize", "\[Rule]", "50"}]}], "]"}], "&"}], ",", 
            RowBox[{"{", 
             RowBox[{
             "\"\<Grid Daily Scale\>\"", ",", "\"\<Regional Daily Scale\>\"", 
              ",", "\"\<Grid Interval Scale\>\"", ",", 
              "\"\<Regional Interval Scale\>\""}], "}"}]}], "]"}]}], "}"}]}], 
       ",", "\n", "\t", 
       RowBox[{"TableAlignments", "\[Rule]", "Center"}]}], "]"}], ",", 
     "label", ",", "Bottom"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\</Users/lambda/Documents/Research/3_S2SEvaluation/Results/fig_\
LinearROC.pdf\>\"", ",", "fig"}], "]"}], ";"}]}], "Code",
 CellChangeTimes->{{3.717351281517667*^9, 3.7173512911519117`*^9}, {
   3.717351451850397*^9, 3.7173515924115677`*^9}, {3.71735168135942*^9, 
   3.717351709493843*^9}, 
   3.717352227533803*^9},ExpressionUUID->"bb7f86f9-764f-4ea3-8fa5-\
b288447dba02"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"2cd1c07b-f9e4-4ff7-af7d-1af10775c5e2"],

Cell["\<\
For a fair comparison across a seamless range of time scales, the \
verification is performed using data averaged over time windows equal in \
length to the forecast lead time. At a lead time of one day, skill is \
greatest in the extratropics around 40-60o latitude, lowest around 20o, and \
has a secondary local maximum close to the equator. The extratropical skill \
at this short range is highest in the winter hemisphere presumably due to the \
higher predictability of winter baroclinic systems.\
\>", "Text",ExpressionUUID->"f094a076-f02e-40b7-b903-dfecc015133d"],

Cell["\<\
 defining a consistent and useful distance metric on these aspects\
\>", "Text",ExpressionUUID->"53c9ba75-68ee-4351-9994-2172aef434ae"],

Cell[TextData[{
 "The essence of our approach is as follows. We compute the prediction skill \
at\n",
 StyleBox[" ",
  FontFamily->"Helvetica",
  FontSize->11],
 "a range of lead times, from one day to one month. As the lead time \
increases, we also\n",
 StyleBox[" ",
  FontFamily->"Helvetica",
  FontSize->11],
 "increase the length of the time window over which the data are averaged for\
\n",
 StyleBox[" ",
  FontFamily->"Helvetica",
  FontSize->11],
 "verification. This is intended to capture the fact that we are \
transitioning from\n",
 StyleBox[" ",
  FontFamily->"Helvetica",
  FontSize->11],
 "weather to climate prediction as the lead time increases, and to allow the \
transition to\n",
 StyleBox[" ",
  FontFamily->"Helvetica",
  FontSize->11],
 "occur smoothly. The skill is computed for both total precipitation and \
anomalies, and\n",
 StyleBox[" ",
  FontFamily->"Helvetica",
  FontSize->11],
 "comparison is made with the skill achievable by a persistence forecast of \
the\n",
 StyleBox[" ",
  FontFamily->"Helvetica",
  FontSize->11],
 "precipitation anomalies. For comparison we also evaluate the forecasts at \
varying lead\ntime but with a fixed verification window of 1 day."
}], "Text",
 CellChangeTimes->{{3.716214090409994*^9, 
  3.716214101039338*^9}},ExpressionUUID->"3df5bec8-2175-4102-97e8-\
c0ba0cc19f6a"]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->Automatic,
TaggingRules->{"SlideShow" -> True},
FrontEndVersion->"11.2 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
10, 2017)",
StyleDefinitions->FrontEnd`FileName[{"SlideShow"}, "Garnet.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "SlideShowHeader"->{
  Cell[422, 15, 4399, 98, 75, "SlideShowNavigationBar",ExpressionUUID->"25e0900b-5d64-4ab0-8e07-fe9f0504c0e6",
   CellTags->"SlideShowHeader"],
  Cell[5560, 136, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"2656db73-78b7-4018-a8ef-9da22dae5d85",
   CellTags->"SlideShowHeader"],
  Cell[41431, 959, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"48928679-6037-495a-86aa-a3bb83371bec",
   CellTags->"SlideShowHeader"],
  Cell[166510, 3226, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"5b65c0a3-4613-4854-9f07-ddc24a73137c",
   CellTags->"SlideShowHeader"],
  Cell[194220, 3920, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"450c0950-1961-475d-983c-ddd02ad2bdbd",
   CellTags->"SlideShowHeader"],
  Cell[209253, 4316, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"5f25a7db-1617-4725-a408-b3acf3e77fd9",
   CellTags->"SlideShowHeader"],
  Cell[212741, 4408, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"54fa6fea-71e5-42c7-97e8-ea60454954ff",
   CellTags->"SlideShowHeader"],
  Cell[244447, 5164, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"435b5f0c-3dec-471d-87dd-9054bcabd60e",
   CellTags->"SlideShowHeader"],
  Cell[274332, 5918, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"7d650ffe-7c0a-4bed-959a-0020c9c8d801",
   CellTags->"SlideShowHeader"],
  Cell[289265, 6314, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"2cd1c07b-f9e4-4ff7-af7d-1af10775c5e2",
   CellTags->"SlideShowHeader"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"SlideShowHeader", 291876, 6389}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[422, 15, 4399, 98, 75, "SlideShowNavigationBar",ExpressionUUID->"25e0900b-5d64-4ab0-8e07-fe9f0504c0e6",
 CellTags->"SlideShowHeader"],
Cell[4824, 115, 484, 8, 311, "Title",ExpressionUUID->"8b59354f-01b7-4454-91fb-db15d64cd7df"],
Cell[5311, 125, 212, 6, 93, "Text",ExpressionUUID->"1248c6d1-c1ac-4a11-9621-02549bb28186"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5560, 136, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"2656db73-78b7-4018-a8ef-9da22dae5d85",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[5707, 142, 166, 3, 123, "Section",ExpressionUUID->"1183ddb6-51fe-442c-ab1e-39170e3b5831"],
Cell[5876, 147, 859, 25, 167, "Code",ExpressionUUID->"69f9e5e5-95b7-44ab-bd12-c3ef3933c724"],
Cell[6738, 174, 29054, 614, 1014, "Code",ExpressionUUID->"143cd342-99b7-4755-9a22-6204f5482ece"],
Cell[35795, 790, 1366, 37, 135, "Code",ExpressionUUID->"4d488475-e3ae-44ef-a155-40897f6a8ede"],
Cell[37164, 829, 4218, 124, 295, "Code",ExpressionUUID->"b5ad0616-316e-4f8f-a449-ad813656938d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[41431, 959, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"48928679-6037-495a-86aa-a3bb83371bec",
 CellTags->"SlideShowHeader"],
Cell[41556, 963, 253, 4, 123, "Section",ExpressionUUID->"be3eb40f-eef3-4131-ad02-1b1c64c7e79b"],
Cell[CellGroupData[{
Cell[41834, 971, 151, 3, 49, "Subchapter",ExpressionUUID->"5022c7c8-ba43-475e-84e7-b2776fb8dc6e"],
Cell[41988, 976, 241, 5, 70, "Code",ExpressionUUID->"30177a5e-e652-4ec5-9b6e-992c8cd589de"],
Cell[42232, 983, 5000, 126, 295, "Code",ExpressionUUID->"64a16c9f-48c7-454b-8bd1-e238ed639daa"],
Cell[47235, 1111, 4157, 99, 199, "Code",ExpressionUUID->"4886183d-f4c3-46a7-ba5b-837dd6faa6b6"],
Cell[51395, 1212, 5607, 129, 487, "Code",ExpressionUUID->"aac5cafd-cc6a-42cb-894d-38cef250a5f7"],
Cell[CellGroupData[{
Cell[57027, 1345, 1339, 34, 103, "Code",ExpressionUUID->"39018a4d-d82b-4377-9dc1-415af405acc6"],
Cell[58369, 1381, 99123, 1642, 248, "Output",ExpressionUUID->"4c778bd9-48ff-4fac-876c-4c7c6b4bc57e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[157529, 3028, 578, 10, 70, "Code",ExpressionUUID->"a45c174c-52eb-4e45-949f-fde91b68867e"],
Cell[158110, 3040, 8339, 179, 317, "Output",ExpressionUUID->"a4455b62-fbe1-4dd4-82e9-9af96ba39750"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[166510, 3226, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"5b65c0a3-4613-4854-9f07-ddc24a73137c",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[166657, 3232, 207, 4, 65, "Subchapter",ExpressionUUID->"97fd9862-bf6a-4fd5-8181-93e44d826362"],
Cell[166867, 3238, 26232, 642, 2599, "Code",ExpressionUUID->"219fa6df-7556-4985-a935-1add5468b2f1"],
Cell[CellGroupData[{
Cell[193124, 3884, 157, 3, 70, "Code",ExpressionUUID->"628e86cf-2ca0-4f0a-b714-8b0322441c92"],
Cell[193284, 3889, 480, 9, 47, "Output",ExpressionUUID->"4bb9b226-ddf0-47fa-8ca1-d18274b8fc23"]
}, Open  ]],
Cell[CellGroupData[{
Cell[193801, 3903, 218, 5, 70, "Code",ExpressionUUID->"1fc26376-dc6b-42fe-92e0-4765e8fa3bf9"],
Cell[194022, 3910, 137, 3, 47, "Output",ExpressionUUID->"7e441749-2a7c-4189-9bf0-9685f722e9c1"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[194220, 3920, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"450c0950-1961-475d-983c-ddd02ad2bdbd",
 CellTags->"SlideShowHeader"],
Cell[194345, 3924, 1163, 29, 135, "Code",ExpressionUUID->"4da69e09-9978-4a90-8903-325e1eaf3788"],
Cell[195511, 3955, 825, 22, 135, "Code",ExpressionUUID->"8ce7e1ea-a74b-4974-81d0-3350e3e97299"],
Cell[196339, 3979, 1654, 41, 135, "Code",ExpressionUUID->"c67bc7e3-4fbe-48f3-b431-0df30a977802"],
Cell[197996, 4022, 872, 23, 135, "Code",ExpressionUUID->"75384e34-d2b3-4537-a1ea-f6dfa23b870f"],
Cell[198871, 4047, 297, 8, 70, "Code",ExpressionUUID->"3a83eddf-bf4d-4e28-871e-13fc1e0acb2e"],
Cell[CellGroupData[{
Cell[199193, 4059, 429, 8, 167, "Code",ExpressionUUID->"030065b9-c922-42e2-86dd-5aa59acb9b59"],
Cell[199625, 4069, 249, 6, 47, "Output",ExpressionUUID->"7c3f7576-3c7d-49c4-9824-55f6af1c9a13"],
Cell[199877, 4077, 249, 6, 47, "Output",ExpressionUUID->"834bccdf-4643-4cbc-8669-7a8eaee9a2d1"],
Cell[200129, 4085, 255, 5, 47, "Output",ExpressionUUID->"e1e1ab32-4106-4150-9b8c-86c0c7cc8e0b"],
Cell[200387, 4092, 259, 6, 47, "Output",ExpressionUUID->"0c9babe1-c597-4759-9310-363ed2162df9"]
}, Open  ]],
Cell[200661, 4101, 8555, 210, 1543, "Code",ExpressionUUID->"bfe9048a-544f-4e34-bc4e-bd1a9ed81e6f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[209253, 4316, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"5f25a7db-1617-4725-a408-b3acf3e77fd9",
 CellTags->"SlideShowHeader"],
Cell[209378, 4320, 581, 8, 207, "Text",ExpressionUUID->"8cd5e2e9-a800-45da-927b-bd35120f6155"],
Cell[209962, 4330, 145, 2, 55, "Text",ExpressionUUID->"0fcca257-3472-4583-b9ab-c7705cfd2ceb"],
Cell[210110, 4334, 1342, 41, 359, "Text",ExpressionUUID->"6dd152ab-94f9-4ab3-ac92-2c412be69ac5"],
Cell[211455, 4377, 1249, 26, 368, "Output",ExpressionUUID->"ca261aaa-f37a-4d71-af33-1859322c3a01"]
}, Open  ]],
Cell[CellGroupData[{
Cell[212741, 4408, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"54fa6fea-71e5-42c7-97e8-ea60454954ff",
 CellTags->"SlideShowHeader"],
Cell[212866, 4412, 301, 5, 123, "Section",ExpressionUUID->"1331d563-2efa-45c6-9177-60bc723ac2e7"],
Cell[CellGroupData[{
Cell[213192, 4421, 151, 3, 49, "Subchapter",ExpressionUUID->"a7155f44-dfb4-45be-8baa-0567d849ffcc"],
Cell[213346, 4426, 3913, 96, 263, "Code",ExpressionUUID->"764965d5-0c79-4478-8726-056f31309434"],
Cell[217262, 4524, 4283, 102, 263, "Code",ExpressionUUID->"2d5983d9-16d7-46d0-a54c-e667cdf8f2e7"],
Cell[221548, 4628, 4837, 115, 487, "Code",ExpressionUUID->"42fc1842-333b-48c7-9120-ffbdbbe2d11d"],
Cell[CellGroupData[{
Cell[226410, 4747, 694, 14, 70, "Code",ExpressionUUID->"5e2f08ba-3702-4b19-ab88-d600c658f075"],
Cell[227107, 4763, 17279, 394, 317, "Output",ExpressionUUID->"1249fce4-ef66-4ff2-b6b0-5ca52d977ebe"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[244447, 5164, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"435b5f0c-3dec-471d-87dd-9054bcabd60e",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[244594, 5170, 207, 4, 65, "Subchapter",ExpressionUUID->"f1dd7c75-ed12-4c06-abb3-8180c26dcf7e"],
Cell[244804, 5176, 26438, 644, 2599, "Code",ExpressionUUID->"df204dc7-e664-454f-a321-404caf808030"],
Cell[CellGroupData[{
Cell[271267, 5824, 157, 3, 70, "Code",ExpressionUUID->"e40dc23f-2648-49eb-ab36-9c19dfe8195e"],
Cell[271427, 5829, 522, 9, 47, "Output",ExpressionUUID->"6521d5f9-4eaf-441f-97bd-736709883f6b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[271986, 5843, 325, 9, 70, "Code",ExpressionUUID->"be03b9b3-f6d4-4e07-a98b-57ce687afac7"],
Cell[272314, 5854, 252, 6, 47, "Output",ExpressionUUID->"3ff0f839-f54e-4433-9ddb-c4295e1318a1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[272603, 5865, 306, 6, 70, "Code",ExpressionUUID->"d48fcd9c-ca38-4aa0-aaf5-125cf80bb797"],
Cell[272912, 5873, 217, 4, 47, "Output",ExpressionUUID->"a9523da5-ab07-4fbe-8107-10660c3f6fb9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[273166, 5882, 307, 6, 70, "Code",ExpressionUUID->"cdc9a184-9994-49bb-9df0-1461699f8a34"],
Cell[273476, 5890, 217, 4, 47, "Output",ExpressionUUID->"1c6946aa-16b1-4d4e-9707-5077b6c7db90"]
}, Open  ]],
Cell[CellGroupData[{
Cell[273730, 5899, 314, 6, 70, "Code",ExpressionUUID->"e3812ad7-9535-4a0f-96b7-df6af547fa5a"],
Cell[274047, 5907, 224, 4, 47, "Output",ExpressionUUID->"ede1ce81-857b-4630-b707-7ce2de8e8bf0"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[274332, 5918, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"7d650ffe-7c0a-4bed-959a-0020c9c8d801",
 CellTags->"SlideShowHeader"],
Cell[274457, 5922, 1197, 29, 135, "Code",ExpressionUUID->"82b6133e-953b-4e3e-aefb-3653647593d3"],
Cell[275657, 5953, 855, 22, 135, "Code",ExpressionUUID->"4e57e41e-2816-4dd8-b245-54c1bcd6ac76"],
Cell[276515, 5977, 1701, 43, 135, "Code",ExpressionUUID->"00821473-d218-457a-905c-efc3c45bca7a"],
Cell[278219, 6022, 916, 24, 135, "Code",ExpressionUUID->"26f0320f-846b-4b97-8b6b-c27aa4a4c4c7"],
Cell[279138, 6048, 297, 8, 70, "Code",ExpressionUUID->"83466529-e08a-4e8f-b3e1-0948b70955cc"],
Cell[CellGroupData[{
Cell[279460, 6060, 429, 8, 167, "Code",ExpressionUUID->"4d3a6291-01eb-4b3c-9675-b0848bbab213"],
Cell[279892, 6070, 173, 4, 47, "Output",ExpressionUUID->"9891a84d-431b-4fd5-bf55-efb995e4985d"],
Cell[280068, 6076, 176, 5, 47, "Output",ExpressionUUID->"15f59229-72d7-4620-960c-0e6462bf5dde"],
Cell[280247, 6083, 188, 5, 47, "Output",ExpressionUUID->"9bebe94a-4ff6-436d-bd33-36121a8d2845"],
Cell[280438, 6090, 186, 5, 47, "Output",ExpressionUUID->"b8c4e7c2-ff15-4ac4-8613-43a184224f31"]
}, Open  ]],
Cell[280639, 6098, 8589, 211, 1543, "Code",ExpressionUUID->"bb7f86f9-764f-4ea3-8fa5-b288447dba02"]
}, Open  ]],
Cell[CellGroupData[{
Cell[289265, 6314, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"2cd1c07b-f9e4-4ff7-af7d-1af10775c5e2",
 CellTags->"SlideShowHeader"],
Cell[289390, 6318, 581, 8, 207, "Text",ExpressionUUID->"f094a076-f02e-40b7-b903-dfecc015133d"],
Cell[289974, 6328, 145, 2, 55, "Text",ExpressionUUID->"53c9ba75-68ee-4351-9994-2172aef434ae"],
Cell[290122, 6332, 1342, 41, 359, "Text",ExpressionUUID->"3df5bec8-2175-4102-97e8-c0ba0cc19f6a"]
}, Open  ]]
}
]
*)

